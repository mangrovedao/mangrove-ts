{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mangrove",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "reason",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mangrove",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "selling",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "restingOrderId",
          "type": "uint256"
        }
      ],
      "name": "OrderSummary",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echoSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_admin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_failing_resting_offer_releases_uncollected_provision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_filled_resting_buy_order_ignores_resting_option",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_filled_resting_buy_order_returns_provision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_iterative_market_order_completes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ownership_relation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_returns_bounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_returns_provision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_returns_residual",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_reverts_when_noPartialFill_enabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_buy_order_can_be_partially_filled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_buy_order_is_successfully_posted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_buy_order_reverts_when_unprovisioned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_offer_retracts_when_unable_to_repost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_user_can_retract_resting_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1368:26:0:-:0;;;-1:-1:-1;;163:28:1;;;;;-1:-1:-1;2152:20:100;;;;3904:34;;;;589:19102:113;1728:237:99;;;1793:64;;;;-1:-1:-1;;;1793:64:99;;;;1368:26:0;1793:64:99;;;;;;;;-1:-1:-1;;;1793:64:99;;;;1853:2;-1:-1:-1;1793:64:99;;;-1:-1:-1;1728:237:99;;;1872:65;;;;-1:-1:-1;;;1872:65:99;;1793:64;1872:65;;;;-1:-1:-1;1872:65:99;;;;;-1:-1:-1;;;1872:65:99;;-1:-1:-1;1872:65:99;;;;-1:-1:-1;1872:65:99;-1:-1:-1;1728:237:99;;;;-1:-1:-1;1728:237:99;;;;1694:271;;;-1:-1:-1;;1694:271:99;;;589:19102:113;;1694:271:99;;1368:26:0;;1694:271:99;;;;;;1793:64;1694:271;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1694:271:99;;;;;;;;;;;;-1:-1:-1;;1694:271:99;;;;;;;;;;;;;;;;;;;;;;589:19102:113;;;;;;;;;-1:-1:-1;2020:32:99;;;-1:-1:-1;;;2020:32:99;;2029:9;2020:32;;;226:51:125;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:125;;;363:39;237:61:1;;2020:8:99;;419:19:125;;2020:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2058:32:99;;;-1:-1:-1;;;2058:32:99;;2069:4;2058:32;;;669:51:125;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:125;;;807:41;2058:32:99;;237:61:1;;-1:-1:-1;2058:8:99;;-1:-1:-1;865:19:125;;;;;-1:-1:-1;;2058:32:99;;;;;;;-1:-1:-1;237:61:1;2058:32:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:19102:113;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:19102:113;;;-1:-1:-1;589:19102:113;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:125;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;589:19102:113;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200020e5760003560e01c806370aa3a5d1162000117578063bbab0fac11620000a1578063ea14b5c3116200006c578063ea14b5c31462000579578063f87c8c0f146200059e578063f8ccbf4714620005b6578063fa7626d414620005d857600080fd5b8063bbab0fac14620004f2578063bfdc35881462000517578063cc273483146200053c578063d56a22f0146200055457600080fd5b80638c00483211620000e25780638c004832146200047457806398ec3a97146200048c578063b84e3eda14620004a4578063ba414fa614620004c957600080fd5b806370aa3a5d146200041457806375089822146200042c578063830ca9681462000444578063875f8597146200045c57600080fd5b80633a76846311620001995780635c36d7f611620001645780635c36d7f614620003985780635d35978d14620003b057806363dee52014620003c85780636cc12a2414620003e057600080fd5b80633a768463146200031e578063400efb291462000343578063521606d2146200035b57806354668b9d146200038057600080fd5b80630b3d8c4211620001da5780630b3d8c4214620002a757806311d70a7d14620002cc5780631e91f8cb14620002e45780633336a63f14620002f957600080fd5b80623a6685146200021b578063026f742314620002355780630645f2be146200024d5780630a9254e4146200028f57600080fd5b366200021657005b600080fd5b3480156200022857600080fd5b5062000233620005f4565b005b3480156200024257600080fd5b50620002336200083f565b3480156200025a57600080fd5b50620002726200026c36600462006f4b565b62000a25565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200029c57600080fd5b506200023362000b4f565b348015620002b457600080fd5b5062000272620002c636600462006f81565b62001a8a565b348015620002d957600080fd5b506200023362001aad565b348015620002f157600080fd5b503362000272565b3480156200030657600080fd5b50620002726200031836600462007048565b62001f2a565b3480156200032b57600080fd5b50620002726000805160206201ed6083398151915281565b3480156200035057600080fd5b506200023362002068565b3480156200036857600080fd5b50620002336200037a36600462007120565b62002400565b3480156200038d57600080fd5b50620002336200253c565b348015620003a557600080fd5b50620002336200265f565b348015620003bd57600080fd5b5062000233620029e9565b348015620003d557600080fd5b506200023362003254565b348015620003ed57600080fd5b5062000405620003ff366004620071ba565b6200344c565b60405190815260200162000286565b3480156200042157600080fd5b50620002336200347b565b3480156200043957600080fd5b50620002336200390d565b3480156200045157600080fd5b506200023362003a48565b3480156200046957600080fd5b506200023362003bf0565b3480156200048157600080fd5b506200027262003d3f565b3480156200049957600080fd5b506200023362003d52565b348015620004b157600080fd5b5062000233620004c336600462007120565b6200404c565b348015620004d657600080fd5b50620004e16200417c565b604051901515815260200162000286565b348015620004ff57600080fd5b506200027262000511366004620071f2565b620042ad565b3480156200052457600080fd5b50620002726200053636600462007048565b6200431e565b3480156200054957600080fd5b506200023362004347565b3480156200056157600080fd5b50620004056200057336600462007230565b6200499e565b3480156200058657600080fd5b506200027262000598366004620071f2565b62004a39565b348015620005ab57600080fd5b506200023362004a49565b348015620005c357600080fd5b50600054620004e19062010000900460ff1681565b348015620005e557600080fd5b50600054620004e19060ff1681565b6040805161018081018252600e546001600160a01b039081168252600f541660208201819052600092820183905260608201839052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526101008201839052610120820183905262632ea061014083015261016082019290925290620006829062004bcb565b60185460405167039bb49f599a000081526001600160a01b039091169030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3600f54620006e5906001600160a01b031662004bcb565b6018546040516701cdda4faccd0000815230916001600160a01b0316907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3601854604051636a1c7d0560e01b81526000916001600160a01b031690636a1c7d059067016345785d8a0000906200076c9086906004016200725f565b60a06040518083038185885af11580156200078b573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620007b291906200731e565b8051600e549192506200080991620007e9906001600160a01b03165b600f546001600160a01b0316670de0b6b3a764000062004c4d565b6040518060600160405280602581526020016201ef166025913962004d05565b6200083b81602001516701cdda4faccd00006040518060600160405280602581526020016201ef166025913962004d05565b5050565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a000090620008f59086906004016200725f565b60a06040518083038185885af115801562000914573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200093b91906200731e565b601854600f54600e54608084015160405163ad97db1b60e01b81529495503031946000946001600160a01b039081169463ad97db1b9462000989949183169392169160019060040162007392565b6020604051808303816000875af1158015620009a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009cf9190620073bb565b905062000a1f3031620009e38385620073eb565b6040518060400160405280601c81526020017f496e636f72726563742070726f766973696f6e2072656365697665640000000081525062004d05565b50505050565b6000811562000a7757306028621e848060405162000a439062006ea5565b62000a519392919062007406565b604051809103906000f08015801562000a6e573d6000803e3d6000fd5b50905062000abb565b306028621e848060405162000a8c9062006eb3565b62000a9a9392919062007406565b604051809103906000f08015801562000ab7573d6000803e3d6000fd5b5090505b6000805160206201ed6083398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b15801562000b3157600080fd5b505af115801562000b46573d6000803e3d6000fd5b50505050919050565b62000b5962004d52565b600d54600e54600f5460405163dc7e98df60e01b81526001600160a01b039384169363dc7e98df9362000b999390821692911690601e9060040162007427565b600060405180830381600087803b15801562000bb457600080fd5b505af115801562000bc9573d6000803e3d6000fd5b5050600d54600f546001600160a01b03918216935063dc7e98df925016600e546001600160a01b0316601e6040518463ffffffff1660e01b815260040162000c149392919062007427565b600060405180830381600087803b15801562000c2f57600080fd5b505af115801562000c44573d6000803e3d6000fd5b5050600d546001600160a01b03169150636817031b9050816040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562000c9e57600080fd5b505af115801562000cb3573d6000803e3d6000fd5b5050600d546001600160a01b0316915030905060405162000cd49062006ec1565b62000ce19291906200744b565b604051809103906000f08015801562000cfe573d6000803e3d6000fd5b50601880546001600160a01b0319166001600160a01b03929092169190911790556040805160028082526060820183526000926020830190803683375050600e5482519293506001600160a01b03169183915060009062000d635762000d6362007465565b6001600160a01b039283166020918202929092010152600f5482519116908290600190811062000d975762000d9762007465565b6001600160a01b039283166020918202929092010152601854604051635293840d60e01b8152911690635293840d9062000dd69084906004016200747b565b600060405180830381600087803b15801562000df157600080fd5b505af115801562000e06573d6000803e3d6000fd5b5050600e5462000e2e92506001600160a01b031690505b305b678ac7230489e8000062004fbe565b600f5462000e45906001600160a01b031662000e1d565b600f54601854604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b39362000eca9391169163f887ea40916004808201926020929091908290030181865afa15801562000ea1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec79190620074ca565b90565b678ac7230489e800006040518363ffffffff1660e01b815260040162000ef2929190620074ea565b6020604051808303816000875af115801562000f12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f38919062007503565b50600e54601854604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b39362000f959391169163f887ea40916004808201926020929091908290030181865afa15801562000ea1573d6000803e3d6000fd5b678ac7230489e800006040518363ffffffff1660e01b815260040162000fbd929190620074ea565b6020604051808303816000875af115801562000fdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001003919062007503565b50600f546200104a906001600160a01b0316600e546001600160a01b03166040518060400160405280600a81526020016939b2b63616ba30b5b2b960b11b81525062001f2a565b601b80546001600160a01b0319166001600160a01b03928316179055600e54620010819116601b546001600160a01b031662000e1f565b601b546000805160206201ed608339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620010e657600080fd5b505af1158015620010fb573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620011409290911690678ac7230489e8000090600401620074ea565b6020604051808303816000875af115801562001160573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001186919062007503565b50601b546000805160206201ed608339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620011ec57600080fd5b505af115801562001201573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620012469290911690678ac7230489e8000090600401620074ea565b6020604051808303816000875af115801562001266573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200128c919062007503565b50600f54620012d2906001600160a01b0316600e546001600160a01b0316604051806040016040528060098152602001683134b216b6b0b5b2b960b91b8152506200431e565b601980546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b81526000805160206201ed608339815191529163c88a5e6d916200132e9190678ac7230489e8000090600401620074ea565b600060405180830381600087803b1580156200134957600080fd5b505af11580156200135e573d6000803e3d6000fd5b5050600e54620013a892506001600160a01b03169050600f546001600160a01b03166040518060400160405280600981526020016830b9b596b6b0b5b2b960b91b8152506200431e565b601a80546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b81526000805160206201ed608339815191529163c88a5e6d91620014049190678ac7230489e8000090600401620074ea565b600060405180830381600087803b1580156200141f57600080fd5b505af115801562001434573d6000803e3d6000fd5b50506019546000805160206201ed60833981519152925063ca669fa791506001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200149d57600080fd5b505af1158015620014b2573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620014f79290911690678ac7230489e8000090600401620074ea565b6020604051808303816000875af115801562001517573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200153d919062007503565b50600f5462001561906001600160a01b03166019546001600160a01b031662000e1f565b600e5462001584906001600160a01b0316601a546001600160a01b031662000e1f565b601a546000805160206201ed608339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620015e957600080fd5b505af1158015620015fe573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620016439290911690678ac7230489e8000090600401620074ea565b6020604051808303816000875af115801562001663573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001689919062007503565b50601954604051637ec95ff360e01b8152670de0b6b3a7640000600482015267016345785d8a00006024820181905261c3506044830152600060648301819052608483015260a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001708573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200172e9190620073bb565b50601954604051637ec95ff360e01b8152670de0b6b3a76400006004820152670186cc6acd4b0000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af1158015620017b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017da9190620073bb565b50601954604051637ec95ff360e01b8152670de0b6b3a764000060048201526701aa535d3d0c0000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001860573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018869190620073bb565b50601a54604051637ec95ff360e01b81526701cdda4faccd00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af11580156200190c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019329190620073bb565b50601a54604051637ec95ff360e01b81526701f161421c8e00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af1158015620019b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019de9190620073bb565b50601a54604051637ec95ff360e01b8152670214e8348c4f00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001a64573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200083b9190620073bb565b600062001a978262000a25565b905062001aa684848362004fcd565b9392505050565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b81529293674563918244f400009391921690636a1c7d0590849062001b649087906004016200725f565b60a06040518083038185885af115801562001b83573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001baa91906200731e565b600f54601854604080516303e21fa960e61b815290519394503031936001600160a01b039384169363095ea7b39362001c0c9391169163f887ea40916004808201926020929091908290030181865afa15801562000ea1573d6000803e3d6000fd5b60006040518363ffffffff1660e01b815260040162001c2d929190620074ea565b6020604051808303816000875af115801562001c4d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c73919062007503565b50600e54601854604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b39362001cd09391169163f887ea40916004808201926020929091908290030181865afa15801562000ea1573d6000803e3d6000fd5b60006040518363ffffffff1660e01b815260040162001cf1929190620074ea565b6020604051808303816000875af115801562001d11573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d37919062007503565b50601b54608083015160405163268e95b360e11b81526004810191909152600160248201526000916001600160a01b031690634d1d2b669060440160a0604051808303816000875af115801562001d92573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001db8919062007523565b50935050505062001e02600082116040518060400160405280601881526020017f736e6970652073686f756c642068617665206661696c65640000000000000000815250620052a9565b601854600f54600e54608086015160405163ad97db1b60e01b81526001600160a01b039485169463ad97db1b9462001e47949082169391169160019060040162007392565b6020604051808303816000875af115801562001e67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e8d9190620073bb565b503031600062001e9e84836200756f565b905062001edc60008211604051806040016040528060158152602001742737903932b632b0b9b2b210383937bb34b9b4b7b760591b815250620052a9565b62001f218186604001518862001ef391906200756f565b62001eff919062007589565b60016040518060600160405280602481526020016201ee616024913962004d05565b50505050505050565b600080600d60009054906101000a90046001600160a01b0316858560405162001f539062006ecf565b62001f6193929190620075ac565b604051809103906000f08015801562001f7e573d6000803e3d6000fd5b5060405163c88a5e6d60e01b81529091506000805160206201ed608339815191529063c88a5e6d9062001fc190849068056bc75e2d6310000090600401620074ea565b600060405180830381600087803b15801562001fdc57600080fd5b505af115801562001ff1573d6000803e3d6000fd5b50506040516318caf8e360e31b81526000805160206201ed60833981519152925063c657c71891506200202b90849087906004016200762c565b600060405180830381600087803b1580156200204657600080fd5b505af11580156200205b573d6000803e3d6000fd5b5092979650505050505050565b600f546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620020c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020e89190620073bb565b600e549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200216b9190620073bb565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052670de0b6b3a76400006080840181905260a08401526701cdda4faccd000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b8152949550919391921690636a1c7d059067016345785d8a000090620022239086906004016200725f565b60a06040518083038185885af115801562002242573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200226991906200731e565b600f549091506200233b906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620022c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022ee9190620073bb565b6020830151620022ff90876200756f565b6040518060400160405280601781526020017f696e636f72726563742071756f74652062616c616e636500000000000000000081525062004d05565b600e5462000a1f906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002397573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023bd9190620073bb565b8251620023cb9086620073eb565b60405180604001604052806016815260200175696e636f727265637420626173652062616c616e636560501b81525062004d05565b604080516020810190915260008082525b82518110156200253057825182906000805160206201ed6083398151915290636900a3ae908690859081106200244b576200244b62007465565b60200260200101516040518263ffffffff1660e01b81526004016200247291815260200190565b600060405180830381865afa15801562002490573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620024ba919081019062007652565b604051602001620024cd929190620076c9565b604051602081830303815290604052915060018351620024ee91906200756f565b8110156200251b5781604051602001620025099190620076fc565b60405160208183030381529060405291505b80620025278162007724565b91505062002411565b506200083b81620052f3565b600d5460408051635aa6e67560e01b815290516200265d926001600160a01b031691635aa6e6759160048083019260209291908290030181865afa15801562002589573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025af9190620074ca565b601860009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026299190620074ca565b60405180604001604052806015815260200174496e76616c69642061646d696e206164647265737360581b8152506200533a565b565b601a54604051637a943a3760e01b8152600160048201526001600160a01b0390911690637a943a3790602401600060405180830381600087803b158015620026a657600080fd5b505af1158015620026bb573d6000803e3d6000fd5b5050600d54620026d792506001600160a01b0316905062004bcb565b601854600f54600e546001600160a01b039283169291821691167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec476200271d82620007ce565b600e546701cdda4faccd00009060009062002757906001600160a01b03165b600f546001600160a01b0316670de0b6b3a764000062005399565b60408051948552602085019390935291830152606082015260800160405180910390a4600d5462002791906001600160a01b031662004bcb565b601854600f54600e546001600160a01b039283169291821691167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47620027d782620007ce565b600e546701cdda4faccd000090600090620027fb906001600160a01b03166200273c565b60408051948552602085019390935291830152606082015260800160405180910390a460185462002835906001600160a01b031662004bcb565b600f54600e54600d5430926001600160a01b03908116928116916000805160206201ed808339815191529116600062002884845b600f546001600160a01b0316671bc16d674ec8000062004c4d565b67039bb49f599a0000600080604051620028a49695949392919062007740565b60405180910390a46040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840181905261012084015262632ea061014084015261016083018190526018549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a000090620029629086906004016200725f565b60a06040518083038185885af115801562002981573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620029a891906200731e565b8051600e549192506200083b91620029c9906001600160a01b031662002869565b6040518060600160405280602781526020016201eda06027913962004d05565b6040805161018081018252600e546001600160a01b039081168252600f548116602080840191909152600083850181905260608401819052671bc16d674ec800006080850181905260a085015267039bb49f599a000060c08501526703893b4000c5000060e08501526001610100850152610120840181905262632ea0610140850152610160840181905260185485516303e21fa960e61b815295519495919493169263f887ea40926004808401939192918290030181865afa15801562002ab5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002adb9190620074ca565b600f546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262002b109291169030906004016200744b565b602060405180830381865afa15801562002b2e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b549190620073bb565b90506000601860009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002bac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bd29190620074ca565b600f546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262002c079291169030906004016200744b565b602060405180830381865afa15801562002c25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c4b9190620073bb565b600d5460185491925062002d15916001600160a01b03918216916370a0823191166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002cb1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002cd79190620073bb565b60006040518060400160405280601b81526020017f496e76616c69642062616c616e6365206f6e204d616e67726f7665000000000081525062004d05565b60185462002d2c906001600160a01b031662004bcb565b600f54600e54600d5430926001600160a01b03908116928116916000805160206201ed808339815191529116600062002d6584620007ce565b6701cdda4faccd00006000600460405162002d869695949392919062007740565b60405180910390a4601854604051636a1c7d0560e01b81526000916001600160a01b031690636a1c7d059067016345785d8a00009062002dcb9088906004016200725f565b60a06040518083038185885af115801562002dea573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002e1191906200731e565b905062002e3f60008260800151116040518060600160405280603081526020016201ee3160309139620052a9565b600d54600f54600e5460808401516040516368c13d6b60e01b81526000946001600160a01b03908116946368c13d6b9462002e84949183169392169160040162007427565b602060405180830381865afa15801562002ea2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ec89190620073bb565b905062002f20606082901c6001600160601b03166060840151845162002eef9190620073eb565b8760a0015162002f0091906200756f565b6040518060600160405280602581526020016201ee0c6025913962004d05565b62002f646001600160601b03821683602001518760e0015162002f4491906200756f565b6040518060600160405280602581526020016201eecf6025913962004d05565b601854600f54600e54608085015160405163f92495e560e01b815262003022946001600160a01b039081169463f92495e59462002fab949183169392169160040162007427565b602060405180830381865afa15801562002fc9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fef9190620074ca565b306040518060400160405280601381526020017224b73b30b634b21037b33332b91037bbb732b960691b8152506200533a565b601854604080516303e21fa960e61b8152905162003153926001600160a01b03169163f887ea409160048083019260209291908290030181865afa1580156200306f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030959190620074ca565b600f546040516302b427ef60e11b81526001600160a01b03928316926305684fde92620030ca9291169030906004016200744b565b602060405180830381865afa158015620030e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200310e9190620073bb565b60208401516200311f90876200756f565b60405180604001604052806015815260200174496e76616c69642071756f74652062616c616e636560581b81525062004d05565b601854604080516303e21fa960e61b815290516200324d926001600160a01b03169163f887ea409160048083019260209291908290030181865afa158015620031a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031c69190620074ca565b600e546040516302b427ef60e11b81526001600160a01b03928316926305684fde92620031fb9291169030906004016200744b565b602060405180830381865afa15801562003219573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200323f9190620073bb565b83516200311f9086620073eb565b5050505050565b600030601a5460405160016228e33160e11b03198152600160048201526001600160a01b0392831631935091169063ffae399e90602401600060405180830381600087803b158015620032a657600080fd5b505af1158015620032bb573d6000803e3d6000fd5b50506040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526101008301819052610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b815292955093509190911690636a1c7d059067016345785d8a000090620033769086906004016200725f565b60a06040518083038185885af115801562003395573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620033bc91906200731e565b90506200340660008260400151116040518060400160405280601981526020017f426f756e74792073686f756c64206e6f74206265207a65726f00000000000000815250620052a9565b620034478160400151846200341c9190620073eb565b306001600160a01b0316316040518060600160405280602381526020016201ede96023913962004d05565b505050565b60006200345b82600a62007870565b6200346785856200499e565b62003473919062007589565b949350505050565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600092820183905260608201839052671bc16d674ec800006080830181905260a083015267016345785d8a000060c0830181905260e08301526001610100830181905261012083015262632ea061014083015261016082019290925260185490916200350d911662004bcb565b600f54600e54600d5460405130936001600160a01b03908116938116926000805160206201ed808339815191529262003556929091169060009081908190819060049062007740565b60405180910390a4601854604051636a1c7d0560e01b81526001600160a01b0390911690636a1c7d059067016345785d8a0000906200359a9085906004016200725f565b60a06040518083038185885af1158015620035b9573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620035e091906200731e565b50601854620035f8906001600160a01b031662004bcb565b600f54600e54600d5460405130936001600160a01b03908116938116926000805160206201ed808339815191529262003641929091169060009081908190819060059062007740565b60405180910390a4601854604051636a1c7d0560e01b81526001600160a01b0390911690636a1c7d059067016345785d8a000090620036859085906004016200725f565b60a06040518083038185885af1158015620036a4573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620036cb91906200731e565b50601854600f54600e546040516337b966bf60e01b815260009384936001600160a01b03918216936337b966bf936200370e9330938116921690600401620075ac565b600060405180830381865afa1580156200372c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620037569190810190620078eb565b91509150620037a2825160021480156200376f57508151155b60405180604001604052806014815260200173125b98dbdc9c9958dd081bd999995c881b1a5cdd60621b815250620052a9565b601854600f54600e5484516001600160a01b039384169363ad97db1b9381169216908690600090620037d857620037d862007465565b602002602001015160006040518563ffffffff1660e01b815260040162003803949392919062007392565b6020604051808303816000875af115801562003823573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620038499190620073bb565b50601854600f54600e546040516337b966bf60e01b81526001600160a01b03938416936337b966bf9362003888933093918316921690600401620075ac565b600060405180830381865afa158015620038a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620038d09190810190620078eb565b8151919350915062003447906001148015620038ed575081516001145b6040518060600160405280602281526020016201eef460229139620052a9565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052670de0b6b3a76400006080840181905260a08401526701cdda4faccd000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b815230319491929190911690636a1c7d0590620039bc9085906004016200725f565b60a0604051808303816000875af1158015620039dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a0291906200731e565b905062003447306001600160a01b0316318460405180604001604052806015815260200174696e636f7272656374207765692062616c616e636560581b81525062004d05565b6040805161018081018252600e546001600160a01b039081168252600f54166020820152600081830181905260608201819052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526001610100830152610120820181905262632ea0610140830152610160820152905163f28dceb360e01b81526000805160206201ed608339815191529063f28dceb39062003b3c906004016020808252602c908201527f4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f60408201526b3ab3b4283937bb34b9b4b7b760a11b606082015260800190565b600060405180830381600087803b15801562003b5757600080fd5b505af115801562003b6c573d6000803e3d6000fd5b5050601854604051636a1c7d0560e01b81526001600160a01b039091169250636a1c7d059150655af3107a40009062003baa9085906004016200725f565b60a06040518083038185885af115801562003bc9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200083b91906200731e565b6040805161018081018252600e546001600160a01b039081168252600f54166020820152600181830152600060608201819052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526101008201819052610120820181905262632ea0610140830152610160820152905163f28dceb360e01b81526000805160206201ed608339815191529063f28dceb39062003ccf9060040160208082526019908201527f6d67764f726465722f6d6f2f6e6f5061727469616c46696c6c00000000000000604082015260600190565b600060405180830381600087803b15801562003cea57600080fd5b505af115801562003cff573d6000803e3d6000fd5b5050601854604051636a1c7d0560e01b81526001600160a01b039091169250636a1c7d05915067016345785d8a00009062003baa9085906004016200725f565b600062003d4d600062000a25565b905090565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a00009062003e089086906004016200725f565b60a06040518083038185885af115801562003e27573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062003e4e91906200731e565b600d54600f54600e54604051630fbb669160e41b81529394503031936001600160a01b039384169363fbb669109362003e9b9390821692911690670de0b6b3a76400009060040162007427565b600060405180830381600087803b15801562003eb657600080fd5b505af115801562003ecb573d6000803e3d6000fd5b5050600d5462003ee792506001600160a01b0316905062004bcb565b600e546001600160a01b0316600f546001600160a01b0391821691166001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b846080015160405162003f4291815260200190565b60405180910390a3601b54608083015160405163268e95b360e11b81526004810191909152600060248201819052916001600160a01b031690634d1d2b669060440160a0604051808303816000875af115801562003fa4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003fca919062007523565b50505050905062004000816040518060400160405280600c81526020016b1cdb9a5c194819985a5b195960a21b815250620052a9565b62000a1f306001600160a01b031631836040518060400160405280601e81526020017f726574726163742073686f756c64206e6f7420646570726f766973696f6e000081525062004d05565b604080516020810190915260008082525b82518110156200253057825182906000805160206201ed6083398151915290636900a3ae9086908590811062004097576200409762007465565b60200260200101516040518263ffffffff1660e01b8152600401620040be91815260200190565b600060405180830381865afa158015620040dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004106919081019062007652565b60405160200162004119929190620076c9565b6040516020818303038152906040529150600183516200413a91906200756f565b811015620041675781604051602001620041559190620076fc565b60405160208183030381529060405291505b80620041738162007724565b9150506200405d565b60008054610100900460ff16156200419d5750600054610100900460ff1690565b60006000805160206201ed608339815191523b15620042a8576040516000906000805160206201ed60833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4906200420a9083906519985a5b195960d21b90602001620074ea565b60408051601f19818403018152908290526200422a929160200162007956565b60408051601f1981840301815290829052620042469162007989565b6000604051808303816000865af19150503d806000811462004285576040519150601f19603f3d011682016040523d82523d6000602084013e6200428a565b606091505b5091505080806020019051810190620042a4919062007503565b9150505b919050565b600d54600090620042c7906001600160a01b03166200542b565b50600d546040516001600160a01b039091169084908490620042e99062006edd565b620042f793929190620075ac565b604051809103906000f08015801562004314573d6000803e3d6000fd5b5090505b92915050565b600080600d60009054906101000a90046001600160a01b0316858560405162001f539062006eeb565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a000090620043fd9086906004016200725f565b60a06040518083038185885af11580156200441c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200444391906200731e565b600e549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620044a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620044c69190620073bb565b90506000601860009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200451e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045449190620074ca565b600f546040516302b427ef60e11b81526001600160a01b03928316926305684fde92620045799291169030906004016200744b565b602060405180830381865afa15801562004597573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045bd9190620073bb565b601b54608085015160405163268e95b360e11b8152600481019190915267016345785d8a000060248201529192506000918291829182916001600160a01b031690634d1d2b669060440160a0604051808303816000875af115801562004627573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200464d919062007523565b9450509350935093506200468e846040518060400160405280601481526020017314995cdd1a5b99c81bdc99195c8819985a5b195960621b815250620052a9565b600f54620046e1908490620046c1906001600160a01b0316600e546001600160a01b031667016345785d8a000062004c4d565b6040518060600160405280602a81526020016201ee85602a913962004d05565b600e546200478f906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200473d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047639190620073bb565b6200476f8489620073eb565b6040518060600160405280602b81526020016201ed35602b913962004d05565b601854604080516303e21fa960e61b81529051620048cf926001600160a01b03169163f887ea409160048083019260209291908290030181865afa158015620047dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620048029190620074ca565b600f546040516302b427ef60e11b81526001600160a01b03928316926305684fde92620048379291169030906004016200744b565b602060405180830381865afa15801562004855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200487b9190620073bb565b620048878386620073eb565b6200489390886200756f565b6040518060400160405280601e81526020017f496e636f727265637420746f6b656e2062616c616e6365206f6e206d676f000081525062004d05565b600d54600f54600e5460808a01516040516368c13d6b60e01b81526000946001600160a01b03908116946368c13d6b9462004914949183169392169160040162007427565b602060405180830381865afa15801562004932573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620049589190620073bb565b9050620049936001600160601b03821667016345785d8a00008a602001518c60c001516200498791906200756f565b62002f4491906200756f565b505050505050505050565b6000620049aa62005504565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620049eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a119190620079a7565b60ff16905062004a2062005510565b62004a2d81600a62007870565b620034739084620079cc565b600062001aa68383600062001a8a565b6040805161018081018252600e546001600160a01b039081168252600f5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526101008301819052610120830181905262632ea061014084015261016083018190526018549351636a1c7d0560e01b815230319491929190911690636a1c7d059067016345785d8a00009062004b029086906004016200725f565b60a06040518083038185885af115801562004b21573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062004b4891906200731e565b8051600e5491925062004b9b9162004b69906001600160a01b0316620007ce565b60405180604001604052806013815260200172125b98dbdc9c9958dd081d185ad95c8819dbdd606a1b81525062004d05565b6200344783306001600160a01b0316316040518060600160405280602281526020016201edc76022913962004d05565b6040516381bad6f360e01b8152600160048201819052602482018190526044820181905260648201526001600160a01b03821660848201526000805160206201ed60833981519152906381bad6f39060a401600060405180830381600087803b15801562004c3857600080fd5b505af11580156200324d573d6000803e3d6000fd5b600d546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a9062004c8690889088906004016200744b565b6040805180830381865afa15801562004ca3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004cc99190620079ee565b9150612710905062004ce461ffff60e884901c16826200756f565b62004cf09085620079cc565b62004cfc919062007589565b95945050505050565b81831462003447577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162004d3e919062007a13565b60405180910390a1620034478383620055d1565b601354604051309160119160129160ff169062004d6f9062006ef9565b62004d7e949392919062007aeb565b604051809103906000f08015801562004d9b573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff9091169062004dda9062006ef9565b62004de9949392919062007aeb565b604051809103906000f08015801562004e06573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e5460105462004e409391909116919060ff1662001a8a565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b15801562004ea057600080fd5b505af115801562004eb5573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b3945062004ef4935091169060001990600401620074ea565b6020604051808303816000875af115801562004f14573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f3a919062007503565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262004f759291169060001990600401620074ea565b6020604051808303816000875af115801562004f95573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004fbb919062007503565b50565b620034478383836000620056b7565b62004fd8836200542b565b5062004fe4826200542b565b50601754604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b1580156200504c57600080fd5b505af115801562005061573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b158015620050cc57600080fd5b505af1158015620050e1573d6000803e3d6000fd5b505050506000805160206201eeaf83398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200514c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005176919081019062007652565b6040518363ffffffff1660e01b8152600401620051959291906200762c565b600060405180830381600087803b158015620051b057600080fd5b505af1158015620051c5573d6000803e3d6000fd5b505050506000805160206201eeaf83398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562005230573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200525a919081019062007652565b6040518363ffffffff1660e01b8152600401620052799291906200762c565b600060405180830381600087803b1580156200529457600080fd5b505af115801562001f21573d6000803e3d6000fd5b816200083b577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620052e0919062007a13565b60405180910390a16200083b82620058f9565b62004fbb816040516024016200530a919062007b3a565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262005960565b816001600160a01b0316836001600160a01b03161462003447577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162005385919062007a13565b60405180910390a162003447838362005981565b600d546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a90620053d290889088906004016200744b565b6040805180830381865afa158015620053ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620054159190620079ee565b9150612710905060e882901c61ffff1662004ce4565b60006001600160a01b038216620054f5576000805160206201ed158339815191526040516200548b906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a1620054f562005a6a565b506001600160a01b0316151590565b6200265d600062005b6e565b600854600103620055865760095460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201ed608339815191529063ca669fa7906024015b600060405180830381600087803b1580156200557157600080fd5b505af115801562000a1f573d6000803e3d6000fd5b6008546002036200265d576009546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201ed60833981519152906306447d569060240162005556565b8082146200083b576000805160206201ed15833981519152604051620056339060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200566c919062007b4f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051620056a5919062007b88565b60405180910390a16200083b62005a6a565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200570d9162007989565b6000604051808303816000865af19150503d80600081146200574c576040519150601f19603f3d011682016040523d82523d6000602084013e62005751565b606091505b509150506000818060200190518101906200576d9190620073bb565b9050620057df84620057d887620057af6370a0823160e01b6200579260018d62005cd3565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062005cf8565b8215620058f15760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200582a919062007989565b6000604051808303816000865af19150503d806000811462005869576040519150601f19603f3d011682016040523d82523d6000602084013e6200586e565b606091505b509150506000818060200190518101906200588a9190620073bb565b905082861015620058b557620058a186846200756f565b620058ad90826200756f565b9050620058d0565b620058c183876200756f565b620058cd9082620073eb565b90505b620058ee81620057d86318160ddd60e01b6200579260018d62005cd3565b50505b505050505050565b8062004fbb576000805160206201ed158339815191526040516200594e9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162004fbb62005a6a565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b806001600160a01b0316826001600160a01b0316146200083b576000805160206201ed15833981519152604051620059f89060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162005a31919062007bb3565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051620056a5919062007bf8565b6000805160206201ed608339815191523b1562005b5d576040516000906000805160206201ed60833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062005ad89083906519985a5b195960d21b9060019060200162007406565b60408051601f198184030181529082905262005af8929160200162007956565b60408051601f198184030181529082905262005b149162007989565b6000604051808303816000865af19150503d806000811462005b53576040519150601f19603f3d011682016040523d82523d6000602084013e62005b58565b606091505b505050505b6000805461ff001916610100179055565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa15801562005bb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005bd69190620074ca565b600980546001600160a01b0319166001600160a01b03929092169182179055301462004fbb57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005c3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c619190620074ca565b6009546001600160a01b0390811691161462005c7f57600160085550565b801562004fbb576002600855604080516390c5013b60e01b815290516000805160206201ed60833981519152916390c5013b91600480830192600092919082900301818387803b15801562004c3857600080fd5b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b6200083b8282600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562005d7157602002820191906000526020600020905b81548152602001906001019080831162005d5c575b5050505050905060008362005d868362006070565b60405160200162005d9992919062007956565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162005ded91869188910162007c23565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662005e285762005e268762006124565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162005e6991879189910162007c23565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162005eb0919062007989565b600060405180830381855afa9150503d806000811462005eed576040519150601f19603f3d011682016040523d82523d6000602084013e62005ef2565b606091505b50915062005f0f90508162005f09886020620079cc565b62006e1b565b604051630667f9d760e41b8152909250600091506000805160206201ed608339815191529063667f9d709062005f4c908b908790600401620074ea565b6020604051808303816000875af115801562005f6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f929190620073bb565b905080821462005fbf5760405162461bcd60e51b815260040162005fb69062007c5f565b60405180910390fd5b6040516370ca10bb60e01b81526000805160206201ed60833981519152906370ca10bb9062005ff7908b9087908e9060040162007406565b600060405180830381600087803b1580156200601257600080fd5b505af115801562006027573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200605c60028b01600062006f07565b896004016000905550505050505050505050565b6060600082516020620060849190620079cc565b67ffffffffffffffff8111156200609f576200609f62006fd3565b6040519080825280601f01601f191660200182016040528015620060ca576020820181803683370190505b50905060005b83518110156200611d576000848281518110620060f157620060f162007465565b602002602001015190508082602002602001840152508080620061149062007724565b915050620060d0565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200619657602002820191906000526020600020905b81548152602001906001019080831162006181575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620061e29250859187910162007c23565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562006281576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200625191859187910162007c23565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836200628f8362006070565b604051602001620062a292919062007956565b60405160208183030381529060405290506000805160206201eeaf83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200630157600080fd5b505af115801562006316573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162006337919062007989565b600060405180830381855afa9150503d806000811462006374576040519150601f19603f3d011682016040523d82523d6000602084013e62006379565b606091505b5091506200639090508162005f09876020620079cc565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206201ed60833981519152906365bc9481906024016000604051808303816000875af1158015620063ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620064179190810190620078eb565b5090508051600103620066e05760006000805160206201eeaf83398151915260001c6001600160a01b031663667f9d7089846000815181106200645e576200645e62007465565b60200260200101516040518363ffffffff1660e01b815260040162006485929190620074ea565b6020604051808303816000875af1158015620064a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620064cb9190620073bb565b9050806200652f577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106200650b576200650b62007465565b602002602001015160001c60405162006526929190620074ea565b60405180910390a15b808314620065515760405162461bcd60e51b815260040162005fb69062007c5f565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200658992919062007c23565b6040516020818303038152906040528051906020012085600081518110620065b557620065b562007465565b602002602001015160001c604051620065d2949392919062007cfa565b60405180910390a181600081518110620065f057620065f062007465565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c16835284528082209051929390926200663b918a918c910162007c23565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391620066a5918a918c910162007c23565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062006c9e565b60018151111562006c2d5760005b815181101562006c265760006000805160206201eeaf83398151915260001c6001600160a01b031663667f9d708a85858151811062006731576200673162007465565b60200260200101516040518363ffffffff1660e01b815260040162006758929190620074ea565b6020604051808303816000875af115801562006778573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200679e9190620073bb565b90508062006801577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110620067dd57620067dd62007465565b602002602001015160001c604051620067f8929190620074ea565b60405180910390a15b6000805160206201eeaf83398151915260001c6001600160a01b03166370ca10bb8a85858151811062006838576200683862007465565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620068669392919062007406565b600060405180830381600087803b1580156200688157600080fd5b505af115801562006896573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051620068b8919062007989565b600060405180830381855afa9150503d8060008114620068f5576040519150601f19603f3d011682016040523d82523d6000602084013e620068fa565b606091505b509092509050620069128162005f098b6020620079cc565b955081801562006926575061133760f01b86145b1562006b79577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200696492919062007c23565b604051602081830303815290604052805190602001208888815181106200698f576200698f62007465565b602002602001015160001c604051620069ac949392919062007cfa565b60405180910390a1848481518110620069c957620069c962007465565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262006a14918d918f910162007c23565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162006aa192919062007c23565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206201eeaf83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006b135762006b1362007465565b6020026020010151866040518463ffffffff1660e01b815260040162006b3c9392919062007406565b600060405180830381600087803b15801562006b5757600080fd5b505af115801562006b6c573d6000803e3d6000fd5b5050505050505062006c26565b6000805160206201eeaf83398151915260001c6001600160a01b03166370ca10bb8c87878151811062006bb05762006bb062007465565b6020026020010151866040518463ffffffff1660e01b815260040162006bd99392919062007406565b600060405180830381600087803b15801562006bf457600080fd5b505af115801562006c09573d6000803e3d6000fd5b50505050505050808062006c1d9062007724565b915050620066ee565b5062006c9e565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005fb6565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162006ce29188918a910162007c23565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006d715760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162005fb6565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562006da260028a01600062006f07565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162006de89188918a910162007c23565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162006e3257845162006e35565b60205b905060005b8181101562006e9b5762006e50816008620079cc565b8662006e5d8388620073eb565b8151811062006e705762006e7062007465565b01602001516001600160f81b031916901c92909217918062006e928162007724565b91505062006e3a565b5090949350505050565b61567e8062007d2b83390190565b6155e4806200d3a983390190565b615b1c806201298d83390190565b61120680620184a983390190565b61206d80620196af83390190565b611a41806201b71c83390190565b611bb8806201d15d83390190565b508054600082559060005260206000209081019062004fbb91905b8082111562006f38576000815560010162006f22565b5090565b801515811462004fbb57600080fd5b60006020828403121562006f5e57600080fd5b813562001aa68162006f3c565b6001600160a01b038116811462004fbb57600080fd5b60008060006060848603121562006f9757600080fd5b833562006fa48162006f6b565b9250602084013562006fb68162006f6b565b9150604084013562006fc88162006f3c565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562007015576200701562006fd3565b604052919050565b600067ffffffffffffffff8211156200703a576200703a62006fd3565b50601f01601f191660200190565b6000806000606084860312156200705e57600080fd5b83356200706b8162006f6b565b925060208401356200707d8162006f6b565b9150604084013567ffffffffffffffff8111156200709a57600080fd5b8401601f81018613620070ac57600080fd5b8035620070c3620070bd826200701d565b62006fe9565b818152876020838501011115620070d957600080fd5b816020840160208301376000602083830101528093505050509250925092565b600067ffffffffffffffff82111562007116576200711662006fd3565b5060051b60200190565b600060208083850312156200713457600080fd5b823567ffffffffffffffff8111156200714c57600080fd5b8301601f810185136200715e57600080fd5b80356200716f620070bd82620070f9565b81815260059190911b820183019083810190878311156200718f57600080fd5b928401925b82841015620071af5783358252928401929084019062007194565b979650505050505050565b600080600060608486031215620071d057600080fd5b8335620071dd8162006f6b565b95602085013595506040909401359392505050565b600080604083850312156200720657600080fd5b8235620072138162006f6b565b91506020830135620072258162006f6b565b809150509250929050565b600080604083850312156200724457600080fd5b8235620072518162006f6b565b946020939093013593505050565b81516001600160a01b03168152610180810160208301516200728c60208401826001600160a01b03169052565b506040830151620072a1604084018215159052565b506060830151620072b6606084018215159052565b506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151620072f48285018215159052565b50506101208381015190830152610140808401519083015261016092830151929091019190915290565b600060a082840312156200733157600080fd5b60405160a0810181811067ffffffffffffffff8211171562007357576200735762006fd3565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b600060208284031215620073ce57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620074015762007401620073d5565b500190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015620074be5783516001600160a01b03168352928401929184019160010162007497565b50909695505050505050565b600060208284031215620074dd57600080fd5b815162001aa68162006f6b565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200751657600080fd5b815162001aa68162006f3c565b600080600080600060a086880312156200753c57600080fd5b8551620075498162006f3c565b602087015160408801516060890151608090990151929a91995097965090945092505050565b600082821015620075845762007584620073d5565b500390565b600082620075a757634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b0393841681529183166020830152909116604082015260600190565b60005b83811015620075ec578181015183820152602001620075d2565b8381111562000a1f5750506000910152565b6000815180845262007618816020860160208601620075cf565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200347390830184620075fe565b6000602082840312156200766557600080fd5b815167ffffffffffffffff8111156200767d57600080fd5b8201601f810184136200768f57600080fd5b8051620076a0620070bd826200701d565b818152856020838501011115620076b657600080fd5b62004cfc826020830160208601620075cf565b60008351620076dd818460208801620075cf565b835190830190620076f3818360208801620075cf565b01949350505050565b6000825162007710818460208701620075cf565b61016160f51b920191825250600201919050565b600060018201620077395762007739620073d5565b5060010190565b6001600160a01b03969096168652931515602086015260408501929092526060840152608083015260a082015260c00190565b600181815b80851115620077b4578160001904821115620077985762007798620073d5565b80851615620077a657918102915b93841c939080029062007778565b509250929050565b600082620077cd5750600162004318565b81620077dc5750600062004318565b8160018114620077f55760028114620078005762007820565b600191505062004318565b60ff841115620078145762007814620073d5565b50506001821b62004318565b5060208310610133831016604e8410600b841016171562007845575081810a62004318565b62007851838362007773565b8060001904821115620078685762007868620073d5565b029392505050565b600062001aa68383620077bc565b600082601f8301126200789057600080fd5b81516020620078a3620070bd83620070f9565b82815260059290921b84018101918181019086841115620078c357600080fd5b8286015b84811015620078e05780518352918301918301620078c7565b509695505050505050565b60008060408385031215620078ff57600080fd5b825167ffffffffffffffff808211156200791857600080fd5b62007926868387016200787e565b935060208501519150808211156200793d57600080fd5b506200794c858286016200787e565b9150509250929050565b6001600160e01b03198316815281516000906200797b816004850160208701620075cf565b919091016004019392505050565b600082516200799d818460208701620075cf565b9190910192915050565b600060208284031215620079ba57600080fd5b815160ff8116811462001aa657600080fd5b6000816000190483118215151615620079e957620079e9620073d5565b500290565b6000806040838503121562007a0257600080fd5b505080516020909101519092909150565b60408152600560408201526422b93937b960d91b606082015260806020820152600062001aa66080830184620075fe565b8054600090600181811c908083168062007a5f57607f831692505b6020808410820362007a8157634e487b7160e01b600052602260045260246000fd5b8388526020880182801562007a9f576001811462007ab15762007ade565b60ff1987168252828201975062007ade565b60008981526020902060005b8781101562007ad85781548482015290860190840162007abd565b83019850505b5050505050505092915050565b6001600160a01b038516815260806020820181905260009062007b119083018662007a44565b828103604084015262007b25818662007a44565b91505060ff8316606083015295945050505050565b60208152600062001aa66020830184620075fe565b60408152600062007b7a60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062007b7a60408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062007bde60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062007bde60408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b8381101562007c4f5781518552938201939082019060010162007c31565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea2646970667358221220f1963d9c2b3d628f1434924334993b3b07ae40980b0db947c650656b65407bf364736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220606ee9d9815e4c17941d70526d6fb9577a74084308c36927d5d3f4357268a87964736f6c634300080e003360a06040523480156200001157600080fd5b5060405162005b1c38038062005b1c833981016040819052620000349162000612565b8181816040516200004590620005eb565b604051809103906000f08015801562000062573d6000803e3d6000fd5b5062015f9082828282813380620000c05760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b80620000d66200026960201b6200292b1760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146200014b5760405162461bcd60e51b815260206004820152601b60248201527f4d616e67726f76654f666665722f676173726571546f6f4869676800000000006044820152606401620000b7565b6001600160a01b038216608052806200016f6200028d602090811b6200294f17901c565b5550506001600160a01b038216620001bf5760405162461bcd60e51b815260206004820152601260248201527126bab63a34aab9b2b917983c2937baba32b960711b6044820152606401620000b7565b620001ca82620002b1565b505050505050336001600160a01b0316816001600160a01b0316146200025f57620001f5816200045b565b620001ff62000556565b60405163e9333fab60e01b81526001600160a01b038381166004830152919091169063e9333fab90602401600060405180830381600087803b1580156200024557600080fd5b505af11580156200025a573d6000803e3d6000fd5b505050505b5050505062000651565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b620002bb620005c5565b6001600160a01b0316336001600160a01b03161480620002ee57506080516001600160a01b0316336001600160a01b0316145b6200033c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000b7565b6001600160a01b038116620003945760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401620000b7565b80620003aa6200028d60201b6200294f1760201c565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b1580156200040257600080fd5b505af115801562000417573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559250602001905060405180910390a150565b62000465620005c5565b6001600160a01b0316336001600160a01b031614620004c75760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000b7565b6001600160a01b0381166200051f5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401620000b7565b80620005356200026960201b6200292b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6000806200056e6200028d60201b6200294f1760201c565b600101546001600160a01b0316905080620005c05760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401620000b7565b919050565b6000620005dc6200026960201b6200292b1760201c565b546001600160a01b0316919050565b6110048062004b1883390190565b6001600160a01b03811681146200060f57600080fd5b50565b600080604083850312156200062657600080fd5b82516200063381620005f9565b60208401519092506200064681620005f9565b809150509250929050565b6080516143e762000731600039600081816103da015281816107cb015281816109c401528181610b6701528181610c2501528181610ee10152818161125c015281816116d40152818161175a01528181611919015281816119ab01528181611b6801528181611c9001528181611d4b01528181611df0015281816120a0015281816122ac01528181612338015281816124980152818161285f01528181612a7e01528181612b0701528181612b9901528181612e2201528181612fe1015281816132fd0152818161341f015281816139850152613c4801526143e76000f3fe6080604052600436106101bb5760003560e01c80639f2211cb116100ec578063e9333fab1161008a578063f851a44011610064578063f851a4401461054b578063f887ea4014610560578063f92495e514610575578063fc488a381461059557600080fd5b8063e9333fab146104eb578063eedc966a1461050b578063f259cd271461052b57600080fd5b8063d1baa1ef116100c6578063d1baa1ef14610469578063db11851e1461047e578063dec8c86b1461049e578063e4c34f84146104cb57600080fd5b80639f2211cb14610414578063ad97db1b14610434578063cd3293de1461045457600080fd5b80635293840d116101595780636c49c32c116101335780636c49c32c146103735780637144df241461039357806384b627f9146103b357806399fa5e2d146103c857600080fd5b80635293840d146102eb5780635486c95f1461030b5780636a1c7d051461031e57600080fd5b806337b966bf1161019557806337b966bf146102315780633d3d130d1461025f5780633d77fcde1461027f5780634e7effa81461029f57600080fd5b806301e33667146101c757806303eb17e2146101fc57806310aded601461021e57600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e2366004613cda565b6105b5565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b5061021c610217366004613d67565b6106c7565b005b61021c61022c366004613da9565b610718565b34801561023d57600080fd5b5061025161024c366004613dbc565b61077f565b6040516101f3929190613e42565b34801561026b57600080fd5b5061021c61027a366004613e83565b610b65565b34801561028b57600080fd5b5061021c61029a366004613ec6565b610c89565b3480156102ab57600080fd5b506102dd6102ba366004613cda565b600160209081526000938452604080852082529284528284209052825290205481565b6040519081526020016101f3565b3480156102f757600080fd5b5061021c610306366004613d67565b610c93565b6102dd610319366004613da9565b610d17565b61033161032c366004613ee3565b610d38565b6040516101f39190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b34801561037f57600080fd5b506102dd61038e366004613ef6565b611756565b34801561039f57600080fd5b5061021c6103ae366004613f13565b6118c3565b3480156103bf57600080fd5b506101e7611b32565b3480156103d457600080fd5b506103fc7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f3565b34801561042057600080fd5b5061021c61042f366004613ec6565b611b51565b34801561044057600080fd5b506102dd61044f366004613f51565b611c31565b34801561046057600080fd5b506103fc611faa565b34801561047557600080fd5b506102dd611fd5565b34801561048a57600080fd5b5061021c610499366004613ec6565b612073565b3480156104aa57600080fd5b506104be6104b9366004613fa4565b6121ed565b6040516101f39190614009565b3480156104d757600080fd5b506102dd6104e6366004614056565b61229e565b3480156104f757600080fd5b5061021c610506366004613ec6565b61253a565b34801561051757600080fd5b506102dd610526366004613ec6565b6125f2565b34801561053757600080fd5b5061021c610546366004613ec6565b612671565b34801561055757600080fd5b506103fc612746565b34801561056c57600080fd5b506103fc61275f565b34801561058157600080fd5b506103fc610590366004613cda565b6127bf565b3480156105a157600080fd5b5061021c6105b03660046140a7565b612832565b60006001600160a01b03831661061d5760405162461bcd60e51b815260206004820152602260248201527f4d756c7469557365722f7769746864726177546f6b656e2f307852656365697660448201526132b960f11b60648201526084015b60405180910390fd5b61062561275f565b6001600160a01b03166321754d9e8561063c611faa565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015290821660248201529086166044820152606481018590526084016020604051808303816000875af1158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd91906140c0565b90505b9392505050565b60005b81811015610713576107018383838181106106e7576106e76140dd565b90506020020160208101906106fc9190613ec6565b612973565b8061070b81614109565b9150506106ca565b505050565b61073061072a36839003830183614138565b346129e8565b61077c5760405162461bcd60e51b815260206004820152601960248201527f4d756c7469557365722f7570646174654f666665724661696c000000000000006044820152606401610614565b50565b6001600160a01b0380831660009081526002602090815260408083208585168452825280832093871683529281528282208280529052908120546060918291908190805b8215610926577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327507458816368c13d6b8b8b886040518463ffffffff1660e01b815260040161081f939291906141e4565b602060405180830381865afa15801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190614208565b6040518263ffffffff1660e01b815260040161087e91815260200190565b602060405180830381865afa15801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf91906140c0565b156108d657816108ce81614109565b9250506108e4565b806108e081614109565b9150505b6001600160a01b0380891660009081526002602090815260408083208b851684528252808320938d1683529281528282209582529490945290922054916107c3565b8167ffffffffffffffff81111561093f5761093f614122565b604051908082528060200260200182016040528015610968578160200160208202803683370190505b5095508067ffffffffffffffff81111561098457610984614122565b6040519080825280602002602001820160405280156109ad578160200160208202803683370190505b50945083925060009150600090505b8215610b59577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327507458816368c13d6b8b8b886040518463ffffffff1660e01b8152600401610a18939291906141e4565b602060405180830381865afa158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a599190614208565b6040518263ffffffff1660e01b8152600401610a7791815260200190565b602060405180830381865afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab891906140c0565b15610aec57828683610ac981614109565b945081518110610adb57610adb6140dd565b602002602001018181525050610b17565b828582610af881614109565b935081518110610b0a57610b0a6140dd565b6020026020010181815250505b6001600160a01b0380891660009081526002602090815260408083208b851684528252808320938d1683529281528282209582529490945290922054916109bc565b50505050935093915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381161580610ba45750336001600160a01b038216145b610bc05760405162461bcd60e51b815260040161061490614221565b81602001356f6d67762f74726164655375636365737360801b03610bed57610be783612f25565b50505050565b60408301803590610c019060208601613ec6565b6001600160a01b0316610c176020860186613ec6565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682528735602083015292909216917f736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e0910160405180910390a4610be78383612f63565b61077c33826131c7565b610c9b612746565b6001600160a01b0316336001600160a01b031614610ccb5760405162461bcd60e51b815260040161061490614221565b60005b8181101561071357610d05838383818110610ceb57610ceb6140dd565b9050602002016020810190610d009190613ec6565b613251565b80610d0f81614109565b915050610cce565b6000610d32610d2b36849003840184614138565b33346132d8565b92915050565b610d6a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600080610d7d6080850160608601614258565b610da357610d8e6020850185613ec6565b610d9e6040860160208701613ec6565b610dc0565b610db36040850160208601613ec6565b610dc06020860186613ec6565b915091506000610dce61275f565b6001600160a01b031663333dbb0d83338860c0013560016040518563ffffffff1660e01b8152600401610e049493929190614275565b6020604051808303816000875af1158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e479190614208565b90508460c001358114610e9c5760405162461bcd60e51b815260206004820152601a60248201527f6d67764f726465722f6d6f2f7472616e73666572496e4661696c0000000000006044820152606401610614565b60005b610eaf610120870135600161429e565b81101561104d5761014086013515801590610ece57508561014001355a105b61104d5760008080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663fbffe5fd89898d608001358e60c001358f6060016020810190610f259190614258565b610f30576001610f33565b60005b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152604484019190915260648301521515608482015260a4016080604051808303816000875af1158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba91906142b6565b93509350935093508389600001818151610fd4919061429e565b905250602089018051849190610feb90839061429e565b90525060408901805183919061100290839061429e565b90525060608901805182919061101990839061429e565b90525083158015611028575081155b15611036575050505061104d565b50505050808061104590614109565b915050610e9f565b50600061105a868661353b565b905061106c6060870160408801614258565b15806110755750805b8061108d575061108d61012087016101008801614258565b6110d55760405162461bcd60e51b81526020600482015260196024820152781b59dd93dc99195c8bdb5bcbdb9bd4185c9d1a585b119a5b1b603a1b6044820152606401610614565b845115611149576110e461275f565b855160405163137476d160e11b81526001600160a01b0392909216916326e8eda29161111691889133916004016141e4565b600060405180830381600087803b15801561113057600080fd5b505af1158015611144573d6000803e3d6000fd5b505050505b61115b61012087016101008801614258565b8015611165575080155b1561154c5760408051610100810182526001600160a01b03808616825286166020820152606087015187516111f3938301916111a09161429e565b6111ae9060a08b01356142ec565b815260200187602001518960e001356111c791906142ec565b81526020016111d4611fd5565b81526020016000815260200160008152602001600081525033346132d8565b6080860181905261120990339085908790613584565b3361121a6040880160208901613ec6565b6001600160a01b03166112306020890189613ec6565b6001600160a01b03167f587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c7f000000000000000000000000000000000000000000000000000000000000000061128b60808c0160608d01614258565b8a5160208c01516040808e015160808f015191516112db9695949392906001600160a01b03969096168652931515602086015260408501929092526060840152608083015260a082015260c00190565b60405180910390a4846080015160000361147b576112ff6060870160408801614258565b156113485760405162461bcd60e51b81526020600482015260196024820152781b59dd93dc99195c8bdb5bcbdb9bd4185c9d1a585b119a5b1b603a1b6044820152606401610614565b611366833387602001518960c0013561136191906142ec565b613605565b6113b25760405162461bcd60e51b815260206004820152601a60248201527f6d67764f726465722f6d6f2f7472616e73666572496e4661696c0000000000006044820152606401610614565b60008560400151346113c4919061429e565b111561147257604085015160009033906113de903461429e565b604051600081818185875af1925050503d806000811461141a576040519150601f19603f3d011682016040523d82523d6000602084013e61141f565b606091505b50509050806114705760405162461bcd60e51b815260206004820152601f60248201527f6d67764f726465722f6d6f2f726566756e6450726f766973696f6e4661696c006044820152606401610614565b505b50505050919050565b61148361275f565b6001600160a01b03166326e8eda2843388602001518a60c001356114a791906142ec565b6040518463ffffffff1660e01b81526004016114c5939291906141e4565b600060405180830381600087803b1580156114df57600080fd5b505af11580156114f3573d6000803e3d6000fd5b5050505061016086013515611472576115116101608701354361429e565b6001600160a01b038085166000908152600160209081526040808320938916835292815282822060808a015183529052205550505050919050565b61155461275f565b6001600160a01b03166326e8eda2843388602001518a60c0013561157891906142ec565b6040518463ffffffff1660e01b8152600401611596939291906141e4565b600060405180830381600087803b1580156115b057600080fd5b505af11580156115c4573d6000803e3d6000fd5b5050505060008560400151346115da919061429e565b111561168157604085015160009033906115f4903461429e565b604051600081818185875af1925050503d8060008114611630576040519150601f19603f3d011682016040523d82523d6000602084013e611635565b606091505b505090508061167f5760405162461bcd60e51b81526020600482015260166024820152751b59dd93dc99195c8bdb5bcbdc99599d5b9911985a5b60521b6044820152606401610614565b505b336116926040880160208901613ec6565b6001600160a01b03166116a86020890189613ec6565b6001600160a01b03167f587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c7f000000000000000000000000000000000000000000000000000000000000000061170360808c0160608d01614258565b8a516020808d01516040808f015181516001600160a01b039097168752941515928601929092529084019190915260608301526080820152600060a082015260c00160405180910390a450505050919050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811615806117975750336001600160a01b038216145b6117b35760405162461bcd60e51b815260040161061490614221565b6117bc836136fb565b6118015760405162461bcd60e51b81526020600482015260166024820152751b59dd93d999995c8bd8589bdc9d0bdc995b9959d95960521b6044820152606401610614565b60006118118460a0013585613780565b111561185f5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f7075744661696c656400000000000000006044820152606401610614565b600061186f84608001358561382e565b11156118bd5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c656400000000000000006044820152606401610614565b50919050565b6118cb612746565b6001600160a01b0316336001600160a01b0316146118fb5760405162461bcd60e51b815260040161061490614221565b6000198203611995576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198c9190614208565b91508115611b2e575b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af11580156119fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2091906140c0565b611a7a5760405162461bcd60e51b815260206004820152602560248201527f6d67764f666665722f776974686472617746726f6d4d67762f776974686472616044820152641dd1985a5b60da1b6064820152608401610614565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611ac7576040519150601f19603f3d011682016040523d82523d6000602084013e611acc565b606091505b50509050806107135760405162461bcd60e51b815260206004820152602860248201527f6d67764f666665722f776974686472617746726f6d4d67762f70617961626c6560448201526710d85b1b11985a5b60c21b6064820152608401610614565b5050565b600080611b3d61294f565b600101546001600160a01b03161415919050565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b3906044016020604051808303816000875af1158015611bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be591906140c0565b61077c5760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c0000006044820152606401610614565b6001600160a01b03848116600090815260208181526040808320878516845282528083208684528252808320815180830190925254938416808252600160a01b9094046001600160601b0316918101919091529091331480611cbb57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b611d075760405162461bcd60e51b815260206004820152601f60248201527f4d756c74692f726574726163744f666665722f756e617574686f72697a6564006044820152606401610614565b60208101516001600160601b031615611d3c5782611d26576000611d2c565b80602001515b6001600160601b03169150611dd4565b60405163ad97db1b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ad97db1b90611d8e908990899089908990600401614275565b6020604051808303816000875af1158015611dad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd19190614208565b91505b8115611fa157604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6591906140c0565b611eaa5760405162461bcd60e51b8152602060048201526016602482015275135d5b1d1a555cd95c8bddda5d1a191c985dd1985a5b60521b6044820152606401610614565b60408051808201825282516001600160a01b039081168252600060208084018281528b841683528282528583208b8516845282528583208a8452909152848220935190516001600160601b0316600160a01b0292169190911790915590513390849060006040518083038185875af1925050503d8060008114611f49576040519150601f19603f3d011682016040523d82523d6000602084013e611f4e565b606091505b5050905080611f9f5760405162461bcd60e51b815260206004820152601960248201527f4d756c7469557365722f7765695472616e736665724661696c000000000000006044820152606401610614565b505b50949350505050565b600080611fb63361392c565b90506001600160a01b03811615611fcd5780611fcf565b335b91505090565b6000611fdf611b32565b1561206557611fec61275f565b6001600160a01b0316630417ffda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204d9190614208565b61205561294f565b54612060919061429e565b905090565b61206d61294f565b54919050565b61207b612746565b6001600160a01b0316336001600160a01b031614806120c25750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6120de5760405162461bcd60e51b815260040161061490614221565b6001600160a01b0381166121345760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401610614565b8061213d61294f565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b15801561219457600080fd5b505af11580156121a8573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e5455925060200190505b60405180910390a150565b60608167ffffffffffffffff81111561220857612208614122565b604051908082528060200260200182016040528015612231578160200160208202803683370190505b50905060005b82811015611fa1576122628686868685818110612256576122566140dd565b905060200201356127bf565b828281518110612274576122746140dd565b6001600160a01b03909216602092830291909101909101528061229681614109565b915050612237565b600080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663cbf75c9a89896040518363ffffffff1660e01b81526004016122f0929190614303565b6040805180830381865afa15801561230c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612330919061431d565b9150915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635722647b61236c8b90565b8a886040518463ffffffff1660e01b815260040161238c939291906141e4565b602060405180830381865afa1580156123a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123cd9190614208565b9050600086604085901c61ffff1611156123f0575061ffff604084901c166123f3565b50855b62ffffff881061240857612405611fd5565b97505b60008161241e62ffffff606087901c168b61429e565b6124289190614341565b61243690633b9aca00614341565b9050600061ffff602085901c1661245d62ffffff603087901c811690604888901c1661429e565b6124679190614341565b61247590633b9aca00614341565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156124df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125039190614208565b61250d908361429e565b9050828110156125265761252181846142ec565b612529565b60005b9d9c50505050505050505050505050565b612542612746565b6001600160a01b0316336001600160a01b0316146125725760405162461bcd60e51b815260040161061490614221565b6001600160a01b0381166125c85760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610614565b806125d161292b565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60006125fc61275f565b6001600160a01b03166305684fde83612613611faa565b6040518363ffffffff1660e01b8152600401612630929190614303565b602060405180830381865afa15801561264d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190614208565b806001600160a01b031663095ea7b361268861275f565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af11580156126d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126fa91906140c0565b61077c5760405162461bcd60e51b815260206004820152601b60248201527f6d67764f666665722f617070726f7665526f757465722f4661696c00000000006044820152606401610614565b600061275061292b565b546001600160a01b0316919050565b60008061276a61294f565b600101546001600160a01b03169050806127ba5760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401610614565b919050565b6001600160a01b038084166000908152602081815260408083208685168452825280832085845290915290205416806106c05760405162461bcd60e51b815260206004820152601560248201527436bab63a34aab9b2b917bab735b7bbb727b33332b960591b6044820152606401610614565b61283a612746565b6001600160a01b0316336001600160a01b031614806128815750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b61289d5760405162461bcd60e51b815260040161061490614221565b808162ffffff16146128f15760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f6761737265712f6f766572666c6f7700000000000000006044820152606401610614565b806128fa61294f565b556040518181527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d906020016121e2565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b61297b61275f565b6001600160a01b031663a01dccd882612992611faa565b6040518363ffffffff1660e01b81526004016129af929190614303565b60006040518083038186803b1580156129c757600080fd5b505afa1580156129db573d6000803e3d6000fd5b5050505061077c8161395c565b81516001600160a01b039081166000908152602081815260408083208287015185168452825280832060e0870151845282528083208151808301835290549485168152600160a01b9094046001600160601b031684830152805160808101825283815291820183905281018290526060810182905290919081516001600160a01b0316331480612aa05750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b612aec5760405162461bcd60e51b815260206004820152601e60248201527f4d756c74692f7570646174654f666665722f756e617574686f72697a656400006044820152606401610614565b8451602086015160e0870151604051635722647b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693635722647b93612b479391929091906004016141e4565b602060405180830381865afa158015612b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b889190614208565b604082015284516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbf75c9a9060208801516040518363ffffffff1660e01b8152600401612be2929190614303565b6040805180830381865afa158015612bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c22919061431d565b6020830152815260608101849052608085015162ffffff10612c48578460800151612c50565b612c50611fd5565b6080860152604081015160201c61ffff1660a08601819052600003612d325760208201516001600160601b031615612d085781602001516001600160601b031681606001818151612ca1919061429e565b90525060408051808201825283516001600160a01b039081168252600060208084018281528a51841683528282528583208b83015185168452825285832060e08c01518452909152939020915192516001600160601b0316600160a01b0292169190911790555b60808501516060808301516020840151612d2893921c62ffffff16613a4a565b60a0860152612db3565b8315612db357602081015160601c62ffffff16604082015160481c62ffffff16612d5c919061429e565b60a0860151612d6f90633b9aca00614341565b612d799190614341565b81606001818151612d8a919061429e565b90525060808501516060808301516020840151612dad93921c62ffffff16613a4a565b60a08601525b805160401c61ffff168560a001511015612e205760405162461bcd60e51b815260206004820152602860248201527f4d756c7469557365722f7570646174654f666665722f4e6f74456e6f756768506044820152673937bb34b9b4b7b760c11b6064820152608401610614565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f769185612e5b886000015190565b602089015189604001518a606001518b608001518c60a001518d60c001518e60e001516040518a63ffffffff1660e01b8152600401612ee09897969594939291906001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6000604051808303818588803b158015612ef957600080fd5b505af193505050508015612f0b575060015b612f1a57600092505050610d32565b506001949350505050565b6000612f3082613ae5565b9050806127ba576118bd612f476020840184613ec6565b612f576040850160208601613ec6565b84604001356001611c31565b600080612f736020850185613ec6565b90506000612f876040860160208701613ec6565b6001600160a01b03838116600090815260208181526040808320858516845282528083208a820135845282528083208151808301909252548085168252600160a01b90046001600160601b031681830152939450909182917f00000000000000000000000000000000000000000000000000000000000000009091169063cbf75c9a90613016908b018b613ec6565b61302660408c0160208d01613ec6565b6040518363ffffffff1660e01b8152600401613043929190614303565b6040805180830381865afa15801561305f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613083919061431d565b909250905060006130a061ffff604085901c16633b9aca00614341565b9050600060c08a013560301c62ffffff1660c08b013560481c62ffffff166130c8919061429e565b6130e161ffff60c08d013560201c16633b9aca00614341565b6130eb9190614341565b9050600082606085901c62ffffff165a60c08e013560481c62ffffff1661311291906142ec565b61311e90610bb861429e565b613128919061429e565b6131329190614341565b905060008282101561314d5761314882846142ec565b613150565b60005b60408051808201825298516001600160a01b039081168a526001600160601b039283166020808c019182529c82166000908152808e528381209c831681529b8d52828c209f8301358c529e909b5290982096519b51909716600160a01b029a90971699909917909355506001979650505050505050565b6001600160a01b0381166132145760405162461bcd60e51b815260206004820152601460248201527353696e676c65557365722f30785265736572766560601b6044820152606401610614565b8061321d61294f565b6001600160a01b0393841660009081526002919091016020526040902080546001600160a01b031916919093161790915550565b61325a81611b51565b613262611b32565b1561077c5761327081612671565b61327861275f565b604051630716a76760e21b81526001600160a01b0383811660048301529190911690631c5a9d9c90602401600060405180830381600087803b1580156132bd57600080fd5b505af11580156132d1573d6000803e3d6000fd5b5050505050565b825160208401516040516365fbae4d60e11b8152600092839283926001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263cbf75c9a9261333092600401614303565b6040805180830381865afa15801561334c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613370919061431d565b9150915062ffffff801686608001511161338e578560800151613396565b613396611fd5565b608087018190526133b19085606084901c62ffffff16613a4a565b60a0870181905261ffff604084901c16111561341d5760405162461bcd60e51b815260206004820152602560248201527f4d756c7469557365722f6e65774f666665722f4e6f74456e6f75676850726f7660448201526434b9b4b7b760d91b6064820152608401610614565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc85613458896000015190565b60208a01518a604001518b606001518c608001518d60a001518e60c001516040518963ffffffff1660e01b81526004016134d197969594939291906001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b60206040518083038185885af11580156134ef573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906135149190614208565b60e087018190528651602088015161352c9288613bbc565b50505060e08301519392505050565b600061354d6080840160608501614258565b15613565578260c00135826020015110159050610d32565b6060820151825160808501359161357b9161429e565b10159050610d32565b6001600160a01b03838116600090815260026020908152604080832086851684528252808320938816835292815282822082805290522080549082905580156132d1576001600160a01b0393841660009081526002602090815260408083209587168352948152848220969095168152948452828520918552925290912055565b600081158061361c57506001600160a01b03831630145b15613629575060016106c0565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908816916136859190614360565b6000604051808303816000865af19150503d80600081146136c2576040519150601f19603f3d011682016040523d82523d6000602084013e6136c7565b606091505b50915091508180156136f15750805115806136f15750808060200190518101906136f191906140c0565b9695505050505050565b60008060018161370e6020860186613ec6565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460200160208101906137439190613ec6565b6001600160a01b031681526020808201929092526040908101600090812086830135825290925290205490508015806106c0575043111592915050565b6000806137906020840184613ec6565b905060006137a46040850160208601613ec6565b905060006137b7838387604001356127bf565b90506137c161275f565b6001600160a01b03166326e8eda28383896040518463ffffffff1660e01b81526004016137f0939291906141e4565b600060405180830381600087803b15801561380a57600080fd5b505af115801561381e573d6000803e3d6000fd5b5060009998505050505050505050565b60008061383e6020840184613ec6565b905060006138526040850160208601613ec6565b90506000613865838387604001356127bf565b905060006138728261392c565b9050600061387e61275f565b6001600160a01b031663333dbb0d8660006001600160a01b0316856001600160a01b0316146138ad57846138af565b855b8b60016040518563ffffffff1660e01b81526004016138d19493929190614275565b6020604051808303816000875af11580156138f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139149190614208565b905061392081896142ec565b98975050505050505050565b600061393661294f565b6001600160a01b0392831660009081526002919091016020526040902054909116919050565b604051636eb1769f60e11b81526000906001600160a01b0383169063dd62ed3e906139ad9030907f000000000000000000000000000000000000000000000000000000000000000090600401614303565b602060405180830381865afa1580156139ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139ee9190614208565b1161077c5760405162461bcd60e51b815260206004820152602660248201527f4d616e67726f76654f666665722f41646d696e4d757374417070726f76654d616044820152656e67726f766560d01b6064820152608401610614565b600080613a57858461429e565b613a6590633b9aca00614341565b905080841015613acc5760405162461bcd60e51b815260206004820152602c60248201527f4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f60448201526b3ab3b4283937bb34b9b4b7b760a11b6064820152608401610614565b808481613adb57613adb61439b565b0495945050505050565b600080613af183613c7d565b90506000613afe84613c9d565b905081600003613b12575060019392505050565b604080516101008101909152613bb49080613b306020880188613ec6565b6001600160a01b03168152602001866020016020810190613b519190613ec6565b6001600160a01b03168152602081018490526040810185905260600160c087013560481c62ffffff16815260209081019060c0880135901c61ffff168152602001606087013560c01c63ffffffff168152602001866040013581525060006129e8565b949350505050565b6040805180820182526001600160a01b038084168252600060208084018281528984168084528383528684208a86168086529084528785208a865290935292869020945190516001600160601b0316600160a01b029316929092179092559151849291907f460a431c86ecaea27134277388c72021356689d9eb62c3b25a5e4a97da7a8a1490613c6f907f0000000000000000000000000000000000000000000000000000000000000000908790614303565b60405180910390a450505050565b600060808201356001600160601b036060840135165b610d3291906142ec565b600060a0820135606080840135901c6001600160601b0316613c93565b6001600160a01b038116811461077c57600080fd5b80356127ba81613cba565b600080600060608486031215613cef57600080fd5b8335613cfa81613cba565b92506020840135613d0a81613cba565b929592945050506040919091013590565b60008083601f840112613d2d57600080fd5b50813567ffffffffffffffff811115613d4557600080fd5b6020830191508360208260051b8501011115613d6057600080fd5b9250929050565b60008060208385031215613d7a57600080fd5b823567ffffffffffffffff811115613d9157600080fd5b613d9d85828601613d1b565b90969095509350505050565b600061010082840312156118bd57600080fd5b600080600060608486031215613dd157600080fd5b8335613ddc81613cba565b92506020840135613dec81613cba565b91506040840135613dfc81613cba565b809150509250925092565b600081518084526020808501945080840160005b83811015613e3757815187529582019590820190600101613e1b565b509495945050505050565b604081526000613e556040830185613e07565b8281036020840152613e678185613e07565b95945050505050565b600061012082840312156118bd57600080fd5b600080828403610160811215613e9857600080fd5b613ea28585613e70565b9250604061011f1982011215613eb757600080fd5b50610120830190509250929050565b600060208284031215613ed857600080fd5b81356106c081613cba565b600061018082840312156118bd57600080fd5b60006101208284031215613f0957600080fd5b6106c08383613e70565b60008060408385031215613f2657600080fd5b823591506020830135613f3881613cba565b809150509250929050565b801515811461077c57600080fd5b60008060008060808587031215613f6757600080fd5b8435613f7281613cba565b93506020850135613f8281613cba565b9250604085013591506060850135613f9981613f43565b939692955090935050565b60008060008060608587031215613fba57600080fd5b8435613fc581613cba565b93506020850135613fd581613cba565b9250604085013567ffffffffffffffff811115613ff157600080fd5b613ffd87828801613d1b565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561404a5783516001600160a01b031683529284019291840191600101614025565b50909695505050505050565b600080600080600060a0868803121561406e57600080fd5b853561407981613cba565b9450602086013561408981613cba565b94979496505050506040830135926060810135926080909101359150565b6000602082840312156140b957600080fd5b5035919050565b6000602082840312156140d257600080fd5b81516106c081613f43565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161411b5761411b6140f3565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600061010080838503121561414c57600080fd5b6040519081019067ffffffffffffffff8211818310171561417d57634e487b7160e01b600052604160045260246000fd5b8160405261418a84613ccf565b815261419860208501613ccf565b602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561421a57600080fd5b5051919050565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b60006020828403121561426a57600080fd5b81356106c081613f43565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b600082198211156142b1576142b16140f3565b500190565b600080600080608085870312156142cc57600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000828210156142fe576142fe6140f3565b500390565b6001600160a01b0392831681529116602082015260400190565b6000806040838503121561433057600080fd5b505080516020909101519092909150565b600081600019048311821515161561435b5761435b6140f3565b500290565b6000825160005b818110156143815760208186018101518583015201614367565b81811115614390576000828501525b509190910192915050565b634e487b7160e01b600052601260045260246000fdfea26469706673582212201694372ebbc4f8919b0d241e46ec9bdaa1572265a4954ade8a5c7e2e743d1f1f64736f6c634300080e0033608060405234801561001057600080fd5b5061c35033806100675760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b8061007a61010a60201b6107e51760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146100ed5760405162461bcd60e51b815260206004820152601660248201527f526f757465722f6f76657268656164546f6f4869676800000000000000000000604482015260640161005e565b8061010061012e60201b6108091760201c565b6001015550610152565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7ff2910982afb88211fa9894801aaf0314409ca240a0a8904897b9f5ba323ca53390565b610ea3806101616000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063362aecb11161008c578063cf5e7bd311610066578063cf5e7bd314610199578063e9333fab146101ac578063f850a81c146101bf578063f851a440146101d257600080fd5b8063362aecb11461016057806381bac14f14610173578063a01dccd81461018657600080fd5b80630417ffda146100d457806305684fde146100ef5780631c5a9d9c1461010257806321754d9e1461011757806326e8eda21461013a578063333dbb0d1461014d575b600080fd5b6100dc6101f2565b6040519081526020015b60405180910390f35b6100dc6100fd366004610bc3565b610205565b610115610110366004610bfc565b61027a565b005b61012a610125366004610c19565b6102cd565b60405190151581526020016100e6565b610115610148366004610c6a565b61030b565b6100dc61015b366004610cb9565b610341565b61012a61016e366004610bfc565b6103fd565b610115610181366004610bfc565b610429565b610115610194366004610bc3565b6104a7565b6101156101a7366004610bfc565b61057d565b6101156101ba366004610bfc565b6105ce565b6101156101cd366004610d0c565b6106b6565b6101da6107cc565b6040516001600160a01b0390911681526020016100e6565b60006101fc610809565b60010154905090565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102739190610d92565b9392505050565b6102826107cc565b6001600160a01b0316336001600160a01b031614806102a557506102a5336103fd565b6102ca5760405162461bcd60e51b81526004016102c190610dab565b60405180910390fd5b50565b60006102d8336103fd565b6102f45760405162461bcd60e51b81526004016102c190610dab565b6103008585858561082d565b90505b949350505050565b610314336103fd565b6103305760405162461bcd60e51b81526004016102c190610dab565b61033c8383338461083b565b505050565b600061034c336103fd565b6103685760405162461bcd60e51b81526004016102c190610dab565b6040516370a0823160e01b81523360048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa1580156103af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d39190610d92565b90508381106103e6576000915050610303565b6103f38686338787610893565b9695505050505050565b6000610407610809565b6001600160a01b03909216600090815260209290925250604090205460ff1690565b6104316107cc565b6001600160a01b0316336001600160a01b031614806104545750610454336103fd565b6104705760405162461bcd60e51b81526004016102c190610dab565b600161047a610809565b6001600160a01b039290921660009081526020929092526040909120805460ff1916911515919091179055565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190610d92565b1161056f5760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b60648201526084016102c1565b61057982826108ba565b5050565b6105856107cc565b6001600160a01b0316336001600160a01b031614806105a857506105a8336103fd565b6105c45760405162461bcd60e51b81526004016102c190610dab565b600061047a610809565b6105d66107cc565b6001600160a01b0316336001600160a01b0316146106365760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c6964000000000000000060448201526064016102c1565b6001600160a01b03811661068c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016102c1565b806106956107e5565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6106bf336103fd565b6106db5760405162461bcd60e51b81526004016102c190610dab565b60005b828110156107c65760008484838181106106fa576106fa610dd8565b905060200201602081019061070f9190610bfc565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107799190610d92565b905080156107b3576107b385858481811061079657610796610dd8565b90506020020160208101906107ab9190610bfc565b84338461083b565b50806107be81610dee565b9150506106de565b50505050565b60006107d66107e5565b546001600160a01b0316919050565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7ff2910982afb88211fa9894801aaf0314409ca240a0a8904897b9f5ba323ca53390565b600061030085858585610998565b61084784838584610998565b6107c65760405162461bcd60e51b815260206004820152601e60248201527f53696d706c65526f757465722f707573682f7472616e736665724661696c000060448201526064016102c1565b60006108a186868686610998565b156108ad5750816108b1565b5060005b95945050505050565b6001600160a01b0381163014806109425750604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190610d92565b115b6105795760405162461bcd60e51b815260206004820152602160248201527f53696d706c65526f757465722f4e6f74417070726f76656442795265736572766044820152606560f81b60648201526084016102c1565b60008115806109b85750826001600160a01b0316846001600160a01b0316145b156109c557506001610303565b306001600160a01b038516036109e7576109e0858484610ac2565b9050610303565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290891691610a4b9190610e15565b6000604051808303816000865af19150503d8060008114610a88576040519150601f19603f3d011682016040523d82523d6000602084013e610a8d565b606091505b5091509150818015610ab7575080511580610ab7575080806020019051810190610ab79190610e50565b979650505050505050565b6000811580610ad957506001600160a01b03831630145b15610ae657506001610273565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290881691610b429190610e15565b6000604051808303816000865af19150503d8060008114610b7f576040519150601f19603f3d011682016040523d82523d6000602084013e610b84565b606091505b50915091508180156103f35750805115806103f35750808060200190518101906103f39190610e50565b6001600160a01b03811681146102ca57600080fd5b60008060408385031215610bd657600080fd5b8235610be181610bae565b91506020830135610bf181610bae565b809150509250929050565b600060208284031215610c0e57600080fd5b813561027381610bae565b60008060008060808587031215610c2f57600080fd5b8435610c3a81610bae565b93506020850135610c4a81610bae565b92506040850135610c5a81610bae565b9396929550929360600135925050565b600080600060608486031215610c7f57600080fd5b8335610c8a81610bae565b92506020840135610c9a81610bae565b929592945050506040919091013590565b80151581146102ca57600080fd5b60008060008060808587031215610ccf57600080fd5b8435610cda81610bae565b93506020850135610cea81610bae565b9250604085013591506060850135610d0181610cab565b939692955090935050565b600080600060408486031215610d2157600080fd5b833567ffffffffffffffff80821115610d3957600080fd5b818601915086601f830112610d4d57600080fd5b813581811115610d5c57600080fd5b8760208260051b8501011115610d7157600080fd5b60209283019550935050840135610d8781610bae565b809150509250925092565b600060208284031215610da457600080fd5b5051919050565b602080825260139082015272149bdd5d195c8bdd5b985d5d1a1bdc9a5e9959606a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201610e0e57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610e365760208186018101518583015201610e1c565b81811115610e45576000828501525b509190910192915050565b600060208284031215610e6257600080fd5b815161027381610cab56fea26469706673582212201a5909cf162cba146fb1ddb06cb563c76c816c7430eb8e8f45d62b5cb8ea878a64736f6c634300080e003360806040526000805460ff1916600117905534801561001d57600080fd5b5060405161120638038061120683398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b61110b806100fb6000396000f3fe6080604052600436106100e15760003560e01c8063a3cfe14d1161007f578063b84e3eda11610059578063b84e3eda14610284578063e1f21c67146102a4578063f8ccbf47146102c4578063ff2e2d33146102de57600080fd5b8063a3cfe14d14610244578063aa2cc08b14610264578063b04220dd1461013057600080fd5b80633a768463116100bb5780633a7684631461016a5780634d1d2b66146101aa578063521606d2146101f4578063978b7c021461021457600080fd5b8063080d7c4d146100ed5780631154020b1461010f5780632d24c42f1461013057600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d610108366004610b09565b6102fe565b005b34801561011b57600080fd5b5061010d61012a366004610b35565b50505050565b34801561013c57600080fd5b5061015061014b366004610b7b565b610395565b604080519283526020830191909152015b60405180910390f35b34801561017657600080fd5b50610192737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001610161565b3480156101b657600080fd5b506101ca6101c5366004610b7b565b61043d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610161565b34801561020057600080fd5b5061010d61020f366004610c08565b610539565b34801561022057600080fd5b5061023461022f366004610b7b565b61066a565b6040519015158152602001610161565b34801561025057600080fd5b5061010d61025f366004610b09565b6106e2565b34801561027057600080fd5b5061015061027f366004610c9e565b610720565b34801561029057600080fd5b5061010d61029f366004610c08565b6107be565b3480156102b057600080fd5b5061010d6102bf366004610cf9565b6108e1565b3480156102d057600080fd5b506000546102349060ff1681565b3480156102ea57600080fd5b506102346102f9366004610d3a565b610954565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610dbd565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af115801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610ddf565b5091969095509350505050565b60008060008060008061048560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610a12565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa946104d694928316939216918c91600401610e15565b60a0604051808303816000875af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105199190610eaa565b60019094149e50919c509a50985096505050505050509295509295909350565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061058557610585610eea565b60200260200101516040518263ffffffff1660e01b81526004016105ab91815260200190565b600060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190610f2c565b604051602001610601929190610fc0565b6040516020818303038152906040529150600183516106209190611005565b81101561064a5781604051602001610638919061101c565b60405160208183030381529060405291505b8061065481611042565b91505061054a565b5061066681610a6f565b5050565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d6919061105b565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b39060440161034d565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610ddf565b5091999098509650505050505050565b604080516020810190915260008082525b825181101561065c5782518290737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae9086908590811061080a5761080a610eea565b60200260200101516040518263ffffffff1660e01b815260040161083091815260200190565b600060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108759190810190610f2c565b604051602001610886929190610fc0565b6040516020818303038152906040529150600183516108a59190611005565b8110156108cf57816040516020016108bd919061101c565b60405160208183030381529060405291505b806108d981611042565b9150506107cf565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a9190610dbd565b600080610980604051806080016040528088815260200187815260200186815260200185815250610a12565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016109b79493929190610e15565b60a0604051808303816000875af11580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190610eaa565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b610a35610ad6565b815260200190600190039081610a2d5790505090508281600081518110610a5e57610a5e610eea565b602090810291909101015292915050565b610ab281604051602401610a8391906110a2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610ab5565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b0381168114610ab257600080fd5b60008060408385031215610b1c57600080fd5b8235610b2781610af4565b946020939093013593505050565b60008060008060808587031215610b4b57600080fd5b8435610b5681610af4565b93506020850135610b6681610af4565b93969395505050506040820135916060013590565b60008060408385031215610b8e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b60006020808385031215610c1b57600080fd5b823567ffffffffffffffff811115610c3257600080fd5b8301601f81018513610c4357600080fd5b8035610c56610c5182610be4565b610bb3565b81815260059190911b82018301908381019087831115610c7557600080fd5b928401925b82841015610c9357833582529284019290840190610c7a565b979650505050505050565b600080600080600060a08688031215610cb657600080fd5b8535610cc181610af4565b94506020860135610cd181610af4565b93506040860135610ce181610af4565b94979396509394606081013594506080013592915050565b600080600060608486031215610d0e57600080fd5b8335610d1981610af4565b92506020840135610d2981610af4565b929592945050506040919091013590565b600080600080600080600060e0888a031215610d5557600080fd5b8735610d6081610af4565b96506020880135610d7081610af4565b95506040880135610d8081610af4565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b80518015158114610db857600080fd5b919050565b600060208284031215610dcf57600080fd5b610dd882610da8565b9392505050565b60008060008060808587031215610df557600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610e8b57855185835b6004811015610e7857825182529186019190860190600101610e5b565b5050509483019493860193600101610e4e565b5050505085151560608601529250610ea1915050565b95945050505050565b600080600080600060a08688031215610ec257600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610f1b578181015183820152602001610f03565b8381111561012a5750506000910152565b600060208284031215610f3e57600080fd5b815167ffffffffffffffff80821115610f5657600080fd5b818401915084601f830112610f6a57600080fd5b815181811115610f7c57610f7c610b9d565b610f8f601f8201601f1916602001610bb3565b9150808252856020828501011115610fa657600080fd5b610fb7816020840160208601610f00565b50949350505050565b60008351610fd2818460208801610f00565b835190830190610fe6818360208801610f00565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561101757611017610fef565b500390565b6000825161102e818460208701610f00565b61016160f51b920191825250600201919050565b60006001820161105457611054610fef565b5060010190565b600080600080600060a0868803121561107357600080fd5b61107c86610da8565b602087015160408801516060890151608090990151929a91995097965090945092505050565b60208152600082518060208401526110c1816040850160208701610f00565b601f01601f1916919091016040019291505056fea2646970667358221220fe05e77654585728cf63d927b792919a9b4528889d07a63176801add83a0055b64736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e0033a2646970667358221220bc7d9d438cd5627bd00d066b2f3b1acd90318af6a7a9515bd2a5d7aaffa9dcd064736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220363d825a62e7711a222b729367aea22c71c496027732c66afce572665829ed6264736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204d0d7db92a47baa4b3863a7c3d90bb9ff2f03be8b62d59c0eeec4def4486554564736f6c634300080e003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50496e636f727265637420666f7277617264656420616d6f756e7420746f20696e697469616c2074616b65720000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c497465726174697665206d61726b6574206f7264657220776173206e6f7420636f6d706c65746554616b652066756e6374696f6e20646964206e6f742072657475726e2066756e647354616b652066756e6374696f6e20646964206e6f742072657475726e20626f756e7479496e636f72726563742077616e747320666f72206269642072657374696e67206f7264657252657374696e67206f66666572206661696c656420746f206265207075626c6973686564206f6e206d616e67726f7665696e76616c696420616d6f756e74206f662072656c65617365642070726f766973696f6e496e636f727265637420726563656976656420616d6f756e7420666f722073656c6c65722074616b6572885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d496e636f727265637420676976657320666f72206269642072657374696e67206f72646572496e636f7272656374206f66666572206c6973742061667465722072657472616374496e636f7272656374207061727469616c2066696c6c206f662074616b6572206f72646572a2646970667358221220ea8d5e03b081e77e9af8b507288769bfd295b6e2eddab4429484afac681bbcfd64736f6c634300080e0033",
    "sourceMap": "589:19102:113:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3989:1107;;;;;;;;;;;;;:::i;:::-;;14533:805;;;;;;;;;;;;;:::i;7192:411:99:-;;;;;;;;;;-1:-1:-1;7192:411:99;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;708:32:125;;;690:51;;678:2;663:18;7192:411:99;;;;;;;;1279:2598:113;;;;;;;;;;;;;:::i;7867:243:99:-;;;;;;;;;;-1:-1:-1;7867:243:99;;;;;:::i;:::-;;:::i;15342:1545:113:-;;;;;;;;;;;;;:::i;780:82:100:-;;;;;;;;;;-1:-1:-1;847:10:100;780:82;;9115:268:99;;;;;;;;;;-1:-1:-1;9115:268:99;;;;;:::i;:::-;;:::i;303:38:1:-;;;;;;;;;;-1:-1:-1;303:38:1;-1:-1:-1;;;;;;;;;;;303:38:1;;7973:934:113;;;;;;;;;;;;;:::i;746:282:101:-;;;;;;;;;;-1:-1:-1;746:282:101;;;;;:::i;:::-;;:::i;3881:104:113:-;;;;;;;;;;;;;:::i;16891:1382::-;;;;;;;;;;;;;:::i;9597:2036::-;;;;;;;;;;;;;:::i;6527:834::-;;;;;;;;;;;;;:::i;9928:132:99:-;;;;;;;;;;-1:-1:-1;9928:132:99;;;;;:::i;:::-;;:::i;:::-;;;5347:25:125;;;5335:2;5320:18;9928:132:99;5201:177:125;18277:1412:113;;;;;;;;;;;;;:::i;8911:682::-;;;;;;;;;;;;;:::i;7365:604::-;;;;;;;;;;;;;:::i;5100:603::-;;;;;;;;;;;;;:::i;7053:97:99:-;;;;;;;;;;;;;:::i;13412:1117:113:-;;;;;;;;;;;;;:::i;461:281:101:-;;;;;;;;;;-1:-1:-1;461:281:101;;;;;:::i;:::-;;:::i;1610:472:0:-;;;;;;;;;;;;;:::i;:::-;;;6539:14:125;;6532:22;6514:41;;6502:2;6487:18;1610:472:0;6374:187:125;8937:174:99;;;;;;;;;;-1:-1:-1;8937:174:99;;;;;:::i;:::-;;:::i;8665:268::-;;;;;;;;;;-1:-1:-1;8665:268:99;;;;;:::i;:::-;;:::i;11637:1771:113:-;;;;;;;;;;;;;:::i;9600:169:99:-;;;;;;;;;;-1:-1:-1;9600:169:99;;;;;:::i;:::-;;:::i;7640:173::-;;;;;;;;;;-1:-1:-1;7640:173:99;;;;;:::i;:::-;;:::i;5707:816:113:-;;;;;;;;;;;;;:::i;163:28:1:-;;;;;;;;;;-1:-1:-1;163:28:1;;;;;;;;;;;1368:26:0;;;;;;;;;;-1:-1:-1;1368:26:0;;;;;;;;3989:1107:113;4101:371;;;;;;;;4138:4;;-1:-1:-1;;;;;4138:4:113;;;4101:371;;4157:5;;;4101:371;;;;;;4060:38;4101:371;;;;;;;;;;;;4248:7;4101:371;;;;;;;;;;4297:10;4101:371;;;;;;;;;;4138:4;4101:371;;;;;;;;;;;4413:9;4101:371;;;;;;;;;;;;4478:20;;:10;:20::i;:::-;4598:3;;4578:37;;4604:10;5347:25:125;;-1:-1:-1;;;;;4598:3:113;;;;4589:4;;4578:37;;5335:2:125;5320:18;4578:37:113;;;;;;;4634:5;;4621:20;;-1:-1:-1;;;;;4634:5:113;4478:10;:20::i;4621:::-;4732:3;;4721:37;;4747:10;5347:25:125;;4740:4:113;;-1:-1:-1;;;;;4732:3:113;;4721:37;;5335:2:125;5320:18;4721:37:113;;;;;;;4806:3;;:48;;-1:-1:-1;;;4806:48:113;;4764:39;;-1:-1:-1;;;;;4806:3:113;;:8;;4822:9;;4806:48;;4840:8;;4806:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4876:12;;4907:4;;4876:12;;-1:-1:-1;4860:125:113;;4896:36;;-1:-1:-1;;;;;4907:4:113;4905:7;4916:5;;-1:-1:-1;;;;;4916:5:113;4924:7;4896:8;:36::i;:::-;4860:125;;;;;;;;;;;;;;;;;:8;:125::i;:::-;4991:100;5007:3;:13;;;5028:10;4991:100;;;;;;;;;;;;;;;;;:8;:100::i;:::-;4054:1042;;3989:1107::o;14533:805::-;14634:370;;;;;;;;14671:4;;-1:-1:-1;;;;;14671:4:113;;;14634:370;;14690:5;;;;14634:370;;;;14593:38;14634:370;;;;;;;;;;;;14781:7;14634:370;;;;;;;;;;14803:10;14634:370;;;;;;;;;;14671:4;;14634:370;;;;;;;;;14945:9;14634:370;;;;;;;;;;15052:3;;:48;;-1:-1:-1;;;15052:48:113;;14634:370;;14593:38;;15052:3;;;:8;;15068:9;;15052:48;;14634:370;;15052:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15168:3;;15185:5;;15192:4;;15198:11;;;;15168:48;;-1:-1:-1;;;15168:48:113;;15010:90;;-1:-1:-1;15133:4:113;15131:15;;15106:22;;-1:-1:-1;;;;;15168:3:113;;;;:16;;:48;;15185:5;;;;15192:4;;;15168:3;;:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15152:64;-1:-1:-1;15222:111:113;15240:4;15238:15;15261:28;15152:64;15261:17;:28;:::i;:::-;15222:111;;;;;;;;;;;;;;;;;:8;:111::i;:::-;14587:751;;;;14533:805::o;7192:411:99:-;7246:21;7279:8;7275:272;;;7349:4;7374:2;7394:9;7304:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7297:115;;7275:272;;;7477:4;7502:2;7522:9;7440:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7433:107;;7275:272;-1:-1:-1;;;;;;;;;;;7552:8:99;7563:4;7552:29;;;-1:-1:-1;;;;;;7552:29:99;;;;;;;-1:-1:-1;;;;;12353:32:125;;;7552:29:99;;;12335:51:125;12402:18;;;12395:30;12461:1;12441:18;;;12434:29;-1:-1:-1;;;12479:18:125;;;12472:38;12527:19;;7552:29:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:411;;;:::o;1279:2598:113:-;1318:13;:11;:13::i;:::-;1337:3;;1350:4;;1359:5;;1337:33;;-1:-1:-1;;;1337:33:113;;-1:-1:-1;;;;;1337:3:113;;;;:10;;:33;;1350:4;;;;1359:5;;;1367:2;;1337:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1376:3:113;;1389:5;;-1:-1:-1;;;;;1376:3:113;;;;-1:-1:-1;1376:10:113;;-1:-1:-1;1389:5:113;1399:4;;-1:-1:-1;;;;;1399:4:113;1406:2;1376:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:3:113;;-1:-1:-1;;;;;1474:3:113;;-1:-1:-1;1474:12:113;;-1:-1:-1;1474:3:113;:20;;-1:-1:-1;;;;;;1474:20:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;1474:20:113;;;690:51:125;663:18;;1474:20:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1595:3:113;;-1:-1:-1;;;;;1595:3:113;;-1:-1:-1;1604:4:113;;-1:-1:-1;1564:46:113;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1558:3:113;:52;;-1:-1:-1;;;;;;1558:52:113;-1:-1:-1;;;;;1558:52:113;;;;;;;;;;1788:15;;;1801:1;1788:15;;;;;;;;-1:-1:-1;;1788:15:113;;;;;;;;-1:-1:-1;;1821:4:113;;1809:9;;;;-1:-1:-1;;;;;;1821:4:113;;1809:9;;-1:-1:-1;1821:4:113;;1809:9;;;;:::i;:::-;-1:-1:-1;;;;;1809:16:113;;;:9;;;;;;;;;:16;1843:5;;1831:9;;1843:5;;;1831:6;;1843:5;;1831:9;;;;;;:::i;:::-;-1:-1:-1;;;;;1831:17:113;;;:9;;;;;;;;;:17;1854:3;;:20;;-1:-1:-1;;;1854:20:113;;:3;;;:12;;:20;;1867:6;;1854:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1939:4:113;;1932:32;;-1:-1:-1;;;;;;1939:4:113;;-1:-1:-1;1937:7:113;1948:4;1946:7;1955:8;1932:4;:32::i;:::-;1977:5;;1970:33;;-1:-1:-1;;;;;1977:5:113;1975:8;10535:98:99;1970:33:113;2160:5;;2176:3;;:12;;;-1:-1:-1;;;2176:12:113;;;;-1:-1:-1;;;;;2160:5:113;;;;:13;;2174:15;;2176:3;;;:10;;:12;;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10625:1:99;10535:98;2174:15:113;2191:8;2160:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2206:4:113;;2221:3;;:12;;;-1:-1:-1;;;2221:12:113;;;;-1:-1:-1;;;;;2206:4:113;;;;:12;;2219:15;;2221:3;;;:10;;:12;;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;2219:15;2236:8;2206:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2322:5:113;;2309:43;;-1:-1:-1;;;;;2322:5:113;2332:4;;-1:-1:-1;;;;;2332:4:113;2309:43;;;;;;;;;;;;;-1:-1:-1;;;2309:43:113;;;:10;:43::i;:::-;2296:10;:56;;-1:-1:-1;;;;;;2296:56:113;-1:-1:-1;;;;;2296:56:113;;;;;;2365:4;;2358:38;;2365:4;2374:10;;-1:-1:-1;;;;;2374:10:113;2372:13;10535:98:99;2358:38:113;2508:10;;-1:-1:-1;;;;;;;;;;;237:61:1;2497:8:113;;-1:-1:-1;;;;;2508:10:113;2497:23;;-1:-1:-1;;;;;;2497:23:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;2497:23:113;;;690:51:125;663:18;;2497:23:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2526:4:113;;2541:3;;2526:30;;-1:-1:-1;;;2526:30:113;;-1:-1:-1;;;;;2526:4:113;;;;-1:-1:-1;2526:12:113;;-1:-1:-1;2526:30:113;;2541:3;;;;2547:8;;2526:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2712:10:113;;-1:-1:-1;;;;;;;;;;;237:61:1;2701:8:113;;-1:-1:-1;;;;;2712:10:113;2701:23;;-1:-1:-1;;;;;;2701:23:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;2701:23:113;;;690:51:125;663:18;;2701:23:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2730:5:113;;2746:3;;2730:31;;-1:-1:-1;;;2730:31:113;;-1:-1:-1;;;;;2730:5:113;;;;-1:-1:-1;2730:13:113;;-1:-1:-1;2730:31:113;;2746:3;;;;2752:8;;2730:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2834:5:113;;2821:42;;-1:-1:-1;;;;;2834:5:113;2844:4;;-1:-1:-1;;;;;2844:4:113;2821:42;;;;;;;;;;;;;-1:-1:-1;;;2821:42:113;;;:10;:42::i;:::-;2809:9;:54;;-1:-1:-1;;;;;;2809:54:113;-1:-1:-1;;;;;2809:54:113;;;;;;;;;2869:31;;-1:-1:-1;;;2869:31:113;;-1:-1:-1;;;;;;;;;;;237:61:1;2869:7:113;;:31;;2809:54;2891:8;;2869:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2931:4:113;;2918:42;;-1:-1:-1;;;;;;2931:4:113;;-1:-1:-1;2940:5:113;;-1:-1:-1;;;;;2940:5:113;2918:42;;;;;;;;;;;;;-1:-1:-1;;;2918:42:113;;;:10;:42::i;:::-;2906:9;:54;;-1:-1:-1;;;;;;2906:54:113;-1:-1:-1;;;;;2906:54:113;;;;;;;;;2966:31;;-1:-1:-1;;;2966:31:113;;-1:-1:-1;;;;;;;;;;;237:61:1;2966:7:113;;:31;;2906:54;2988:8;;2966:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3015:9:113;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;3004:8:113;;-1:-1:-1;;;;;;3015:9:113;3004:22;;-1:-1:-1;;;;;;3004:22:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;3004:22:113;;;690:51:125;663:18;;3004:22:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3032:5:113;;3048:3;;3032:31;;-1:-1:-1;;;3032:31:113;;-1:-1:-1;;;;;3032:5:113;;;;-1:-1:-1;3032:13:113;;-1:-1:-1;3032:31:113;;3048:3;;;;3054:8;;3032:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3120:5:113;;3113:38;;-1:-1:-1;;;;;3120:5:113;3130:9;;-1:-1:-1;;;;;3130:9:113;3128:12;10535:98:99;3113:38:113;3206:4;;3199:37;;-1:-1:-1;;;;;3206:4:113;3215:9;;-1:-1:-1;;;;;3215:9:113;3213:12;10535:98:99;3199:37:113;3294:9;;-1:-1:-1;;;;;;;;;;;237:61:1;3283:8:113;;-1:-1:-1;;;;;3294:9:113;3283:22;;-1:-1:-1;;;;;;3283:22:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;3283:22:113;;;690:51:125;663:18;;3283:22:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3311:4:113;;3326:3;;3311:30;;-1:-1:-1;;;3311:30:113;;-1:-1:-1;;;;;3311:4:113;;;;-1:-1:-1;3311:12:113;;-1:-1:-1;3311:30:113;;3326:3;;;;3332:8;;3311:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3392:9:113;;:74;;-1:-1:-1;;;3392:74:113;;3422:7;3392:74;;;15576:25:125;3431:9:113;15617:18:125;;;15610:34;;;3442:6:113;15660:18:125;;;15653:34;3392:9:113;15703:18:125;;;15696:34;;;15746:19;;;15739:35;15790:19;;;15783:35;-1:-1:-1;;;;;3392:9:113;;;;:29;;15548:19:125;;3392:74:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3472:9:113;;:75;;-1:-1:-1;;;3472:75:113;;3502:7;3472:75;;;15576:25:125;3511:10:113;15617:18:125;;;15610:34;3523:6:113;15660:18:125;;;15653:34;3472:9:113;15703:18:125;;;15696:34;;;15746:19;;;15739:35;3537:9:113;15790:19:125;;;15783:35;-1:-1:-1;;;;;3472:9:113;;;;:29;;15548:19:125;;3472:75:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3553:9:113;;:75;;-1:-1:-1;;;3553:75:113;;3583:7;3553:75;;;15576:25:125;3592:10:113;15617:18:125;;;15610:34;3604:6:113;15660:18:125;;;15653:34;3553:9:113;15703:18:125;;;15696:34;;;15746:19;;;15739:35;3618:9:113;15790:19:125;;;15783:35;-1:-1:-1;;;;;3553:9:113;;;;:29;;15548:19:125;;3553:75:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3635:9:113;;:75;;-1:-1:-1;;;3635:75:113;;3665:10;3635:75;;;15576:25:125;3677:7:113;15617:18:125;;;15610:34;3686:6:113;15660:18:125;;;15653:34;3635:9:113;15703:18:125;;;15696:34;;;15746:19;;;15739:35;3700:9:113;15790:19:125;;;15783:35;-1:-1:-1;;;;;3635:9:113;;;;:29;;15548:19:125;;3635:75:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3716:9:113;;:75;;-1:-1:-1;;;3716:75:113;;3746:10;3716:75;;;15576:25:125;3758:7:113;15617:18:125;;;15610:34;3767:6:113;15660:18:125;;;15653:34;3716:9:113;15703:18:125;;;15696:34;;;15746:19;;;15739:35;3781:9:113;15790:19:125;;;15783:35;-1:-1:-1;;;;;3716:9:113;;;;:29;;15548:19:125;;3716:75:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3797:9:113;;:75;;-1:-1:-1;;;3797:75:113;;3827:10;3797:75;;;15576:25:125;3839:7:113;15617:18:125;;;15610:34;3848:6:113;15660:18:125;;;15653:34;3797:9:113;15703:18:125;;;15696:34;;;15746:19;;;15739:35;3862:9:113;15790:19:125;;;15783:35;-1:-1:-1;;;;;3797:9:113;;;;:29;;15548:19:125;;3797:75:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7867:243:99:-;7978:21;8014:23;8028:8;8014:13;:23::i;:::-;8007:30;;8043:62;8063:12;8086:11;8100:4;8043:11;:62::i;:::-;7867:243;;;;;:::o;15342:1545:113:-;15465:370;;;;;;;;15502:4;;-1:-1:-1;;;;;15502:4:113;;;15465:370;;15521:5;;;;15465:370;;;;15424:38;15465:370;;;;;;;;;;;;15612:7;15465:370;;;;;;;;;;15634:10;15465:370;;;;;;;;;;15502:4;;15465:370;;;;;;;;;15776:9;15465:370;;;;;;;;;;15914:3;;:48;;-1:-1:-1;;;15914:48:113;;15465:370;;15859:7;;15424:38;;15914:3;;:8;;15859:7;;15914:48;;15465:370;;15914:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16132:5;;16148:3;;:12;;;-1:-1:-1;;;16148:12:113;;;;15872:90;;-1:-1:-1;16036:4:113;16034:15;;-1:-1:-1;;;;;16132:5:113;;;;:13;;16146:15;;16148:3;;;:10;;:12;;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;16146:15;16163:1;16132:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16171:4:113;;16186:3;;:12;;;-1:-1:-1;;;16186:12:113;;;;-1:-1:-1;;;;;16171:4:113;;;;:12;;16184:15;;16186:3;;;:10;;:12;;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;16184:15;16201:1;16171:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16234:10:113;;16275:11;;;;16234:80;;-1:-1:-1;;;16234:80:113;;;;;19526:25:125;;;;16234:10:113;19567:18:125;;;19560:34;16217:11:113;;-1:-1:-1;;;;;16234:10:113;;:23;;19499:18:125;;16234:80:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16210:104;;;;;;16320:50;16340:1;16331:6;:10;16320:50;;;;;;;;;;;;;;;;;:10;:50::i;:::-;16413:3;;16430:5;;16437:4;;16443:11;;;;16413:48;;-1:-1:-1;;;16413:48:113;;-1:-1:-1;;;;;16413:3:113;;;;:16;;:48;;16430:5;;;;16437:4;;;16413:3;;:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16497:4:113;16495:15;16467:25;16545:44;16568:21;16495:15;16545:44;:::i;:::-;16516:73;;16595:62;16630:1;16606:21;:25;16595:62;;;;;;;;;;;;;-1:-1:-1;;;16595:62:113;;;:10;:62::i;:::-;16757:125;16800:21;16786:3;:10;;;16774:9;:22;;;;:::i;:::-;16773:48;;;;:::i;:::-;16829:1;16757:125;;;;;;;;;;;;;;;;;:8;:125::i;:::-;15418:1469;;;;;;;15342:1545::o;9115:268:99:-;9215:9;9232:12;9261:3;;;;;;;;;-1:-1:-1;;;;;9261:3:99;9273:4;9287:3;9247:45;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9298:31:99;;-1:-1:-1;;;9298:31:99;;9232:60;;-1:-1:-1;;;;;;;;;;;;237:61:1;9298:7:99;;:31;;9232:60;;9319:9;;9298:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9335:28:99;;-1:-1:-1;;;9335:28:99;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;9335:8:99;;-1:-1:-1;9335:28:99;;9352:2;;9357:5;;9335:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9376:2:99;;9115:268;-1:-1:-1;;;;;;;9115:268:99:o;7973:934:113:-;8072:5;;8050:19;;-1:-1:-1;;;;;8072:5:113;:15;8090:4;8072:24;;-1:-1:-1;;;;;;8072:24:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;8072:24:113;;;690:51:125;663:18;;8072:24:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8123:4;;8050:46;;-1:-1:-1;8102:18:113;;-1:-1:-1;;;;;8123:4:113;:14;8140:4;8123:23;;-1:-1:-1;;;;;;8123:23:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;8123:23:113;;;690:51:125;663:18;;8123:23:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8194:370;;;;;;;;8231:4;;-1:-1:-1;;;;;8231:4:113;;;8194:370;;8250:5;;;;8194:370;;;;8153:38;8194:370;;;;;;;;;;;;8341:7;8194:370;;;;;;;;;;8363:10;8194:370;;;;;;;;;;8231:4;;8194:370;;;;;;;;;8505:9;8194:370;;;;;;;;;;8612:3;;:48;;-1:-1:-1;;;8612:48:113;;8102:44;;-1:-1:-1;8194:370:113;;8153:38;;8612:3;;:8;;8628:9;;8612:48;;8194:370;;8612:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8682:5;;8570:90;;-1:-1:-1;8666:117:113;;-1:-1:-1;;;;;8682:5:113;:15;8700:4;8682:24;;-1:-1:-1;;;;;;8682:24:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;8682:24:113;;;690:51:125;663:18;;8682:24:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8731:13;;;;8714:30;;:14;:30;:::i;:::-;8666:117;;;;;;;;;;;;;;;;;:8;:117::i;:::-;8805:4;;8789:113;;-1:-1:-1;;;;;8805:4:113;:14;8822:4;8805:23;;-1:-1:-1;;;;;;8805:23:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;8805:23:113;;;690:51:125;663:18;;8805:23:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8852:12;;8836:28;;:13;:28;:::i;:::-;8789:113;;;;;;;;;;;;;-1:-1:-1;;;8789:113:113;;;:8;:113::i;746:282:101:-;799:20;;;;;;;;;:15;:20;;;825:179;846:4;:11;842:1;:15;825:179;;;910:7;;890:1;;-1:-1:-1;;;;;;;;;;;237:61:1;893:11:101;;910:4;;915:1;;910:7;;;;;;:::i;:::-;;;;;;;893:26;;;;;;;;;;;;;5347:25:125;;5335:2;5320:18;;5201:177;893:26:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;893:26:101;;;;;;;;;;;;:::i;:::-;876:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;872:48;;950:1;936:4;:11;:15;;;;:::i;:::-;932:1;:19;928:70;;;981:1;967:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;963:26;;928:70;859:3;;;;:::i;:::-;;;;825:179;;;;1009:14;1021:1;1009:11;:14::i;3881:104:113:-;3925:3;;:16;;;-1:-1:-1;;;3925:16:113;;;;3916:64;;-1:-1:-1;;;;;3925:3:113;;:14;;:16;;;;;;;;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3943:3;;;;;;;;;-1:-1:-1;;;;;3943:3:113;-1:-1:-1;;;;;3943:9:113;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3916:64;;;;;;;;;;;;;-1:-1:-1;;;3916:64:113;;;:8;:64::i;:::-;3881:104::o;16891:1382::-;16953:9;;:28;;-1:-1:-1;;;16953:28:113;;:9;:28;;;6514:41:125;-1:-1:-1;;;;;16953:9:113;;;;:22;;6487:18:125;;16953:28:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17000:3:113;;16987:18;;-1:-1:-1;;;;;;17000:3:113;;-1:-1:-1;4478:10:113;:20::i;16987:18::-;17070:3;;17054:5;;17039:4;;-1:-1:-1;;;;;17070:3:113;;;;17054:5;;;;17039:4;17016:177;17082:36;17039:4;17091:7;10535:98:99;17082:36:113;17162:4;;17126:10;;17144:1;;17153:34;;-1:-1:-1;;;;;17162:4:113;17160:7;17171:5;;-1:-1:-1;;;;;17171:5:113;17179:7;17153:6;:34::i;:::-;17016:177;;;24281:25:125;;;24337:2;24322:18;;24315:34;;;;24365:18;;;24358:34;24423:2;24408:18;;24401:34;24268:3;24253:19;17016:177:113;;;;;;;17212:3;;17199:18;;-1:-1:-1;;;;;17212:3:113;4478:10;:20::i;17199:18::-;17282:3;;17266:5;;17251:4;;-1:-1:-1;;;;;17282:3:113;;;;17266:5;;;;17251:4;17228:177;17294:36;17251:4;17303:7;10535:98:99;17294:36:113;17374:4;;17338:10;;17356:1;;17365:34;;-1:-1:-1;;;;;17374:4:113;17372:7;10535:98:99;17365:34:113;17228:177;;;24281:25:125;;;24337:2;24322:18;;24315:34;;;;24365:18;;;24358:34;24423:2;24408:18;;24401:34;24268:3;24253:19;17228:177:113;;;;;;;17424:3;;17411:18;;-1:-1:-1;;;;;17424:3:113;4478:10;:20::i;17411:18::-;17503:5;;17491:4;;17478:3;;17518:4;;-1:-1:-1;;;;;17503:5:113;;;;17491:4;;;-1:-1:-1;;;;;;;;;;;17440:182:113;17478:3;17503:5;17544:36;17491:4;17553:7;17564:5;;-1:-1:-1;;;;;17564:5:113;17572:7;17544:8;:36::i;:::-;17588:10;17606:1;17615;17440:182;;;;;;;;;;;:::i;:::-;;;;;;;;17669:370;;;;;;;;17706:4;;-1:-1:-1;;;;;17706:4:113;;;17669:370;;17725:5;;;;17669:370;;;;17628:38;17669:370;;;;;;;;;;;;17816:7;17669:370;;;;;;;;;;17838:10;17669:370;;;;;;;;;;17706:4;;17669:370;;;;;;;;;17980:9;17669:370;;;;;;;;;;18087:3;;:48;;-1:-1:-1;;;18087:48:113;;17669:370;;17628:38;;18087:3;;;:8;;18103:9;;18087:48;;17669:370;;18087:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18157:12;;18188:4;;18157:12;;-1:-1:-1;18141:127:113;;18177:36;;-1:-1:-1;;;;;18188:4:113;18186:7;10535:98:99;18177:36:113;18141:127;;;;;;;;;;;;;;;;;:8;:127::i;9597:2036::-;9708:414;;;;;;;;9745:4;;-1:-1:-1;;;;;9745:4:113;;;9708:414;;9764:5;;;;9708:414;;;;;;;;9667:38;9708:414;;;;;;;;;;;;9855:7;9708:414;;;;;;;;;;9877:10;9708:414;;;;9954:12;9708:414;;;;9745:4;;9708:414;;;;;;;;;10063:9;9708:414;;;;;;;;;;10152:3;;:12;;-1:-1:-1;;;10152:12:113;;;;9708:414;;9667:38;;10152:3;;;:10;;:12;;;;;9708:414;;10152:12;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10180:5;;10152:43;;-1:-1:-1;;;10152:43:113;;-1:-1:-1;;;;;10152:27:113;;;;;;:43;;10180:5;;;10189:4;;10152:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10128:67;;10201:20;10224:3;;;;;;;;;-1:-1:-1;;;;;10224:3:113;-1:-1:-1;;;;;10224:10:113;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10252:5;;10224:43;;-1:-1:-1;;;10224:43:113;;-1:-1:-1;;;;;10224:27:113;;;;;;:43;;10252:5;;;10261:4;;10224:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10282:3;;10298;;10201:66;;-1:-1:-1;10273:65:113;;-1:-1:-1;;;;;10282:3:113;;;;:13;;10298:3;10282:21;;-1:-1:-1;;;;;;10282:21:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;10282:21:113;;;690:51:125;663:18;;10282:21:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10305:1;10273:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;10358:3;;10345:18;;-1:-1:-1;;;;;10358:3:113;4478:10;:20::i;10345:18::-;10437:5;;10425:4;;10412:3;;10452:4;;-1:-1:-1;;;;;10437:5:113;;;;10425:4;;;-1:-1:-1;;;;;;;;;;;10374:252:113;10412:3;10437:5;10487:36;10425:4;10496:7;10535:98:99;10487:36:113;10531:10;10549:1;10558;10374:252;;;;;;;;;;;:::i;:::-;;;;;;;;10674:3;;:48;;-1:-1:-1;;;10674:48:113;;10632:39;;-1:-1:-1;;;;;10674:3:113;;:8;;10690:9;;10674:48;;10708:8;;10674:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10632:90;;10728:97;10760:1;10746:3;:11;;;:15;10728:97;;;;;;;;;;;;;;;;;:10;:97::i;:::-;10891:3;;10904:5;;10914:4;;10921:11;;;;10891:42;;-1:-1:-1;;;10891:42:113;;10873:15;;-1:-1:-1;;;;;10891:3:113;;;;:10;;:42;;10904:5;;;;10914:4;;;10891:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10873:60;-1:-1:-1;10939:136:113;1737:2:34;4074:56;;;-1:-1:-1;;;;;4074:56:34;11014:7:113;;;;10999:12;;:22;;11014:7;10999:22;:::i;:::-;10976:8;:19;;;:46;;;;:::i;:::-;10939:136;;;;;;;;;;;;;;;;;:8;:136::i;:::-;11081:125;-1:-1:-1;;;;;4419:56:34;;11140:3:113;:13;;;11118:8;:19;;;:35;;;;:::i;:::-;11081:125;;;;;;;;;;;;;;;;;:8;:125::i;:::-;11260:3;;11272:5;;11279:4;;11285:11;;;;11260:37;;-1:-1:-1;;;11260:37:113;;11244:103;;-1:-1:-1;;;;;11260:3:113;;;;:11;;:37;;11272:5;;;;11279:4;;;11260:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11307:4;11244:103;;;;;;;;;;;;;-1:-1:-1;;;11244:103:113;;;:8;:103::i;:::-;11369:3;;:12;;;-1:-1:-1;;;11369:12:113;;;;11353:136;;-1:-1:-1;;;;;11369:3:113;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11397:5;;11369:43;;-1:-1:-1;;;11369:43:113;;-1:-1:-1;;;;;11369:27:113;;;;;;:43;;11397:5;;;11406:4;;11369:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11439:13;;;;11420:32;;:16;:32;:::i;:::-;11353:136;;;;;;;;;;;;;-1:-1:-1;;;11353:136:113;;;:8;:136::i;:::-;11511:3;;:12;;;-1:-1:-1;;;11511:12:113;;;;11495:133;;-1:-1:-1;;;;;11511:3:113;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11539:4;;11511:42;;-1:-1:-1;;;11511:42:113;;-1:-1:-1;;;;;11511:27:113;;;;;;:42;;11539:4;;;11547;;11511:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11579:12;;11561:30;;:15;:30;:::i;11495:133::-;9661:1972;;;;;9597:2036::o;6527:834::-;6596:14;6615:4;6634:9;;:28;;-1:-1:-1;;;;;;6634:28:113;;:9;:28;;;6514:41:125;-1:-1:-1;;;;;6613:15:113;;;;;-1:-1:-1;6634:9:113;;;:22;;6487:18:125;;6634:28:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6710:371:113;;;;;;;;6747:4;;-1:-1:-1;;;;;6747:4:113;;;6710:371;;6766:5;;;;6710:371;;;;6669:38;6710:371;;;;;;;;;;;;6857:7;6710:371;;;;;;;;;;6879:10;6710:371;;;;;;;;;;6747:4;6710:371;;;;;;;;;;;7022:9;6710:371;;;;;;;;;;7129:3;;:48;;-1:-1:-1;;;7129:48:113;;6710:371;;-1:-1:-1;6669:38:113;-1:-1:-1;7129:3:113;;;;;:8;;7145:9;;7129:48;;6710:371;;7129:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7087:90;;7183:55;7207:1;7194:3;:10;;;:14;7183:55;;;;;;;;;;;;;;;;;:10;:55::i;:::-;7244:112;7272:3;:10;;;7260:9;:22;;;;:::i;:::-;7292:4;-1:-1:-1;;;;;7290:15:113;;7244:112;;;;;;;;;;;;;;;;;:8;:112::i;:::-;6590:771;;;6527:834::o;9928:132:99:-;10009:4;10046:9;10050:5;10046:2;:9;:::i;:::-;10028:15;10033:1;10036:6;10028:4;:15::i;:::-;:27;;;;:::i;:::-;10021:34;9928:132;-1:-1:-1;;;;9928:132:99:o;18277:1412:113:-;18366:355;;;;;;;;18403:4;;-1:-1:-1;;;;;18403:4:113;;;18366:355;;18422:5;;;;18366:355;;;;-1:-1:-1;18366:355:113;;;;;;;;;;;;18500:7;18366:355;;;;;;;;;;18522:9;18366:355;;;;;;;;;;18403:4;;18366:355;;;;;;;;;18662:9;18366:355;;;;;;;;;;;18740:3;;18366:355;;18727:18;;18740:3;4478:10;:20::i;18727:18::-;18819:5;;18807:4;;18794:3;;18756:199;;18834:4;;-1:-1:-1;;;;;18819:5:113;;;;18807:4;;;-1:-1:-1;;;;;;;;;;;18756:199:113;;;18794:3;;;;18819:5;;;;;;;;18887:1;;18756:199;:::i;:::-;;;;;;;;18961:3;;:36;;-1:-1:-1;;;18961:36:113;;-1:-1:-1;;;;;18961:3:113;;;;:8;;18977:9;;18961:36;;18988:8;;18961:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19016:3:113;;19003:18;;-1:-1:-1;;;;;19016:3:113;4478:10;:20::i;19003:18::-;19095:5;;19083:4;;19070:3;;19032:199;;19110:4;;-1:-1:-1;;;;;19095:5:113;;;;19083:4;;;-1:-1:-1;;;;;;;;;;;19032:199:113;;;19070:3;;;;19095:5;;;;;;;;19163:1;;19032:199;:::i;:::-;;;;;;;;19237:3;;:36;;-1:-1:-1;;;19237:36:113;;-1:-1:-1;;;;;19237:3:113;;;;:8;;19253:9;;19237:36;;19264:8;;19237:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19322:3:113;;19362:5;;19375:4;;19322:63;;-1:-1:-1;;;19322:63:113;;19280:18;;;;-1:-1:-1;;;;;19322:3:113;;;;:17;;:63;;19349:4;;19362:5;;;19375:4;;19322:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19322:63:113;;;;;;;;;;;;:::i;:::-;19279:106;;;;19391:72;19402:4;:11;19417:1;19402:16;:36;;;;-1:-1:-1;19422:11:113;;:16;19402:36;19391:72;;;;;;;;;;;;;-1:-1:-1;;;19391:72:113;;;:10;:72::i;:::-;19469:3;;19486:5;;19493:4;;19499:7;;-1:-1:-1;;;;;19469:3:113;;;;:16;;19486:5;;;19493:4;;19499;;19469:3;;19499:7;;;;:::i;:::-;;;;;;;19508:5;19469:45;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19535:3:113;;19562:5;;19569:4;;19535:39;;-1:-1:-1;;;19535:39:113;;-1:-1:-1;;;;;19535:3:113;;;;:17;;:39;;19555:4;;19562:5;;;;19569:4;;19535:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19535:39:113;;;;;;;;;;;;:::i;:::-;19598:11;;19520:54;;-1:-1:-1;19520:54:113;-1:-1:-1;19580:104:113;;19613:1;19598:16;:36;;;;;19618:4;:11;19633:1;19618:16;19598:36;19580:104;;;;;;;;;;;;;;;;;:10;:104::i;8911:682::-;9066:370;;;;;;;;9103:4;;-1:-1:-1;;;;;9103:4:113;;;9066:370;;9122:5;;;;9066:370;;;;8983:17;9066:370;;;;;;;;;;;;9213:7;9066:370;;;;;;;;;;9235:10;9066:370;;;;;;;;;;9103:4;;9066:370;;;;;;;;;9377:9;9066:370;;;;;;;;;;9484:3;;:18;;-1:-1:-1;;;9484:18:113;;9005:4;9003:15;;8983:17;;9484:3;;;;;:8;;:18;;9066:370;;9484:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9442:60;-1:-1:-1;9524:64:113;9535:4;-1:-1:-1;;;;;9533:15:113;;9550:12;9524:64;;;;;;;;;;;;;-1:-1:-1;;;9524:64:113;;;:8;:64::i;7365:604::-;7480:370;;;;;;;;7517:4;;-1:-1:-1;;;;;7517:4:113;;;7480:370;;7536:5;;;7480:370;;;;7439:38;7480:370;;;;;;;;;;;;7627:7;7480:370;;;;;;;;;;7649:10;7480:370;;;;;;;;;;7517:4;;7480:370;;;;;;;;;7791:9;7480:370;;;;;;;;7856:63;;-1:-1:-1;;;7856:63:113;;-1:-1:-1;;;;;;;;;;;237:61:1;7856:15:113;;:63;;;;31658:2:125;31640:21;;;31697:2;31677:18;;;31670:30;31736:34;31731:2;31716:18;;31709:62;-1:-1:-1;;;31802:2:125;31787:18;;31780:42;31854:3;31839:19;;31457:407;7856:63:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7925:3:113;;:39;;-1:-1:-1;;;7925:39:113;;-1:-1:-1;;;;;7925:3:113;;;;-1:-1:-1;7925:8:113;;-1:-1:-1;7941:12:113;;7925:39;;7955:8;;7925:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5100:603::-;5236:370;;;;;;;;5273:4;;-1:-1:-1;;;;;5273:4:113;;;5236:370;;5292:5;;;5236:370;;;;5273:4;5236:370;;;;5195:38;5236:370;;;;;;5382:7;5236:370;;;;;;;;;;5431:10;5236:370;;;;;;;;;;5273:4;5236:370;;;;;;;;;;;5547:9;5236:370;;;;;;;;5612:44;;-1:-1:-1;;;5612:44:113;;-1:-1:-1;;;;;;;;;;;237:61:1;5612:15:113;;:44;;;;32070:2:125;32052:21;;;32109:2;32089:18;;;32082:30;32148:27;32143:2;32128:18;;32121:55;32208:2;32193:18;;31869:348;5612:44:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5662:3:113;;:36;;-1:-1:-1;;;5662:36:113;;-1:-1:-1;;;;;5662:3:113;;;;-1:-1:-1;5662:8:113;;-1:-1:-1;5678:9:113;;5662:36;;5689:8;;5662:36;;;:::i;7053:97:99:-;7094:16;7125:20;7139:5;7125:13;:20::i;:::-;7118:27;;7053:97;:::o;13412:1117:113:-;13527:370;;;;;;;;13564:4;;-1:-1:-1;;;;;13564:4:113;;;13527:370;;13583:5;;;;13527:370;;;;13486:38;13527:370;;;;;;;;;;;;13674:7;13527:370;;;;;;;;;;13696:10;13527:370;;;;;;;;;;13564:4;;13527:370;;;;;;;;;13838:9;13527:370;;;;;;;;;;13945:3;;:48;;-1:-1:-1;;;13945:48:113;;13527:370;;13486:38;;13945:3;;;:8;;13961:9;;13945:48;;13527:370;;13945:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14171:3;;14188:5;;14198:4;;14171:42;;-1:-1:-1;;;14171:42:113;;13903:90;;-1:-1:-1;14070:4:113;14068:15;;-1:-1:-1;;;;;14171:3:113;;;;:14;;:42;;14188:5;;;;14198:4;;;14205:7;;14171:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14232:3:113;;14219:18;;-1:-1:-1;;;;;;14232:3:113;;-1:-1:-1;4478:10:113;:20::i;14219:18::-;14273:4;;-1:-1:-1;;;;;14273:4:113;14263:5;;-1:-1:-1;;;;;14248:44:113;;;;14263:5;-1:-1:-1;;;;;14248:44:113;;14280:3;:11;;;14248:44;;;;5347:25:125;;5335:2;5320:18;;5201:177;14248:44:113;;;;;;;;14323:10;;14364:11;;;;14323:80;;-1:-1:-1;;;14323:80:113;;;;;19526:25:125;;;;14299:12:113;19567:18:125;;;19560:34;;;14299:12:113;-1:-1:-1;;;;;14323:10:113;;:23;;19499:18:125;;14323:80:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14298:105;;;;;;14409:35;14420:7;14409:35;;;;;;;;;;;;;-1:-1:-1;;;14409:35:113;;;:10;:35::i;:::-;14450:74;14461:4;-1:-1:-1;;;;;14459:15:113;;14476:13;14450:74;;;;;;;;;;;;;;;;;:8;:74::i;461:281:101:-;516:20;;;;;;;;;:15;:20;;;542:176;563:5;:12;559:1;:16;542:176;;;623:8;;608:1;;-1:-1:-1;;;;;;;;;;;237:61:1;611:11:101;;623:5;;629:1;;623:8;;;;;;:::i;:::-;;;;;;;611:21;;;;;;;;;;;;;5347:25:125;;5335:2;5320:18;;5201:177;611:21:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:21:101;;;;;;;;;;;;:::i;:::-;594:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;590:43;;664:1;649:5;:12;:16;;;;:::i;:::-;645:1;:20;641:71;;;695:1;681:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;677:26;;641:71;577:3;;;;:::i;:::-;;;;542:176;;1610:472:0;1644:4;1660:7;;;;;;;1656:422;;;-1:-1:-1;1684:7:0;;;;;;;;1610:472::o;1656:422::-;1712:17;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;1745:300;;1919:43;;1780:20;;-1:-1:-1;;;;;;;;;;;1459:61:0;1870:34;;1919:43;;1459:61;;-1:-1:-1;;;1944:17:0;1919:43;;;:::i;:::-;;;;-1:-1:-1;;1919:43:0;;;;;;;;;;1833:141;;;1919:43;1833:141;;:::i;:::-;;;;-1:-1:-1;;1833:141:0;;;;;;;;;;1804:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:207;;;2020:7;2009:27;;;;;;;;;;;;:::i;:::-;1994:42;;1767:278;1745:300;2059:12;1610:472;-1:-1:-1;1610:472:0:o;8937:174:99:-;9053:3;;9016:13;;9039:19;;-1:-1:-1;;;;;9053:3:99;9039:11;:19::i;:::-;-1:-1:-1;9090:3:99;;9072:33;;-1:-1:-1;;;;;9090:3:99;;;;9095:4;;9101:3;;9072:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9064:42;;8937:174;;;;;:::o;8665:268::-;8765:9;8782:12;8811:3;;;;;;;;;-1:-1:-1;;;;;8811:3:99;8823:4;8837:3;8797:45;;;;;:::i;11637:1771:113:-;11789:370;;;;;;;;11826:4;;-1:-1:-1;;;;;11826:4:113;;;11789:370;;11845:5;;;;11789:370;;;;11748:38;11789:370;;;;;;;;;;;;11936:7;11789:370;;;;;;;;;;11958:10;11789:370;;;;;;;;;;11826:4;;11789:370;;;;;;;;;12100:9;11789:370;;;;;;;;;;12207:3;;:48;;-1:-1:-1;;;12207:48:113;;11789:370;;11748:38;;12207:3;;;:8;;12223:9;;12207:48;;11789:370;;12207:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12284:4;;12165:90;;-1:-1:-1;12261:20:113;;-1:-1:-1;;;;;12284:4:113;:14;12301:4;12284:23;;-1:-1:-1;;;;;;12284:23:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;12284:23:113;;;690:51:125;663:18;;12284:23:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12261:46;;12313:22;12338:3;;;;;;;;;-1:-1:-1;;;;;12338:3:113;-1:-1:-1;;;;;12338:10:113;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12366:5;;12338:43;;-1:-1:-1;;;12338:43:113;;-1:-1:-1;;;;;12338:27:113;;;;;;:43;;12366:5;;;12375:4;;12338:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12526:10;;12560:11;;;;12526:70;;-1:-1:-1;;;12526:70:113;;;;;19526:25:125;;;;12585:9:113;19567:18:125;;;19560:34;12313:68:113;;-1:-1:-1;12428:12:113;;;;;;;;-1:-1:-1;;;;;12526:10:113;;:23;;19499:18:125;;12526:70:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12420:176;;;;;;;;;12603:43;12614:7;12603:43;;;;;;;;;;;;;-1:-1:-1;;;12603:43:113;;;:10;:43::i;:::-;12722:5;;12674:133;;12690:13;;12711:38;;-1:-1:-1;;;;;12722:5:113;12732:4;;-1:-1:-1;;;;;12732:4:113;12739:9;12711:8;:38::i;:::-;12674:133;;;;;;;;;;;;;;;;;:8;:133::i;:::-;12875:4;;12859:138;;-1:-1:-1;;;;;12875:4:113;:14;12892:4;12875:23;;-1:-1:-1;;;;;;12875:23:113;;;;;;;-1:-1:-1;;;;;708:32:125;;;12875:23:113;;;690:51:125;663:18;;12875:23:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12906:32;12924:14;12906:15;:32;:::i;:::-;12859:138;;;;;;;;;;;;;;;;;:8;:138::i;:::-;13020:3;;:12;;;-1:-1:-1;;;13020:12:113;;;;13004:154;;-1:-1:-1;;;;;13020:3:113;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13048:5;;13020:43;;-1:-1:-1;;;13020:43:113;;-1:-1:-1;;;;;13020:27:113;;;;;;:43;;13048:5;;;13057:4;;13020:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13092:19;13108:3;13092:13;:19;:::i;:::-;13071:41;;:17;:41;:::i;:::-;13004:154;;;;;;;;;;;;;;;;;:8;:154::i;:::-;13222:3;;13235:5;;13245:4;;13252:11;;;;13222:42;;-1:-1:-1;;;13222:42:113;;13204:15;;-1:-1:-1;;;;;13222:3:113;;;;:10;;:42;;13235:5;;;;13245:4;;;13222:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13204:60;-1:-1:-1;13271:132:113;-1:-1:-1;;;;;4419:56:34;;13341:9:113;13325:3;:13;;;13308:8;:14;;;:30;;;;:::i;:::-;:42;;;;:::i;13271:132::-;11702:1706;;;;;;;;;11637:1771::o;9600:169:99:-;9653:4;9665:11;:9;:11::i;:::-;9682:13;9698:1;-1:-1:-1;;;;;9698:10:99;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9682:28;;;;9716:14;:12;:14::i;:::-;9752:12;9756:8;9752:2;:12;:::i;:::-;9743:21;;:6;:21;:::i;7640:173::-;7728:16;7761:47;7775:12;7789:11;7802:5;7761:13;:47::i;5707:816:113:-;5858:371;;;;;;;;5895:4;;-1:-1:-1;;;;;5895:4:113;;;5858:371;;5914:5;;;;5858:371;;;;5779:14;5858:371;;;;;;;;;;;;6005:7;5858:371;;;;;;;;;;6054:10;5858:371;;;;;;;;;;5895:4;5858:371;;;;;;;;;;;6170:9;5858:371;;;;;;;;;;6277:3;;:48;;-1:-1:-1;;;6277:48:113;;5798:4;5796:15;;5779:14;;6277:3;;;;;:8;;6293:9;;6277:48;;5858:371;;6277:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6347:12;;6378:4;;6347:12;;-1:-1:-1;6331:107:113;;6367:36;;-1:-1:-1;;;;;6378:4:113;6376:7;10535:98:99;6367:36:113;6331:107;;;;;;;;;;;;;-1:-1:-1;;;6331:107:113;;;:8;:107::i;:::-;6444:74;6453:9;6466:4;-1:-1:-1;;;;;6464:15:113;;6444:74;;;;;;;;;;;;;;;;;:8;:74::i;3505:97:100:-;3554:43;;-1:-1:-1;;;3554:43:100;;3568:4;3554:43;;;35226:41:125;;;35283:18;;;35276:50;;;35342:18;;;35335:50;;;35401:18;;;35394:50;-1:-1:-1;;;;;35481:32:125;;35460:19;;;35453:61;-1:-1:-1;;;;;;;;;;;237:61:1;3554:13:100;;35198:19:125;;3554:43:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6137:209:99;6267:3;;:21;;-1:-1:-1;;;6267:21:99;;6233:4;;;;-1:-1:-1;;;;;6267:3:99;;;;:10;;:21;;6278:4;;6284:3;;6267:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6245:43;-1:-1:-1;6336:5:99;;-1:-1:-1;6311:20:99;5147:52:33;;;;;;6336:5:99;6311:20;:::i;:::-;6302:30;;:5;:30;:::i;:::-;6301:40;;;;:::i;:::-;6294:47;6137:209;-1:-1:-1;;;;;6137:209:99:o;4812:172:0:-;4905:1;4900;:6;4896:84;;4921:30;4947:3;4921:30;;;;;;:::i;:::-;;;;;;;;4959:14;4968:1;4971;4959:8;:14::i;2244:802:99:-;2391:21;;2303:115;;2326:4;;2339:12;;2364:19;;2391:21;;;2303:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2296:4:99;:122;;-1:-1:-1;;;;;;2296:122:99;-1:-1:-1;;;;;2296:122:99;;;;;;;;;;2455:4;2522:22;;2432:118;;2468:13;;2494:20;;2522:22;;;;;2432:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2424:5:99;:126;;-1:-1:-1;;;;;;2424:126:99;-1:-1:-1;;;;;2424:126:99;;;;;;;;;2599:4;;2612:7;:24;2585:52;;2599:4;;;;;2424:126;2612:24;;2585:13;:52::i;:::-;2579:3;:58;;-1:-1:-1;;;;;;2579:58:99;-1:-1:-1;;;;;2579:58:99;;;;;;;;;2858:27;;;-1:-1:-1;;;2858:27:99;;;;:8;;2874;;2858:27;;;;;-1:-1:-1;;2858:27:99;;;;;;;2874:8;2579:58;2858:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2962:4:99;;2977:3;;2962:36;;-1:-1:-1;;;2962:36:99;;-1:-1:-1;;;;;2962:4:99;;;;-1:-1:-1;2962:12:99;;-1:-1:-1;2962:36:99;;-1:-1:-1;2977:3:99;;;-1:-1:-1;;2983:14:99;2962:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3004:5:99;;3020:3;;3004:37;;-1:-1:-1;;;3004:37:99;;-1:-1:-1;;;;;3004:5:99;;;;:13;;:37;;3020:3;;;-1:-1:-1;;3026:14:99;3004:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2244:802::o;3611:116:2:-;3694:28;3699:5;3706:2;3710:4;3716:5;3694:4;:28::i;8114:349:99:-;8213:15;8225:2;8213:11;:15::i;:::-;;8234;8246:2;8234:11;:15::i;:::-;-1:-1:-1;8277:18:99;;8255:52;;-1:-1:-1;;;8255:52:99;;-1:-1:-1;;;;;38959:15:125;;;8255:52:99;;;38941:34:125;39011:15;;;38991:18;;;38984:43;39043:18;;;39036:34;;;;8297:1:99;39086:18:125;;;39079:34;8300:6:99;39129:19:125;;;39122:35;8255:13:99;;;;;;38875:19:125;;8255:52:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8335:18:99;;8313:52;;-1:-1:-1;;;8313:52:99;;-1:-1:-1;;;;;38959:15:125;;;8313:52:99;;;38941:34:125;39011:15;;;38991:18;;;38984:43;39043:18;;;39036:34;;;;8355:1:99;39086:18:125;;;39079:34;8358:6:99;39129:19:125;;;39122:35;8313:13:99;;;;-1:-1:-1;8313:13:99;;-1:-1:-1;38875:19:125;;8313:52:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8386:8:99;;8395:2;8406;-1:-1:-1;;;;;8399:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8399:19:99;;;;;;;;;;;;:::i;:::-;8386:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;261:34:1;;245:52;;237:61;;-1:-1:-1;;;;;8425:8:99;;8434:2;8445;-1:-1:-1;;;;;8438:17:99;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8438:19:99;;;;;;;;;;;;:::i;:::-;8425:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:169:0;3023:9;3018:95;;3047:30;3073:3;3047:30;;;;;;:::i;:::-;;;;;;;;3085:21;3096:9;3085:10;:21::i;5747:115:5:-;5798:59;5853:2;5814:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5814:42:5;;;;;;;;;;;;;;-1:-1:-1;;;;;5814:42:5;-1:-1:-1;;;5814:42:5;;;5798:15;:59::i;3368:178:0:-;3467:1;-1:-1:-1;;;;;3462:6:0;:1;-1:-1:-1;;;;;3462:6:0;;3458:84;;3483:30;3509:3;3483:30;;;;;;:::i;:::-;;;;;;;;3521:14;3530:1;3533;3521:8;:14::i;5935:198:99:-;6063:3;;:21;;-1:-1:-1;;;6063:21:99;;6029:4;;;;-1:-1:-1;;;;;6063:3:99;;;;:10;;:21;;6074:4;;6080:3;;6063:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6041:43;-1:-1:-1;6122:5:99;;-1:-1:-1;5147:52:33;;;;;;6107:11:99;5069:136:33;3638:232:100;3688:4;-1:-1:-1;;;;;3704:15:100;;3700:136;;-1:-1:-1;;;;;;;;;;;3734:37:100;;;;39595:2:125;39577:21;;;39634:2;39614:18;;;39607:30;39673:32;39668:2;39653:18;;39646:60;39738:2;39723:18;;39393:354;3734:37:100;;;;;;;;3784:31;;;39964:21:125;;;40021:1;40001:18;;;39994:29;-1:-1:-1;;;40054:2:125;40039:18;;40032:37;-1:-1:-1;;;;;40143:32:125;;40136:4;40121:20;;40114:62;3784:31:100;;;;;;;40101:3:125;3784:31:100;;;3823:6;:4;:6::i;:::-;-1:-1:-1;;;;;;3849:15:100;;;;3638:232::o;1434:57::-;1470:16;1480:5;1470:9;:16::i;1517:186::-;1560:10;:15;1579:1;1560:20;1556:143;;1599:15;;1590:25;;-1:-1:-1;;;1590:25:100;;-1:-1:-1;;;;;1599:15:100;;;1590:25;;;690:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1590:8:100;;663:18:125;;1590:25:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1556:143;1632:10;:15;1651:1;1632:20;1628:71;;1676:15;;1662:30;;-1:-1:-1;;;1662:30:100;;-1:-1:-1;;;;;1676:15:100;;;1662:30;;;690:51:125;-1:-1:-1;;;;;;;;;;;237:61:1;1662:13:100;;663:18:125;;1662:30:100;510:237:125;4580:228:0;4638:1;4633;:6;4629:175;;-1:-1:-1;;;;;;;;;;;4654:41:0;;;;40389:2:125;40371:21;;;40428:2;40408:18;;;40401:30;40467:34;40462:2;40447:18;;40440:62;-1:-1:-1;;;40533:2:125;40518:18;;40511:32;40575:3;40560:19;;40187:398;4654:41:0;;;;;;;;4708:31;4737:1;4708:31;;;;;;:::i;:::-;;;;;;;;4752;4781:1;4752:31;;;;;;:::i;:::-;;;;;;;;4791:6;:4;:6::i;3731:764:2:-;3903:38;;;-1:-1:-1;;;;;708:32:125;;;3903:38:2;;;;690:51:125;;;;3903:38:2;;;;;;;;;;663:18:125;;;;3903:38:2;;;;;;;-1:-1:-1;;;;;3903:38:2;-1:-1:-1;;;3903:38:2;;;3885:62;;3861:20;;3885:10;;;:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3858:89;;;3953:12;3979:7;3968:27;;;;;;;;;;;;:::i;:::-;3953:42;-1:-1:-1;4024:71:2;4090:4;4024:51;4072:2;4024:38;-1:-1:-1;;;4024:22:2;:8;4040:5;4024:15;:22::i;:::-;:26;19133:9;;;:16;;-1:-1:-1;;19133:16:2;;;;;;;;;;;;:9;19028:143;4024:38;:47;19445:10;;;:44;;;;;;;-1:-1:-1;19445:44:2;;;;;;;-1:-1:-1;;;;;19469:18:2;;;;19445:44;;;:10;19335:176;4024:51;:65;;:71::i;:::-;4133:6;4129:362;;;4199:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4199:34:2;-1:-1:-1;;;4199:34:2;;;4179:62;;4152:23;;-1:-1:-1;;;;;4179:10:2;;;:62;;4199:34;4179:62;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:92;;;4249:11;4274:10;4263:30;;;;;;;;;;;;:::i;:::-;4249:44;;4312:7;4305:4;:14;4301:116;;;4342:14;4352:4;4342:7;:14;:::i;:::-;4331:26;;;;:::i;:::-;;;4301:116;;;4393:14;4400:7;4393:4;:14;:::i;:::-;4382:26;;;;:::i;:::-;;;4301:116;4424:60;4477:6;4424:38;-1:-1:-1;;;4424:22:2;:8;4440:5;4424:15;:22::i;:60::-;4141:350;;4129:362;3825:670;;3731:764;;;;:::o;2809:135:0:-;2865:9;2860:80;;-1:-1:-1;;;;;;;;;;;2889:30:0;;;;41826:2:125;41808:21;;;41865:2;41845:18;;;41838:30;41904:25;41899:2;41884:18;;41877:53;41962:2;41947:18;;41624:347;2889:30:0;;;;;;;;2927:6;:4;:6::i;631:356:5:-;718:14;;583:42;834:2;821:16;;697:18;;718:14;821:16;583:42;873:5;853:124;844:133;;793:190;;631:356;:::o;3121:243:0:-;3185:1;-1:-1:-1;;;;;3180:6:0;:1;-1:-1:-1;;;;;3180:6:0;;3176:184;;-1:-1:-1;;;;;;;;;;;3201:44:0;;;;42178:2:125;42160:21;;;42217:2;42197:18;;;42190:30;42256:34;42251:2;42236:18;;42229:62;-1:-1:-1;;;42322:2:125;42307:18;;42300:35;42367:3;42352:19;;41976:401;3201:44:0;;;;;;;;3258:34;3290:1;3258:34;;;;;;:::i;:::-;;;;;;;;3305;3337:1;3305:34;;;;;;:::i;2086:353::-;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;2117:298;;2283:64;;2148:11;;-1:-1:-1;;;;;;;;;;;1459:61:0;2227:43;;2283:64;;1459:61;;-1:-1:-1;;;2308:17:0;2340:4;;2283:64;;;:::i;:::-;;;;-1:-1:-1;;2283:64:0;;;;;;;;;;2192:165;;;2283:64;2192:165;;:::i;:::-;;;;-1:-1:-1;;2192:165:0;;;;;;;;;;2165:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2117:298:0;2420:7;:14;;-1:-1:-1;;2420:14:0;;;;;2086:353::o;959:444:100:-;1025:1;1007:10;:19;1050:17;;;-1:-1:-1;;;1050:17:100;;;;:4;;:15;;:17;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1032:15;:35;;-1:-1:-1;;;;;;1032:35:100;-1:-1:-1;;;;;1032:35:100;;;;;;;;;1104:4;1077:32;1073:326;;1180:4;-1:-1:-1;;;;;1180:15:100;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:15;;-1:-1:-1;;;;;1161:15:100;;;:36;;;1157:236;;1260:1;1242:10;:19;3004:37:99;2244:802::o;1157:236:100:-;1280:7;1276:117;;;1359:1;1341:10;:19;1370:14;;;-1:-1:-1;;;1370:14:100;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1370:12:100;;:14;;;;;1341:15;;1370:14;;;;;;;1341:15;237:61:1;1370:14:100;;;;;;;;;;18868:156:2;18980:12;;;:22;;-1:-1:-1;;;;;;18980:22:2;-1:-1:-1;;;;;18980:22:2;;;;;;;;;;:12;18868:156::o;20119:111::-;20192:33;20206:4;20220:3;20522:12;;;;20554:9;;;;20588:11;;;;20628:10;;;20605:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20522:12:2;;;;20554:9;;;;;;20508:11;;20605:33;;20628:10;;20605:33;;20628:10;20605:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20645:17;20682:4;20688:12;20696:3;20688:7;:12::i;:::-;20665:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20665:36:2;;;;;;;;;-1:-1:-1;;;;;20712:15:2;;;;;;:10;;;20665:36;20712:15;;;;;;-1:-1:-1;;;;;;20712:21:2;;;;;;;;;20665:36;;-1:-1:-1;20712:21:2;;:15;;20744:34;;20761:3;;20766:11;;20744:34;;:::i;:::-;;;;-1:-1:-1;;20744:34:2;;;;;;;;;20734:45;;20744:34;20734:45;;;;20712:68;;;;;;;;;;-1:-1:-1;20712:68:2;;;;20707:100;;20790:10;20795:4;20790;:10::i;:::-;;20707:100;-1:-1:-1;;;;;20842:15:2;;20812:12;20842:15;;;;;;;;;;;-1:-1:-1;;;;;;20842:21:2;;;;;;;;;20874:34;;20842:21;;20812:12;;20874:34;;20891:3;;20896:11;;20874:34;;:::i;:::-;;;;;;;;;;;;;20864:45;;;;;;20842:68;;;;;;;;;;;;20827:89;;20812:104;;20923:12;20952:17;20973:3;-1:-1:-1;;;;;20973:14:2;20988:4;20973:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20949:44:2;-1:-1:-1;21008:38:2;;-1:-1:-1;20949:44:2;21029:16;21034:11;21029:2;:16;:::i;:::-;21008:14;:38::i;:::-;21073:28;;-1:-1:-1;;;21073:28:2;;21001:45;;-1:-1:-1;21058:12:2;;-1:-1:-1;;;;;;;;;;;;21073:17:2;;;:28;;21091:3;;21096:4;;21073:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21058:43;;21120:4;21112;:12;21108:186;;21134:153;;-1:-1:-1;;;21134:153:2;;;;;;;:::i;:::-;;;;;;;;;21299:34;;-1:-1:-1;;;21299:34:2;;-1:-1:-1;;;;;;;;;;;21299:18:2;;;:34;;21318:3;;21323:4;;21329:3;;21299:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21346:12:2;;;21339:19;;-1:-1:-1;;;;;;21339:19:2;;;-1:-1:-1;21371:9:2;;;21364:16;;-1:-1:-1;;21364:16:2;;;21386:17;-1:-1:-1;21393:10:2;;21346:12;21386:17;:::i;:::-;21416:4;:11;;21409:18;;;20502:930;;;;;;;;20432:1000;;:::o;22680:340::-;22739:12;22759:19;22791:1;:8;22802:2;22791:13;;;;:::i;:::-;22781:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22781:24:2;;22759:46;;22816:6;22811:185;22832:1;:8;22828:1;:12;22811:185;;;22855:9;22867:1;22869;22867:4;;;;;;;;:::i;:::-;;;;;;;22855:16;;22980:1;22974;22970:2;22966:10;22962:2;22958:19;22950:6;22946:32;22939:43;22929:61;22842:3;;;;;:::i;:::-;;;;22811:185;;;-1:-1:-1;23009:6:2;22680:340;-1:-1:-1;;22680:340:2:o;15827:3037::-;15910:12;;;;15942:9;;;;15976:11;;;;16016:10;;;15993:33;;;;;;;;;;;;;;;;;;;15884:4;;-1:-1:-1;;;;;15910:12:2;;15942:9;;;15976:11;15884:4;;15993:33;;16016:10;;15993:33;;;16016:10;15993:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16069:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16069:21:2;;;;;;;;;16101:34;;15993:33;;-1:-1:-1;16069:21:2;:15;;-1:-1:-1;16101:34:2;;-1:-1:-1;15993:33:2;;16123:11;;16101:34;;:::i;:::-;;;;-1:-1:-1;;16101:34:2;;;;;;;;;16091:45;;16101:34;16091:45;;;;16069:68;;;;;;;;;;-1:-1:-1;16069:68:2;;;;16065:172;;;-1:-1:-1;;;;;16162:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16162:21:2;;;;;;;;;16194:34;;16162:21;;:10;16194:34;;16211:3;;16216:11;;16194:34;;:::i;:::-;;;;;;;;;;;;;16184:45;;;;;;16162:68;;;;;;;;;;;;16147:83;;;;;;15827:3037;;;:::o;16065:172::-;16242:17;16279:4;16285:12;16293:3;16285:7;:12::i;:::-;16262:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16242:56;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16304:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16331:12;16360:17;16381:3;-1:-1:-1;;;;;16381:14:2;16396:4;16381:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16357:44:2;-1:-1:-1;16416:38:2;;-1:-1:-1;16357:44:2;16437:16;16442:11;16437:2;:16;:::i;16416:38::-;16496:35;;-1:-1:-1;;;16496:35:2;;-1:-1:-1;;;;;708:32:125;;16496:35:2;;;690:51:125;16409:45:2;;-1:-1:-1;16468:22:2;;-1:-1:-1;;;;;;;;;;;;16496:21:2;;;663:18:125;;16496:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16496:35:2;;;;;;;;;;;;:::i;:::-;16467:64;;;16541:5;:12;16557:1;16541:17;16537:1993;;16568:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;16583:17:2;;16601:3;16606:5;16612:1;16606:8;;;;;;;;:::i;:::-;;;;;;;16583:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16568:47;-1:-1:-1;16568:47:2;16623:89;;16662:41;16683:3;16693:5;16699:1;16693:8;;;;;;;;:::i;:::-;;;;;;;16688:14;;16662:41;;;;;;;:::i;:::-;;;;;;;;16623:89;16731:4;16723;:12;16719:196;;16747:159;;-1:-1:-1;;;16747:159:2;;;;;;;:::i;:::-;16927:123;16946:3;16959:4;17000:3;17005:11;16983:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16973:45;;;;;;17033:5;17039:1;17033:8;;;;;;;;:::i;:::-;;;;;;;17028:14;;16927:123;;;;;;;;;:::i;:::-;;;;;;;;17150:5;17156:1;17150:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17058:15:2;;17145:14;17058:15;;;;;;;;;;-1:-1:-1;;;;;;17058:21:2;;;;;;;;;17099:34;;17150:8;;17058:21;;17099:34;;17116:3;;17121:11;;17099:34;;:::i;:::-;;;;-1:-1:-1;;17099:34:2;;;;;;;;;17089:45;;17099:34;17089:45;;;;17058:84;;;;;;;;;;;;-1:-1:-1;17058:84:2;;;:101;;;;-1:-1:-1;;;;;17167:15:2;;;;17254:4;17167:10;;;:15;;;;;-1:-1:-1;;;;;;17167:21:2;;;;;;;;;17208:34;;17254:4;;-1:-1:-1;17208:34:2;;17225:3;;17230:11;;17208:34;;:::i;:::-;;;;;;;-1:-1:-1;;17208:34:2;;;;;;17198:45;;17208:34;17198:45;;;;17167:84;;;;;;;;;;-1:-1:-1;17167:84:2;:91;;-1:-1:-1;;17167:91:2;;;;;;;;;;-1:-1:-1;16537:1993:2;;;17290:1;17275:5;:12;:16;17271:1259;;;17306:6;17301:1096;17322:5;:12;17318:1;:16;17301:1096;;;17351:12;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17366:17:2;;17384:3;17389:5;17395:1;17389:8;;;;;;;;:::i;:::-;;;;;;;17366:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17351:47;-1:-1:-1;17351:47:2;17408:93;;17449:41;17470:3;17480:5;17486:1;17480:8;;;;;;;;:::i;:::-;;;;;;;17475:14;;17449:41;;;;;;;:::i;:::-;;;;;;;;17408:93;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;17527:18:2;;17546:3;17551:5;17557:1;17551:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17527:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17590:12;17612:17;17669:3;-1:-1:-1;;;;;17669:14:2;17684:4;17669:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17651:38:2;;-1:-1:-1;17651:38:2;-1:-1:-1;17708:38:2;17651;17729:16;17734:11;17729:2;:16;:::i;17708:38::-;17701:45;;17771:7;:37;;;;;-1:-1:-1;;;17782:4:2;:26;17771:37;17767:573;;;17886:143;17909:3;17926:4;17971:3;17976:11;17954:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17944:45;;;;;;18008:5;18014:1;18008:8;;;;;;;;:::i;:::-;;;;;;;18003:14;;17886:143;;;;;;;;;:::i;:::-;;;;;;;;18141:5;18147:1;18141:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18041:15:2;;18136:14;18041:15;;;;;;;;;;-1:-1:-1;;;;;;18041:21:2;;;;;;;;;18086:34;;18141:8;;18041:21;;18086:34;;18103:3;;18108:11;;18086:34;;:::i;:::-;;;;;;;;;;;;;18076:45;;;;;;18041:92;;;;;;;;;;;:109;;;;18257:4;18162;:10;;:15;18173:3;-1:-1:-1;;;;;18162:15:2;-1:-1:-1;;;;;18162:15:2;;;;;;;;;;;;:21;18178:4;-1:-1:-1;;;;;18162:21:2;;-1:-1:-1;;;;;18162:21:2;;;;;;;;;;;;;:92;18224:3;18229:11;18207:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18197:45;;;;;;18162:92;;;;;;;;;;;;:99;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18273:18:2;;18292:3;18297:5;18303:1;18297:8;;;;;;;;:::i;:::-;;;;;;;18307:4;18273:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18324:5;;;;;17767:573;-1:-1:-1;;;;;;;;;;;15168:34:2;;-1:-1:-1;;;;;18349:18:2;;18368:3;18373:5;18379:1;18373:8;;;;;;;;:::i;:::-;;;;;;;18383:4;18349:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17341:1056;;;17336:3;;;;;:::i;:::-;;;;17301:1096;;;;17271:1259;;;18417:106;;;-1:-1:-1;;;18417:106:2;;46402:2:125;18417:106:2;;;46384:21:125;46421:18;;;46414:30;;;;46480:34;46460:18;;;46453:62;46551:34;46531:18;;;46524:62;46603:19;;18417:106:2;46200:428:125;18417:106:2;-1:-1:-1;;;;;18551:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18551:21:2;;;;;;;;;18583:34;;18551:21;;:15;18583:34;;18600:3;;18605:11;;18583:34;;:::i;:::-;;;;-1:-1:-1;;18583:34:2;;;;;;;;;18573:45;;18583:34;18573:45;;;;18551:68;;;;;;;;;;-1:-1:-1;18551:68:2;;;;18536:146;;;;-1:-1:-1;;;18536:146:2;;46835:2:125;18536:146:2;;;46817:21:125;46874:2;46854:18;;;46847:30;46913:34;46893:18;;;46886:62;-1:-1:-1;;;46964:18:125;;;46957:45;47019:19;;18536:146:2;46633:411:125;18536:146:2;18696:12;;;18689:19;;-1:-1:-1;;;;;;18689:19:2;;;18721:9;;;18714:16;;-1:-1:-1;;18714:16:2;;;18736:17;-1:-1:-1;18743:10:2;;18696:12;18736:17;:::i;:::-;18759:18;18766:11;;;18759:18;;;-1:-1:-1;;;;;18791:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18791:21:2;;;;;;;;;18823:34;;18791:21;;18759:18;18823:34;;18840:3;;18845:11;;18823:34;;:::i;:::-;;;;;;;;;;;;;18813:45;;;;;;18791:68;;;;;;;;;;;;18784:75;;;;;;;;;15827:3037;;;:::o;22396:280::-;22482:7;22499:11;22517:8;22539:2;22528:1;:8;:13;:29;;22549:1;:8;22528:29;;;22544:2;22528:29;22517:40;;22568:6;22563:93;22584:3;22580:1;:7;22563:93;;;22643:5;:1;22647;22643:5;:::i;:::-;22617:1;22619:10;22628:1;22619:6;:10;:::i;:::-;22617:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22617:13:2;22609:40;;22602:47;;;;;22589:3;;;;:::i;:::-;;;;22563:93;;;-1:-1:-1;22668:3:2;;22396:280;-1:-1:-1;;;;22396:280:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:118:125:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;752:139::-;-1:-1:-1;;;;;835:31:125;;825:42;;815:70;;881:1;878;871:12;896:571;1002:6;1010;1018;1071:2;1059:9;1050:7;1046:23;1042:32;1039:52;;;1087:1;1084;1077:12;1039:52;1126:9;1113:23;1145:39;1178:5;1145:39;:::i;:::-;1203:5;-1:-1:-1;1260:2:125;1245:18;;1232:32;1273:41;1232:32;1273:41;:::i;:::-;1333:7;-1:-1:-1;1392:2:125;1377:18;;1364:32;1405:30;1364:32;1405:30;:::i;:::-;1454:7;1444:17;;;896:571;;;;;:::o;1680:127::-;1741:10;1736:3;1732:20;1729:1;1722:31;1772:4;1769:1;1762:15;1796:4;1793:1;1786:15;1812:275;1883:2;1877:9;1948:2;1929:13;;-1:-1:-1;;1925:27:125;1913:40;;1983:18;1968:34;;2004:22;;;1965:62;1962:88;;;2030:18;;:::i;:::-;2066:2;2059:22;1812:275;;-1:-1:-1;1812:275:125:o;2092:187::-;2141:4;2174:18;2166:6;2163:30;2160:56;;;2196:18;;:::i;:::-;-1:-1:-1;2262:2:125;2241:15;-1:-1:-1;;2237:29:125;2268:4;2233:40;;2092:187::o;2284:965::-;2371:6;2379;2387;2440:2;2428:9;2419:7;2415:23;2411:32;2408:52;;;2456:1;2453;2446:12;2408:52;2495:9;2482:23;2514:39;2547:5;2514:39;:::i;:::-;2572:5;-1:-1:-1;2629:2:125;2614:18;;2601:32;2642:41;2601:32;2642:41;:::i;:::-;2702:7;-1:-1:-1;2760:2:125;2745:18;;2732:32;2787:18;2776:30;;2773:50;;;2819:1;2816;2809:12;2773:50;2842:22;;2895:4;2887:13;;2883:27;-1:-1:-1;2873:55:125;;2924:1;2921;2914:12;2873:55;2960:2;2947:16;2985:49;3001:32;3030:2;3001:32;:::i;:::-;2985:49;:::i;:::-;3057:2;3050:5;3043:17;3097:7;3092:2;3087;3083;3079:11;3075:20;3072:33;3069:53;;;3118:1;3115;3108:12;3069:53;3173:2;3168;3164;3160:11;3155:2;3148:5;3144:14;3131:45;3217:1;3212:2;3207;3200:5;3196:14;3192:23;3185:34;3238:5;3228:15;;;;;2284:965;;;;;:::o;3708:182::-;3767:4;3800:18;3792:6;3789:30;3786:56;;;3822:18;;:::i;:::-;-1:-1:-1;3867:1:125;3863:14;3879:4;3859:25;;3708:182::o;3895:889::-;3978:6;4009:2;4052;4040:9;4031:7;4027:23;4023:32;4020:52;;;4068:1;4065;4058:12;4020:52;4108:9;4095:23;4141:18;4133:6;4130:30;4127:50;;;4173:1;4170;4163:12;4127:50;4196:22;;4249:4;4241:13;;4237:27;-1:-1:-1;4227:55:125;;4278:1;4275;4268:12;4227:55;4314:2;4301:16;4337:59;4353:42;4392:2;4353:42;:::i;4337:59::-;4430:15;;;4512:1;4508:10;;;;4500:19;;4496:28;;;4461:12;;;;4536:19;;;4533:39;;;4568:1;4565;4558:12;4533:39;4592:11;;;;4612:142;4628:6;4623:3;4620:15;4612:142;;;4694:17;;4682:30;;4645:12;;;;4732;;;;4612:142;;;4773:5;3895:889;-1:-1:-1;;;;;;;3895:889:125:o;4789:407::-;4882:6;4890;4898;4951:2;4939:9;4930:7;4926:23;4922:32;4919:52;;;4967:1;4964;4957:12;4919:52;5006:9;4993:23;5025:39;5058:5;5025:39;:::i;:::-;5083:5;5135:2;5120:18;;5107:32;;-1:-1:-1;5186:2:125;5171:18;;;5158:32;;4789:407;-1:-1:-1;;;4789:407:125:o;6566:404::-;6634:6;6642;6695:2;6683:9;6674:7;6670:23;6666:32;6663:52;;;6711:1;6708;6701:12;6663:52;6750:9;6737:23;6769:39;6802:5;6769:39;:::i;:::-;6827:5;-1:-1:-1;6884:2:125;6869:18;;6856:32;6897:41;6856:32;6897:41;:::i;:::-;6957:7;6947:17;;;6566:404;;;;;:::o;7441:339::-;7525:6;7533;7586:2;7574:9;7565:7;7561:23;7557:32;7554:52;;;7602:1;7599;7592:12;7554:52;7641:9;7628:23;7660:39;7693:5;7660:39;:::i;:::-;7718:5;7770:2;7755:18;;;;7742:32;;-1:-1:-1;;;7441:339:125:o;8640:1283::-;8882:13;;-1:-1:-1;;;;;467:31:125;455:44;;8832:3;8817:19;;8954:4;8946:6;8942:17;8936:24;8969:72;9035:4;9024:9;9020:20;9006:12;-1:-1:-1;;;;;467:31:125;455:44;;383:122;8969:72;;9090:4;9082:6;9078:17;9072:24;9105:53;9152:4;9141:9;9137:20;9121:14;6348:13;6341:21;6329:34;;6278:91;9105:53;;9207:4;9199:6;9195:17;9189:24;9222:53;9269:4;9258:9;9254:20;9238:14;6348:13;6341:21;6329:34;;6278:91;9222:53;;9331:4;9323:6;9319:17;9313:24;9306:4;9295:9;9291:20;9284:54;9394:4;9386:6;9382:17;9376:24;9369:4;9358:9;9354:20;9347:54;9457:4;9449:6;9445:17;9439:24;9432:4;9421:9;9417:20;9410:54;9520:4;9512:6;9508:17;9502:24;9495:4;9484:9;9480:20;9473:54;9546:6;9601:2;9593:6;9589:15;9583:22;9614:51;9661:2;9650:9;9646:18;9630:14;6348:13;6341:21;6329:34;;6278:91;9614:51;-1:-1:-1;;9684:6:125;9732:15;;;9726:22;9706:18;;;9699:50;9768:6;9816:15;;;9810:22;9790:18;;;9783:50;9852:6;9900:15;;;9894:22;9874:18;;;;9867:50;;;;8640:1283;:::o;9928:692::-;10033:6;10086:3;10074:9;10065:7;10061:23;10057:33;10054:53;;;10103:1;10100;10093:12;10054:53;10136:2;10130:9;10178:3;10170:6;10166:16;10248:6;10236:10;10233:22;10212:18;10200:10;10197:34;10194:62;10191:88;;;10259:18;;:::i;:::-;10299:10;10295:2;10288:22;;10340:9;10334:16;10326:6;10319:32;10405:2;10394:9;10390:18;10384:25;10379:2;10371:6;10367:15;10360:50;10464:2;10453:9;10449:18;10443:25;10438:2;10430:6;10426:15;10419:50;10523:2;10512:9;10508:18;10502:25;10497:2;10489:6;10485:15;10478:50;10583:3;10572:9;10568:19;10562:26;10556:3;10548:6;10544:16;10537:52;10608:6;10598:16;;;9928:692;;;;:::o;10625:495::-;-1:-1:-1;;;;;10944:15:125;;;10926:34;;10996:15;;;;10991:2;10976:18;;10969:43;11043:2;11028:18;;11021:34;11098:14;;11091:22;11086:2;11071:18;;11064:50;10875:3;10860:19;;10625:495::o;11125:184::-;11195:6;11248:2;11236:9;11227:7;11223:23;11219:32;11216:52;;;11264:1;11261;11254:12;11216:52;-1:-1:-1;11287:16:125;;11125:184;-1:-1:-1;11125:184:125:o;11314:127::-;11375:10;11370:3;11366:20;11363:1;11356:31;11406:4;11403:1;11396:15;11430:4;11427:1;11420:15;11446:128;11486:3;11517:1;11513:6;11510:1;11507:13;11504:39;;;11523:18;;:::i;:::-;-1:-1:-1;11559:9:125;;11446:128::o;11579:376::-;-1:-1:-1;;;;;11830:32:125;;;;11812:51;;11894:2;11879:18;;11872:34;;;;11937:2;11922:18;;11915:34;11800:2;11785:18;;11579:376::o;12557:400::-;-1:-1:-1;;;;;12840:15:125;;;12822:34;;12892:15;;;;12887:2;12872:18;;12865:43;12939:2;12924:18;;12917:34;;;;12772:2;12757:18;;12557:400::o;13178:339::-;-1:-1:-1;;;;;13443:15:125;;;13425:34;;13495:15;;13490:2;13475:18;;13468:43;13375:2;13360:18;;13178:339::o;13522:127::-;13583:10;13578:3;13574:20;13571:1;13564:31;13614:4;13611:1;13604:15;13638:4;13635:1;13628:15;13654:674;13841:2;13893:21;;;13963:13;;13866:18;;;13985:22;;;13812:4;;13841:2;14064:15;;;;14038:2;14023:18;;;13812:4;14107:195;14121:6;14118:1;14115:13;14107:195;;;14186:13;;-1:-1:-1;;;;;14182:39:125;14170:52;;14277:15;;;;14242:12;;;;14218:1;14136:9;14107:195;;;-1:-1:-1;14319:3:125;;13654:674;-1:-1:-1;;;;;;13654:674:125:o;14333:283::-;14427:6;14480:2;14468:9;14459:7;14455:23;14451:32;14448:52;;;14496:1;14493;14486:12;14448:52;14528:9;14522:16;14547:39;14580:5;14547:39;:::i;14621:309::-;-1:-1:-1;;;;;14848:32:125;;;;14830:51;;14912:2;14897:18;;14890:34;14818:2;14803:18;;14621:309::o;14935:245::-;15002:6;15055:2;15043:9;15034:7;15030:23;15026:32;15023:52;;;15071:1;15068;15061:12;15023:52;15103:9;15097:16;15122:28;15144:5;15122:28;:::i;19605:491::-;19708:6;19716;19724;19732;19740;19793:3;19781:9;19772:7;19768:23;19764:33;19761:53;;;19810:1;19807;19800:12;19761:53;19842:9;19836:16;19861:28;19883:5;19861:28;:::i;:::-;19953:2;19938:18;;19932:25;19997:2;19982:18;;19976:25;20041:2;20026:18;;20020:25;20085:3;20070:19;;;20064:26;19908:5;;19932:25;;-1:-1:-1;19976:25:125;20020;-1:-1:-1;20064:26:125;;-1:-1:-1;19605:491:125;-1:-1:-1;;;19605:491:125:o;20101:125::-;20141:4;20169:1;20166;20163:8;20160:34;;;20174:18;;:::i;:::-;-1:-1:-1;20211:9:125;;20101:125::o;20231:217::-;20271:1;20297;20287:132;;20341:10;20336:3;20332:20;20329:1;20322:31;20376:4;20373:1;20366:15;20404:4;20401:1;20394:15;20287:132;-1:-1:-1;20433:9:125;;20231:217::o;20453:450::-;-1:-1:-1;;;;;20777:15:125;;;20759:34;;20829:15;;;20824:2;20809:18;;20802:43;20881:15;;;20876:2;20861:18;;20854:43;20709:2;20694:18;;20453:450::o;21215:258::-;21287:1;21297:113;21311:6;21308:1;21305:13;21297:113;;;21387:11;;;21381:18;21368:11;;;21361:39;21333:2;21326:10;21297:113;;;21428:6;21425:1;21422:13;21419:48;;;-1:-1:-1;;21463:1:125;21445:16;;21438:27;21215:258::o;21478:::-;21520:3;21558:5;21552:12;21585:6;21580:3;21573:19;21601:63;21657:6;21650:4;21645:3;21641:14;21634:4;21627:5;21623:16;21601:63;:::i;:::-;21718:2;21697:15;-1:-1:-1;;21693:29:125;21684:39;;;;21725:4;21680:50;;21478:258;-1:-1:-1;;21478:258:125:o;21741:317::-;-1:-1:-1;;;;;21918:32:125;;21900:51;;21987:2;21982;21967:18;;21960:30;;;-1:-1:-1;;22007:45:125;;22033:18;;22025:6;22007:45;:::i;22063:636::-;22143:6;22196:2;22184:9;22175:7;22171:23;22167:32;22164:52;;;22212:1;22209;22202:12;22164:52;22245:9;22239:16;22278:18;22270:6;22267:30;22264:50;;;22310:1;22307;22300:12;22264:50;22333:22;;22386:4;22378:13;;22374:27;-1:-1:-1;22364:55:125;;22415:1;22412;22405:12;22364:55;22444:2;22438:9;22469:49;22485:32;22514:2;22485:32;:::i;22469:49::-;22541:2;22534:5;22527:17;22581:7;22576:2;22571;22567;22563:11;22559:20;22556:33;22553:53;;;22602:1;22599;22592:12;22553:53;22615:54;22666:2;22661;22654:5;22650:14;22645:2;22641;22637:11;22615:54;:::i;22704:470::-;22883:3;22921:6;22915:13;22937:53;22983:6;22978:3;22971:4;22963:6;22959:17;22937:53;:::i;:::-;23053:13;;23012:16;;;;23075:57;23053:13;23012:16;23109:4;23097:17;;23075:57;:::i;:::-;23148:20;;22704:470;-1:-1:-1;;;;22704:470:125:o;23179:429::-;23400:3;23438:6;23432:13;23454:53;23500:6;23495:3;23488:4;23480:6;23476:17;23454:53;:::i;:::-;-1:-1:-1;;;23529:16:125;;23554:19;;;-1:-1:-1;23600:1:125;23589:13;;23179:429;-1:-1:-1;23179:429:125:o;23613:135::-;23652:3;23673:17;;;23670:43;;23693:18;;:::i;:::-;-1:-1:-1;23740:1:125;23729:13;;23613:135::o;24446:639::-;-1:-1:-1;;;;;24813:32:125;;;;24795:51;;24889:14;;24882:22;24877:2;24862:18;;24855:50;24936:2;24921:18;;24914:34;;;;24979:2;24964:18;;24957:34;25022:3;25007:19;;25000:35;24833:3;25051:19;;25044:35;24782:3;24767:19;;24446:639::o;27096:422::-;27185:1;27228:5;27185:1;27242:270;27263:7;27253:8;27250:21;27242:270;;;27322:4;27318:1;27314:6;27310:17;27304:4;27301:27;27298:53;;;27331:18;;:::i;:::-;27381:7;27371:8;27367:22;27364:55;;;27401:16;;;;27364:55;27480:22;;;;27440:15;;;;27242:270;;;27246:3;27096:422;;;;;:::o;27523:806::-;27572:5;27602:8;27592:80;;-1:-1:-1;27643:1:125;27657:5;;27592:80;27691:4;27681:76;;-1:-1:-1;27728:1:125;27742:5;;27681:76;27773:4;27791:1;27786:59;;;;27859:1;27854:130;;;;27766:218;;27786:59;27816:1;27807:10;;27830:5;;;27854:130;27891:3;27881:8;27878:17;27875:43;;;27898:18;;:::i;:::-;-1:-1:-1;;27954:1:125;27940:16;;27969:5;;27766:218;;28068:2;28058:8;28055:16;28049:3;28043:4;28040:13;28036:36;28030:2;28020:8;28017:16;28012:2;28006:4;28003:12;27999:35;27996:77;27993:159;;;-1:-1:-1;28105:19:125;;;28137:5;;27993:159;28184:34;28209:8;28203:4;28184:34;:::i;:::-;28254:6;28250:1;28246:6;28242:19;28233:7;28230:32;28227:58;;;28265:18;;:::i;:::-;28303:20;;27523:806;-1:-1:-1;;;27523:806:125:o;28334:131::-;28394:5;28423:36;28450:8;28444:4;28423:36;:::i;30175:658::-;30240:5;30293:3;30286:4;30278:6;30274:17;30270:27;30260:55;;30311:1;30308;30301:12;30260:55;30340:6;30334:13;30366:4;30390:59;30406:42;30445:2;30406:42;:::i;30390:59::-;30483:15;;;30569:1;30565:10;;;;30553:23;;30549:32;;;30514:12;;;;30593:15;;;30590:35;;;30621:1;30618;30611:12;30590:35;30657:2;30649:6;30645:15;30669:135;30685:6;30680:3;30677:15;30669:135;;;30751:10;;30739:23;;30782:12;;;;30702;;30669:135;;;-1:-1:-1;30822:5:125;30175:658;-1:-1:-1;;;;;;30175:658:125:o;30838:614::-;30967:6;30975;31028:2;31016:9;31007:7;31003:23;30999:32;30996:52;;;31044:1;31041;31034:12;30996:52;31077:9;31071:16;31106:18;31147:2;31139:6;31136:14;31133:34;;;31163:1;31160;31153:12;31133:34;31186:72;31250:7;31241:6;31230:9;31226:22;31186:72;:::i;:::-;31176:82;;31304:2;31293:9;31289:18;31283:25;31267:41;;31333:2;31323:8;31320:16;31317:36;;;31349:1;31346;31339:12;31317:36;;31372:74;31438:7;31427:8;31416:9;31412:24;31372:74;:::i;:::-;31362:84;;;30838:614;;;;;:::o;33184:371::-;-1:-1:-1;;;;;;33369:33:125;;33357:46;;33426:13;;33339:3;;33448:61;33426:13;33498:1;33489:11;;33482:4;33470:17;;33448:61;:::i;:::-;33529:16;;;;33547:1;33525:24;;33184:371;-1:-1:-1;;;33184:371:125:o;33560:274::-;33689:3;33727:6;33721:13;33743:53;33789:6;33784:3;33777:4;33769:6;33765:17;33743:53;:::i;:::-;33812:16;;;;;33560:274;-1:-1:-1;;33560:274:125:o;34540:273::-;34608:6;34661:2;34649:9;34640:7;34636:23;34632:32;34629:52;;;34677:1;34674;34667:12;34629:52;34709:9;34703:16;34759:4;34752:5;34748:16;34741:5;34738:27;34728:55;;34779:1;34776;34769:12;34818:168;34858:7;34924:1;34920;34916:6;34912:14;34909:1;34906:21;34901:1;34894:9;34887:17;34883:45;34880:71;;;34931:18;;:::i;:::-;-1:-1:-1;34971:9:125;;34818:168::o;35834:291::-;35959:6;35967;36020:2;36008:9;35999:7;35995:23;35991:32;35988:52;;;36036:1;36033;36026:12;35988:52;-1:-1:-1;;36059:16:125;;36115:2;36100:18;;;36094:25;36059:16;;36094:25;;-1:-1:-1;35834:291:125:o;36130:446::-;36380:2;36369:9;36362:21;36419:1;36414:2;36403:9;36399:18;36392:29;-1:-1:-1;;;36452:2:125;36441:9;36437:18;36430:35;36503:3;36496:4;36485:9;36481:20;36474:33;36343:4;36524:46;36565:3;36554:9;36550:19;36542:6;36524:46;:::i;36707:1042::-;36792:12;;36757:3;;36847:1;36867:18;;;;36920;;;;36947:61;;37001:4;36993:6;36989:17;36979:27;;36947:61;37027:2;37075;37067:6;37064:14;37044:18;37041:38;37038:161;;37121:10;37116:3;37112:20;37109:1;37102:31;37156:4;37153:1;37146:15;37184:4;37181:1;37174:15;37038:161;12047:19;;;12099:4;12090:14;;37285:18;37312:104;;;;37430:1;37425:318;;;;37278:465;;37312:104;-1:-1:-1;;37347:24:125;;37333:39;;37392:14;;;;-1:-1:-1;37312:104:125;;37425:318;36654:1;36647:14;;;36691:4;36678:18;;37519:1;37533:167;37547:6;37544:1;37541:13;37533:167;;;37627:14;;37612:13;;;37605:37;37670:16;;;;37562:10;;37533:167;;;37720:13;;;-1:-1:-1;;37278:465:125;;;;;;;;36707:1042;;;;:::o;37754:578::-;-1:-1:-1;;;;;38005:32:125;;37987:51;;38074:3;38069:2;38054:18;;38047:31;;;-1:-1:-1;;38101:54:125;;38135:19;;38127:6;38101:54;:::i;:::-;38203:9;38195:6;38191:22;38186:2;38175:9;38171:18;38164:50;38231:41;38265:6;38257;38231:41;:::i;:::-;38223:49;;;38320:4;38312:6;38308:17;38303:2;38292:9;38288:18;38281:45;37754:578;;;;;;;:::o;39168:220::-;39317:2;39306:9;39299:21;39280:4;39337:45;39378:2;39367:9;39363:18;39355:6;39337:45;:::i;40754:348::-;40984:2;40973:9;40966:21;40947:4;41004:49;41049:2;41038:9;41034:18;40667:2;40655:15;;-1:-1:-1;;;40695:4:125;40686:14;;40679:36;40740:2;40731:12;;40590:159;41004:49;40996:57;;41089:6;41084:2;41073:9;41069:18;41062:34;40754:348;;;;:::o;41271:::-;41501:2;41490:9;41483:21;41464:4;41521:49;41566:2;41555:9;41551:18;41184:2;41172:15;;-1:-1:-1;;;41212:4:125;41203:14;;41196:36;41257:2;41248:12;;41107:159;42382:374;42612:2;42601:9;42594:21;42575:4;42632:49;42677:2;42666:9;42662:18;40667:2;40655:15;;-1:-1:-1;;;40695:4:125;40686:14;;40679:36;40740:2;40731:12;;40590:159;42632:49;-1:-1:-1;;;;;42717:32:125;;;;42712:2;42697:18;;;;42690:60;;;;-1:-1:-1;42624:57:125;42382:374::o;42761:::-;42991:2;42980:9;42973:21;42954:4;43011:49;43056:2;43045:9;43041:18;41184:2;41172:15;;-1:-1:-1;;;41212:4:125;41203:14;;41196:36;41257:2;41248:12;;41107:159;43490:610;43736:13;;43679:3;;43710;;43789:4;43816:15;;;43679:3;43859:175;43873:6;43870:1;43867:13;43859:175;;;43936:13;;43922:28;;43972:14;;;;44009:15;;;;43895:1;43888:9;43859:175;;;-1:-1:-1;;44043:21:125;;;-1:-1:-1;44080:14:125;;;;;-1:-1:-1;;;43490:610:125:o;44294:556::-;44496:2;44478:21;;;44535:3;44515:18;;;44508:31;44575:34;44570:2;44555:18;;44548:62;44646:34;44641:2;44626:18;;44619:62;44718:34;44712:3;44697:19;;44690:63;-1:-1:-1;;;44784:3:125;44769:19;;44762:46;44840:3;44825:19;;44294:556::o;45753:442::-;-1:-1:-1;;;;;46000:32:125;;;;45982:51;;-1:-1:-1;;;;;;46069:33:125;;;;46064:2;46049:18;;46042:61;46134:2;46119:18;;46112:34;46177:2;46162:18;;46155:34;45969:3;45954:19;;45753:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "echoSender()": "1e91f8cb",
    "failed()": "ba414fa6",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "test_admin()": "54668b9d",
    "test_failing_resting_offer_releases_uncollected_provision()": "11d70a7d",
    "test_filled_resting_buy_order_ignores_resting_option()": "400efb29",
    "test_filled_resting_buy_order_returns_provision()": "75089822",
    "test_iterative_market_order_completes()": "5c36d7f6",
    "test_ownership_relation()": "70aa3a5d",
    "test_partial_filled_buy_order_returns_bounty()": "63dee520",
    "test_partial_filled_buy_order_returns_provision()": "f87c8c0f",
    "test_partial_filled_buy_order_returns_residual()": "003a6685",
    "test_partial_filled_buy_order_reverts_when_noPartialFill_enabled()": "875f8597",
    "test_resting_buy_order_can_be_partially_filled()": "cc273483",
    "test_resting_buy_order_is_successfully_posted()": "5d35978d",
    "test_resting_buy_order_reverts_when_unprovisioned()": "830ca968",
    "test_resting_offer_retracts_when_unable_to_repost()": "98ec3a97",
    "test_user_can_retract_resting_offer()": "026f7423",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/periphery/MgvOrder.t.sol",
    "id": 78512,
    "exportedSymbols": {
      "AbstractMangrove": [22838],
      "AccessControlled": [43417],
      "DSTest": [1786],
      "HasMgvEvents": [24715],
      "IERC20": [24851],
      "IMaker": [24733],
      "IMangrove": [23446],
      "IMgvMonitor": [24773],
      "IOrderLogic": [37237],
      "ITaker": [24745],
      "InvertedMangrove": [23581],
      "ML": [24540],
      "MakerDeployer": [72689],
      "Mangrove": [23707],
      "MangroveOrder_Test": [78511],
      "MangroveTest": [70515],
      "MgvLib": [24540],
      "MgvOrder": [29550],
      "P": [24511],
      "Script": [2022],
      "StdStorage": [3553],
      "Test": [3455],
      "Test2": [70890],
      "TestMaker": [73404],
      "TestMoriartyMaker": [73653],
      "TestTaker": [73996],
      "TestToken": [76251],
      "TrivialTestMaker": [72724],
      "Utilities": [72490],
      "Vm": [5425],
      "console": [13489],
      "console2": [21553],
      "csl": [21553],
      "stdError": [3525],
      "stdMath": [4796],
      "stdStorage": [4655]
    },
    "nodeType": "SourceUnit",
    "src": "37:19655:113",
    "nodes": [
      {
        "id": 76651,
        "nodeType": "PragmaDirective",
        "src": "37:24:113",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 76652,
        "nodeType": "ImportDirective",
        "src": "62:39:113",
        "absolutePath": "packages/mangrove-solidity/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78512,
        "sourceUnit": 70516,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76653,
        "nodeType": "PragmaDirective",
        "src": "103:24:113",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 76654,
        "nodeType": "PragmaDirective",
        "src": "128:19:113",
        "literals": ["abicoder", "v2"]
      },
      {
        "id": 76658,
        "nodeType": "ImportDirective",
        "src": "189:59:113",
        "absolutePath": "packages/mangrove-solidity/src/MgvLib.sol",
        "file": "mgv_src/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78512,
        "sourceUnit": 24852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76655,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24540,
              "src": "197:6:113",
              "typeDescriptions": {}
            },
            "local": "ML",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76656,
              "name": "P",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24511,
              "src": "211:1:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76657,
              "name": "IMaker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24733,
              "src": "214:6:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76660,
        "nodeType": "ImportDirective",
        "src": "249:48:113",
        "absolutePath": "packages/mangrove-solidity/src/IMangrove.sol",
        "file": "mgv_src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78512,
        "sourceUnit": 23447,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76659,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23446,
              "src": "257:9:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76662,
        "nodeType": "ImportDirective",
        "src": "437:94:113",
        "absolutePath": "packages/mangrove-solidity/src/periphery/MangroveOrderEnriched.sol",
        "file": "mgv_src/periphery/MangroveOrderEnriched.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78512,
        "sourceUnit": 29551,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76661,
              "name": "MangroveOrderEnriched",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29550,
              "src": "445:21:113",
              "typeDescriptions": {}
            },
            "local": "MgvOrder",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76663,
        "nodeType": "ImportDirective",
        "src": "532:55:113",
        "absolutePath": "packages/mangrove-solidity/src/strategies/interfaces/IOrderLogic.sol",
        "file": "mgv_src/strategies/interfaces/IOrderLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78512,
        "sourceUnit": 37238,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78511,
        "nodeType": "ContractDefinition",
        "src": "589:19102:113",
        "nodes": [
          {
            "id": 76673,
            "nodeType": "EventDefinition",
            "src": "665:69:113",
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "671:8:113",
            "parameters": {
              "id": 76672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76667,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "696:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76673,
                  "src": "680:20:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76669,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "718:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76673,
                  "src": "702:18:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76671,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "727:5:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76673,
                  "src": "722:10:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76670,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:54:113"
            }
          },
          {
            "id": 76688,
            "nodeType": "EventDefinition",
            "src": "769:157:113",
            "anonymous": false,
            "eventSelector": "736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e0",
            "name": "LogIncident",
            "nameLocation": "775:11:113",
            "parameters": {
              "id": 76687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76676,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "mangrove",
                  "nameLocation": "802:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76688,
                  "src": "792:18:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$23446",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 76675,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76674,
                      "name": "IMangrove",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23446,
                      "src": "792:9:113"
                    },
                    "referencedDeclaration": 23446,
                    "src": "792:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$23446",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76679,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "outbound_tkn",
                  "nameLocation": "831:12:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76688,
                  "src": "816:27:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$24851",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 76678,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76677,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24851,
                      "src": "816:6:113"
                    },
                    "referencedDeclaration": 24851,
                    "src": "816:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76682,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "inbound_tkn",
                  "nameLocation": "864:11:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76688,
                  "src": "849:26:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$24851",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 76681,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76680,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24851,
                      "src": "849:6:113"
                    },
                    "referencedDeclaration": 24851,
                    "src": "849:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "894:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76688,
                  "src": "881:20:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76683,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76686,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "915:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76688,
                  "src": "907:14:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 76685,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:139:113"
            }
          },
          {
            "id": 76711,
            "nodeType": "EventDefinition",
            "src": "930:225:113",
            "anonymous": false,
            "eventSelector": "587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c",
            "name": "OrderSummary",
            "nameLocation": "936:12:113",
            "parameters": {
              "id": 76710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76691,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "mangrove",
                  "nameLocation": "964:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "954:18:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$23446",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 76690,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76689,
                      "name": "IMangrove",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23446,
                      "src": "954:9:113"
                    },
                    "referencedDeclaration": 23446,
                    "src": "954:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$23446",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76694,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "993:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "978:19:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$24851",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 76693,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76692,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24851,
                      "src": "978:6:113"
                    },
                    "referencedDeclaration": 24851,
                    "src": "978:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76697,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "1018:5:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "1003:20:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$24851",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 76696,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76695,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24851,
                      "src": "1003:6:113"
                    },
                    "referencedDeclaration": 24851,
                    "src": "1003:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76699,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "1045:5:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "1029:21:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76701,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "selling",
                  "nameLocation": "1061:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "1056:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76700,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76703,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "1079:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "1074:13:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76702,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76705,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "1098:9:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "1093:14:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76704,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76707,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "penalty",
                  "nameLocation": "1118:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "1113:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76706,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76709,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "restingOrderId",
                  "nameLocation": "1136:14:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 76711,
                  "src": "1131:19:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76708,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:206:113"
            }
          },
          {
            "id": 76714,
            "nodeType": "VariableDeclaration",
            "src": "1159:12:113",
            "constant": false,
            "mutability": "mutable",
            "name": "mgo",
            "nameLocation": "1168:3:113",
            "scope": 78511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
              "typeString": "contract MangroveOrderEnriched"
            },
            "typeName": {
              "id": 76713,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76712,
                "name": "MgvOrder",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29550,
                "src": "1159:8:113"
              },
              "referencedDeclaration": 29550,
              "src": "1159:8:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                "typeString": "contract MangroveOrderEnriched"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76717,
            "nodeType": "VariableDeclaration",
            "src": "1175:19:113",
            "constant": false,
            "mutability": "mutable",
            "name": "bid_maker",
            "nameLocation": "1185:9:113",
            "scope": 78511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$73404",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 76716,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76715,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73404,
                "src": "1175:9:113"
              },
              "referencedDeclaration": 73404,
              "src": "1175:9:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$73404",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76720,
            "nodeType": "VariableDeclaration",
            "src": "1198:19:113",
            "constant": false,
            "mutability": "mutable",
            "name": "ask_maker",
            "nameLocation": "1208:9:113",
            "scope": 78511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$73404",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 76719,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76718,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73404,
                "src": "1198:9:113"
              },
              "referencedDeclaration": 73404,
              "src": "1198:9:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$73404",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76723,
            "nodeType": "VariableDeclaration",
            "src": "1221:20:113",
            "constant": false,
            "mutability": "mutable",
            "name": "sell_taker",
            "nameLocation": "1231:10:113",
            "scope": 78511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$73996",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 76722,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76721,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73996,
                "src": "1221:9:113"
              },
              "referencedDeclaration": 73996,
              "src": "1221:9:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$73996",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 76727,
            "nodeType": "FunctionDefinition",
            "src": "1246:29:113",
            "body": {
              "id": 76726,
              "nodeType": "Block",
              "src": "1273:2:113",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 76724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:2:113"
            },
            "returnParameters": {
              "id": 76725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:0:113"
            },
            "scope": 78511,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 77075,
            "nodeType": "FunctionDefinition",
            "src": "1279:2598:113",
            "body": {
              "id": 77074,
              "nodeType": "Block",
              "src": "1312:2565:113",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 76731,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1318:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MangroveOrder_Test_$78511_$",
                          "typeString": "type(contract super MangroveOrder_Test)"
                        }
                      },
                      "id": 76733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69507,
                      "src": "1318:11:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:13:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76735,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:13:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76740,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1350:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76739,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1348:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1348:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76743,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1359:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76742,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1357:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1357:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 76745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1367:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 76736,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1337:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 76738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23910,
                      "src": "1337:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 76746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:33:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76747,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:33:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76752,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1389:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76751,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1387:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1387:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76755,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1399:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76754,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1397:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1397:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 76757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1406:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 76748,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1376:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 76750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23910,
                      "src": "1376:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 76758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:33:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76759,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:33:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76764,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "1489:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 76763,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "1487:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 76765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 76760,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "1474:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 76762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24120,
                      "src": "1474:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1474:20:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76767,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:20:113"
                },
                {
                  "expression": {
                    "id": 76782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76768,
                      "name": "mgo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76714,
                      "src": "1558:3:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                        "typeString": "contract MangroveOrderEnriched"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 76775,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69379,
                                  "src": "1595:3:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                ],
                                "id": 76774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1587:8:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 76773,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1587:8:113",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 76776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1587:12:113",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 76772,
                            "name": "IMangrove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23446,
                            "src": "1577:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IMangrove_$23446_$",
                              "typeString": "type(contract IMangrove)"
                            }
                          },
                          "id": 76777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1577:23:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$23446",
                            "typeString": "contract IMangrove"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 76779,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1604:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 76778,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "1602:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 76780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1602:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IMangrove_$23446",
                            "typeString": "contract IMangrove"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 76771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1564:12:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IMangrove_$23446_$_t_address_$returns$_t_contract$_MangroveOrderEnriched_$29550_$",
                          "typeString": "function (contract IMangrove,address) returns (contract MangroveOrderEnriched)"
                        },
                        "typeName": {
                          "id": 76770,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76769,
                            "name": "MgvOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 29550,
                            "src": "1568:8:113"
                          },
                          "referencedDeclaration": 29550,
                          "src": "1568:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        }
                      },
                      "id": 76781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1564:46:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                        "typeString": "contract MangroveOrderEnriched"
                      }
                    },
                    "src": "1558:52:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                      "typeString": "contract MangroveOrderEnriched"
                    }
                  },
                  "id": 76783,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:52:113"
                },
                {
                  "assignments": [76788],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76788,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1779:6:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77074,
                      "src": "1763:22:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 76786,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76785,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24851,
                            "src": "1763:6:113"
                          },
                          "referencedDeclaration": 24851,
                          "src": "1763:6:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$24851",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 76787,
                        "nodeType": "ArrayTypeName",
                        "src": "1763:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76795,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 76793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1801:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 76792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1788:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 76790,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 76789,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24851,
                            "src": "1792:6:113"
                          },
                          "referencedDeclaration": 24851,
                          "src": "1792:6:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$24851",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 76791,
                        "nodeType": "ArrayTypeName",
                        "src": "1792:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      }
                    },
                    "id": 76794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:15:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1763:40:113"
                },
                {
                  "expression": {
                    "id": 76800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 76796,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76788,
                        "src": "1809:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 76798,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 76797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1816:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1809:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$24851",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76799,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69382,
                      "src": "1821:4:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestToken_$76251",
                        "typeString": "contract TestToken"
                      }
                    },
                    "src": "1809:16:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 76801,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:16:113"
                },
                {
                  "expression": {
                    "id": 76806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 76802,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76788,
                        "src": "1831:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 76804,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 76803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1838:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1831:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$24851",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76805,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69385,
                      "src": "1843:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestToken_$76251",
                        "typeString": "contract TestToken"
                      }
                    },
                    "src": "1831:17:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24851",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 76807,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:17:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 76811,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76788,
                        "src": "1867:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      ],
                      "expression": {
                        "id": 76808,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76714,
                        "src": "1854:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 76810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33814,
                      "src": "1854:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_IERC20_$24851_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20[] memory) external"
                      }
                    },
                    "id": 76812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:20:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76813,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:20:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76816,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "1939:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76815,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1937:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1937:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76819,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1948:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 76818,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "1946:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1946:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1955:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 76814,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "1932:4:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 76822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:32:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76823,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:32:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76826,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "1977:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76825,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "1975:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1975:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76829,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1987:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 76828,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "1985:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1985:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1994:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 76824,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "1970:4:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 76832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:33:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76833,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:33:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 76838,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "2176:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 76839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "2176:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 76840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2176:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 76837,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "2174:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 76841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2174:15:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2191:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76834,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "2160:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 76836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "2160:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:40:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76844,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:40:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 76849,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "2221:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 76850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "2221:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 76851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2221:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 76848,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "2219:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 76852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2219:15:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2236:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76845,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "2206:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 76847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "2206:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2206:39:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76855,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:39:113"
                },
                {
                  "expression": {
                    "id": 76866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76856,
                      "name": "sell_taker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76723,
                      "src": "2296:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$73996",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 76859,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "2322:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 76858,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2320:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 76860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2320:8:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 76862,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "2332:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 76861,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2330:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 76863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2330:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "73656c6c2d74616b6572",
                          "id": 76864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2339:12:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d870d13c61937f8c7103d90beb881883835c345c0e15cacc68cf64083843da59",
                            "typeString": "literal_string \"sell-taker\""
                          },
                          "value": "sell-taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d870d13c61937f8c7103d90beb881883835c345c0e15cacc68cf64083843da59",
                            "typeString": "literal_string \"sell-taker\""
                          }
                        ],
                        "id": 76857,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70378,
                        "src": "2309:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$73996_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 76865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2309:43:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$73996",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "2296:56:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$73996",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 76867,
                  "nodeType": "ExpressionStatement",
                  "src": "2296:56:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76870,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "2365:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76869,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "2363:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2363:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76873,
                            "name": "sell_taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76723,
                            "src": "2374:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 76872,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70480,
                          "src": "2372:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_TestTaker_$73996_$returns$_t_address_payable_$",
                            "typeString": "function (contract TestTaker) pure returns (address payable)"
                          }
                        },
                        "id": 76874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2372:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2387:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 76868,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "2358:4:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 76876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:38:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76877,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:38:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76882,
                            "name": "sell_taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76723,
                            "src": "2508:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 76881,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70480,
                          "src": "2506:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_TestTaker_$73996_$returns$_t_address_payable_$",
                            "typeString": "function (contract TestTaker) pure returns (address payable)"
                          }
                        },
                        "id": 76883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2506:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 76878,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2497:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "2497:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:23:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76885,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:23:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76890,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "2541:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 76889,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "2539:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 76891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2547:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76886,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "2526:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 76888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "2526:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:30:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76894,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:30:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76899,
                            "name": "sell_taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76723,
                            "src": "2712:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$73996",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 76898,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70480,
                          "src": "2710:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_TestTaker_$73996_$returns$_t_address_payable_$",
                            "typeString": "function (contract TestTaker) pure returns (address payable)"
                          }
                        },
                        "id": 76900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2710:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 76895,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2701:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "2701:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2701:23:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76902,
                  "nodeType": "ExpressionStatement",
                  "src": "2701:23:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76907,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "2746:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 76906,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "2744:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 76908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2744:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2752:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76903,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "2730:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 76905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "2730:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2730:31:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76911,
                  "nodeType": "ExpressionStatement",
                  "src": "2730:31:113"
                },
                {
                  "expression": {
                    "id": 76922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76912,
                      "name": "bid_maker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76717,
                      "src": "2809:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 76915,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "2834:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 76914,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2832:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 76916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2832:8:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 76918,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "2844:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 76917,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2842:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 76919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2842:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6269642d6d616b6572",
                          "id": 76920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2851:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2058152c66feb1e2b8e32940e9095cdbd745376d5fd28ad7b016d2621667dee6",
                            "typeString": "literal_string \"bid-maker\""
                          },
                          "value": "bid-maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2058152c66feb1e2b8e32940e9095cdbd745376d5fd28ad7b016d2621667dee6",
                            "typeString": "literal_string \"bid-maker\""
                          }
                        ],
                        "id": 76913,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70302,
                        "src": "2821:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$73404_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 76921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2821:42:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "2809:54:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$73404",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 76923,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:54:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76928,
                            "name": "bid_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76717,
                            "src": "2879:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 76927,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "2877:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2877:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2891:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76924,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2869:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5045,
                      "src": "2869:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 76931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:31:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76932,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:31:113"
                },
                {
                  "expression": {
                    "id": 76943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76933,
                      "name": "ask_maker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76720,
                      "src": "2906:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 76936,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69382,
                              "src": "2931:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 76935,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2929:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 76937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2929:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 76939,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69385,
                              "src": "2940:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$76251",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 76938,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70514,
                            "src": "2938:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 76940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2938:8:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "61736b2d6d616b6572",
                          "id": 76941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2948:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b508e64683ac478bc4858853c40c453956cdb90be96e28722c6744142dd54052",
                            "typeString": "literal_string \"ask-maker\""
                          },
                          "value": "ask-maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b508e64683ac478bc4858853c40c453956cdb90be96e28722c6744142dd54052",
                            "typeString": "literal_string \"ask-maker\""
                          }
                        ],
                        "id": 76934,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70302,
                        "src": "2918:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$73404_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 76942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2918:42:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$73404",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "2906:54:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$73404",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 76944,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:54:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76949,
                            "name": "ask_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76720,
                            "src": "2976:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 76948,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "2974:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2974:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2988:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76945,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2966:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5045,
                      "src": "2966:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 76952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2966:31:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76953,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:31:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76958,
                            "name": "bid_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76717,
                            "src": "3015:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 76957,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3013:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3013:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 76954,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3004:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3004:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:22:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76961,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:22:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76966,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "3048:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 76965,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "3046:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 76967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3046:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3054:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76962,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "3032:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 76964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "3032:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 76969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3032:31:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76970,
                  "nodeType": "ExpressionStatement",
                  "src": "3032:31:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76973,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "3120:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76972,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3118:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3118:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76976,
                            "name": "bid_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76717,
                            "src": "3130:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 76975,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3128:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3128:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3142:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 76971,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "3113:4:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 76979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3113:38:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76980,
                  "nodeType": "ExpressionStatement",
                  "src": "3113:38:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76983,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "3206:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 76982,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "3204:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 76984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3204:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76986,
                            "name": "ask_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76720,
                            "src": "3215:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 76985,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3213:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3213:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 76988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3227:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 76981,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [2399, 2416, 2519],
                      "referencedDeclaration": 2416,
                      "src": "3199:4:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 76989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3199:37:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76990,
                  "nodeType": "ExpressionStatement",
                  "src": "3199:37:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 76995,
                            "name": "ask_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76720,
                            "src": "3294:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$73404",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 76994,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "3292:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 76996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3292:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 76991,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "3283:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 76993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5016,
                      "src": "3283:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 76997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3283:22:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76998,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:22:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77003,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "3326:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 77002,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "3324:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 77004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3324:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 77005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3332:8:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 76999,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "3311:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 77001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "3311:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 77006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:30:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77007,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:30:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 77011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3422:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3431:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 77013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3442:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3450:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 77015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3453:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3456:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77008,
                        "name": "bid_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76717,
                        "src": "3392:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 77010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73213,
                      "src": "3392:29:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 77017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:74:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77018,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:74:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 77022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3502:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3131",
                        "id": 77023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3511:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_110000000000000000_by_1",
                          "typeString": "int_const 110000000000000000"
                        },
                        "value": "0.11"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 77024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3523:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3531:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 77026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3534:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3537:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_110000000000000000_by_1",
                          "typeString": "int_const 110000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77019,
                        "name": "bid_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76717,
                        "src": "3472:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 77021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73213,
                      "src": "3472:29:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 77028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3472:75:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77029,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:75:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 77033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3583:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3132",
                        "id": 77034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3592:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_120000000000000000_by_1",
                          "typeString": "int_const 120000000000000000"
                        },
                        "value": "0.12"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 77035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3604:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3612:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 77037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3615:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3618:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_120000000000000000_by_1",
                          "typeString": "int_const 120000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77030,
                        "name": "bid_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76717,
                        "src": "3553:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 77032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73213,
                      "src": "3553:29:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 77039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3553:75:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77040,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:75:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e3133",
                        "id": 77044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3665:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "31",
                        "id": 77045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3677:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 77046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3686:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3694:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 77048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3697:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3700:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77041,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76720,
                        "src": "3635:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 77043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73213,
                      "src": "3635:29:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 77050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:75:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77051,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:75:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e3134",
                        "id": 77055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3746:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_140000000000000000_by_1",
                          "typeString": "int_const 140000000000000000"
                        },
                        "value": "0.14"
                      },
                      {
                        "hexValue": "31",
                        "id": 77056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3758:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 77057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3767:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3775:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 77059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3778:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3781:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_140000000000000000_by_1",
                          "typeString": "int_const 140000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77052,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76720,
                        "src": "3716:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 77054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73213,
                      "src": "3716:29:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 77061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3716:75:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77062,
                  "nodeType": "ExpressionStatement",
                  "src": "3716:75:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e3135",
                        "id": 77066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3827:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "31",
                        "id": 77067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3839:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 77068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3848:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3856:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 77070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3859:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3862:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77063,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76720,
                        "src": "3797:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 77065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73213,
                      "src": "3797:29:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 77072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:75:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77073,
                  "nodeType": "ExpressionStatement",
                  "src": "3797:75:113"
                }
              ]
            },
            "baseFunctions": [69507],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1288:5:113",
            "overrides": {
              "id": 76729,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1303:8:113"
            },
            "parameters": {
              "id": 76728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:2:113"
            },
            "returnParameters": {
              "id": 76730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1312:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77089,
            "nodeType": "FunctionDefinition",
            "src": "3881:104:113",
            "body": {
              "id": 77088,
              "nodeType": "Block",
              "src": "3910:75:113",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77079,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "3925:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 77080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "governance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23719,
                          "src": "3925:14:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 77081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3925:16:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77082,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "3943:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 77083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43377,
                          "src": "3943:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 77084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3943:11:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646d696e2061646472657373",
                        "id": 77085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3956:23:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
                          "typeString": "literal_string \"Invalid admin address\""
                        },
                        "value": "Invalid admin address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
                          "typeString": "literal_string \"Invalid admin address\""
                        }
                      ],
                      "id": 77078,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "3916:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 77086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3916:64:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77087,
                  "nodeType": "ExpressionStatement",
                  "src": "3916:64:113"
                }
              ]
            },
            "functionSelector": "54668b9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_admin",
            "nameLocation": "3890:10:113",
            "parameters": {
              "id": 77076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3900:2:113"
            },
            "returnParameters": {
              "id": 77077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3910:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77180,
            "nodeType": "FunctionDefinition",
            "src": "3989:1107:113",
            "body": {
              "id": 77179,
              "nodeType": "Block",
              "src": "4054:1042:113",
              "statements": [
                {
                  "assignments": [77096],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77096,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "4090:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77179,
                      "src": "4060:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77094,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "4060:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "4060:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77112,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77099,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "4138:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77100,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "4157:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4193:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4215:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4248:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 77104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4275:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4297:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4327:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4359:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 77108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4385:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4413:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4459:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77097,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "4101:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "4101:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "makerWants",
                      "gives",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4101:371:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4060:412:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77115,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "4491:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77114,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4489:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4489:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 77113,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "4478:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 77117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:20:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77118,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:20:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77121,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4589:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77120,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "4587:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4587:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77124,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "4598:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 77123,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "4596:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 77125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4596:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4604:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        }
                      ],
                      "id": 77119,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76673,
                      "src": "4578:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 77127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:37:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77128,
                  "nodeType": "EmitStatement",
                  "src": "4573:42:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77131,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "4634:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77130,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "4632:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4632:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 77129,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "4621:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 77133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4621:20:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77134,
                  "nodeType": "ExpressionStatement",
                  "src": "4621:20:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77137,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "4732:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 77136,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "4730:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 77138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4730:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4740:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77139,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "4738:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4738:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 77142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4747:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        }
                      ],
                      "id": 77135,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76673,
                      "src": "4721:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 77143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4721:37:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77144,
                  "nodeType": "EmitStatement",
                  "src": "4716:42:113"
                },
                {
                  "assignments": [77149],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77149,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "4800:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77179,
                      "src": "4764:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77147,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "4764:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "4764:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77156,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77154,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77096,
                        "src": "4840:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77150,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "4806:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "4806:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4822:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "4806:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4806:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4764:90:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77158,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77149,
                          "src": "4876:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37182,
                        "src": "4876:12:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77162,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "4907:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77161,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "4905:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4905:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 77165,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "4916:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77164,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "4914:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4914:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 77167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4924:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 77160,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "4896:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 77168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4896:36:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207061727469616c2066696c6c206f662074616b6572206f72646572",
                        "id": 77169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4940:39:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        },
                        "value": "Incorrect partial fill of taker order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        }
                      ],
                      "id": 77157,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4860:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4860:125:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77171,
                  "nodeType": "ExpressionStatement",
                  "src": "4860:125:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77173,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77149,
                          "src": "5007:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGave",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37184,
                        "src": "5007:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 77175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5028:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "496e636f7272656374207061727469616c2066696c6c206f662074616b6572206f72646572",
                        "id": 77176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5046:39:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        },
                        "value": "Incorrect partial fill of taker order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        }
                      ],
                      "id": 77172,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4991:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:100:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77178,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:100:113"
                }
              ]
            },
            "functionSelector": "003a6685",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_returns_residual",
            "nameLocation": "3998:46:113",
            "parameters": {
              "id": 77090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4044:2:113"
            },
            "returnParameters": {
              "id": 77091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4054:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77219,
            "nodeType": "FunctionDefinition",
            "src": "5100:603:113",
            "body": {
              "id": 77218,
              "nodeType": "Block",
              "src": "5189:514:113",
              "statements": [
                {
                  "assignments": [77187],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77187,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "5225:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77218,
                      "src": "5195:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77185,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "5195:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "5195:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77203,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77190,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "5273:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77191,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "5292:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5328:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5349:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5382:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 77195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5409:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5431:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5461:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5493:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 77199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5519:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5547:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5593:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77188,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "5236:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "5236:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "makerWants",
                      "gives",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "5236:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5195:411:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67764f726465722f6d6f2f6e6f5061727469616c46696c6c",
                        "id": 77207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5628:27:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cf745283bb7d0f8554a7b72f3fd7d98ebe31c57a3b2141000da1322ed5c4a4e",
                          "typeString": "literal_string \"mgvOrder/mo/noPartialFill\""
                        },
                        "value": "mgvOrder/mo/noPartialFill"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3cf745283bb7d0f8554a7b72f3fd7d98ebe31c57a3b2141000da1322ed5c4a4e",
                          "typeString": "literal_string \"mgvOrder/mo/noPartialFill\""
                        }
                      ],
                      "expression": {
                        "id": 77204,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "5612:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "5612:15:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5612:44:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77209,
                  "nodeType": "ExpressionStatement",
                  "src": "5612:44:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77215,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77187,
                        "src": "5689:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77210,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "5662:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "5662:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5678:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "5662:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5662:36:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 77217,
                  "nodeType": "ExpressionStatement",
                  "src": "5662:36:113"
                }
              ]
            },
            "functionSelector": "875f8597",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_reverts_when_noPartialFill_enabled",
            "nameLocation": "5109:64:113",
            "parameters": {
              "id": 77181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5173:2:113"
            },
            "returnParameters": {
              "id": 77182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5189:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77287,
            "nodeType": "FunctionDefinition",
            "src": "5707:816:113",
            "body": {
              "id": 77286,
              "nodeType": "Block",
              "src": "5773:750:113",
              "statements": [
                {
                  "assignments": [77223],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77223,
                      "mutability": "mutable",
                      "name": "balBefore",
                      "nameLocation": "5784:9:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77286,
                      "src": "5779:14:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77222,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5779:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77228,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 77225,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5798:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 77224,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          70446, 70463, 70480, 70497, 70514
                        ],
                        "referencedDeclaration": 70497,
                        "src": "5796:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 77226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5796:7:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 77227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5796:15:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5779:32:113"
                },
                {
                  "assignments": [77233],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77233,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "5847:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77286,
                      "src": "5817:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77232,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77231,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "5817:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "5817:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77249,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77236,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "5895:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77237,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "5914:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5950:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5972:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6005:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 77241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6032:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6054:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6084:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6116:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 77245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6142:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6170:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6216:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77234,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "5858:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "5858:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "makerWants",
                      "gives",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "5858:371:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5817:412:113"
                },
                {
                  "assignments": [77254],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77254,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "6271:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77286,
                      "src": "6235:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77253,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77252,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "6235:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "6235:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77261,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77259,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77233,
                        "src": "6311:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77255,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "6277:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "6277:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6293:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "6277:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6277:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6235:90:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77263,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77254,
                          "src": "6347:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77264,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37182,
                        "src": "6347:12:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77267,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "6378:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77266,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "6376:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6376:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 77270,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "6387:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77269,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "6385:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6385:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 77272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6395:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 77265,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "6367:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 77273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6367:36:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742074616b657220676f74",
                        "id": 77274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6411:21:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a31e2b966929bfc84066e0f39e380b57c3afdd43875498e56caeffac35190ec5",
                          "typeString": "literal_string \"Incorrect taker got\""
                        },
                        "value": "Incorrect taker got"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a31e2b966929bfc84066e0f39e380b57c3afdd43875498e56caeffac35190ec5",
                          "typeString": "literal_string \"Incorrect taker got\""
                        }
                      ],
                      "id": 77262,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6331:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6331:107:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77276,
                  "nodeType": "ExpressionStatement",
                  "src": "6331:107:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77278,
                        "name": "balBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77223,
                        "src": "6453:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77280,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6466:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 77279,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "6464:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 77281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6464:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 77282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6464:15:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b652066756e6374696f6e20646964206e6f742072657475726e2066756e6473",
                        "id": 77283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6481:36:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f48c5bc7698d2086ac42c25c7e3592dc706fc33b23e098c5ba48b5c2d91f9bd",
                          "typeString": "literal_string \"Take function did not return funds\""
                        },
                        "value": "Take function did not return funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f48c5bc7698d2086ac42c25c7e3592dc706fc33b23e098c5ba48b5c2d91f9bd",
                          "typeString": "literal_string \"Take function did not return funds\""
                        }
                      ],
                      "id": 77277,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6444:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:74:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77285,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:74:113"
                }
              ]
            },
            "functionSelector": "f87c8c0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_returns_provision",
            "nameLocation": "5716:47:113",
            "parameters": {
              "id": 77220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5763:2:113"
            },
            "returnParameters": {
              "id": 77221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5773:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77357,
            "nodeType": "FunctionDefinition",
            "src": "6527:834:113",
            "body": {
              "id": 77356,
              "nodeType": "Block",
              "src": "6590:771:113",
              "statements": [
                {
                  "assignments": [77291],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77291,
                      "mutability": "mutable",
                      "name": "balBefore",
                      "nameLocation": "6601:9:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77356,
                      "src": "6596:14:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77290,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6596:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77296,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 77293,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6615:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 77292,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          70446, 70463, 70480, 70497, 70514
                        ],
                        "referencedDeclaration": 70497,
                        "src": "6613:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 77294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6613:7:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 77295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6613:15:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6596:32:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 77300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6657:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 77297,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76720,
                        "src": "6634:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 77299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72827,
                      "src": "6634:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 77301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6634:28:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77302,
                  "nodeType": "ExpressionStatement",
                  "src": "6634:28:113"
                },
                {
                  "assignments": [77307],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77307,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "6699:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77356,
                      "src": "6669:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77306,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77305,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "6669:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "6669:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77323,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77310,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "6747:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77311,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "6766:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6802:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6824:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6857:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6879:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 77316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6909:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6936:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6968:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 77319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6994:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7022:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7068:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77308,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "6710:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "6710:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6710:371:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6669:412:113"
                },
                {
                  "assignments": [77328],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77328,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "7123:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77356,
                      "src": "7087:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77326,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "7087:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "7087:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77335,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77333,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77307,
                        "src": "7163:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77329,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "7129:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "7129:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7145:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "7129:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7129:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7087:90:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77337,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77328,
                            "src": "7194:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77338,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37186,
                          "src": "7194:10:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 77339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7207:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7194:14:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f756e74792073686f756c64206e6f74206265207a65726f",
                        "id": 77341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7210:27:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_faf428574734727c523f58ca4e1d3f6454850e8fe552642ca0f4aff2bafb1a9d",
                          "typeString": "literal_string \"Bounty should not be zero\""
                        },
                        "value": "Bounty should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_faf428574734727c523f58ca4e1d3f6454850e8fe552642ca0f4aff2bafb1a9d",
                          "typeString": "literal_string \"Bounty should not be zero\""
                        }
                      ],
                      "id": 77336,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "7183:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 77342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7183:55:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77343,
                  "nodeType": "ExpressionStatement",
                  "src": "7183:55:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77345,
                          "name": "balBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77291,
                          "src": "7260:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 77346,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77328,
                            "src": "7272:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77347,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37186,
                          "src": "7272:10:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7260:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77350,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7292:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 77349,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "7290:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 77351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7290:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 77352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "7290:15:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b652066756e6374696f6e20646964206e6f742072657475726e20626f756e7479",
                        "id": 77353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7313:37:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90c1fe0a75c138c63203a2328c2b4a0b899afa2ec391a38fff2b8e8f3d1bf654",
                          "typeString": "literal_string \"Take function did not return bounty\""
                        },
                        "value": "Take function did not return bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90c1fe0a75c138c63203a2328c2b4a0b899afa2ec391a38fff2b8e8f3d1bf654",
                          "typeString": "literal_string \"Take function did not return bounty\""
                        }
                      ],
                      "id": 77344,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7244:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7244:112:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77355,
                  "nodeType": "ExpressionStatement",
                  "src": "7244:112:113"
                }
              ]
            },
            "functionSelector": "63dee520",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_returns_bounty",
            "nameLocation": "6536:44:113",
            "parameters": {
              "id": 77288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6580:2:113"
            },
            "returnParameters": {
              "id": 77289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6590:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77396,
            "nodeType": "FunctionDefinition",
            "src": "7365:604:113",
            "body": {
              "id": 77395,
              "nodeType": "Block",
              "src": "7433:536:113",
              "statements": [
                {
                  "assignments": [77364],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77364,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "7469:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77395,
                      "src": "7439:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77363,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77362,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "7439:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "7439:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77380,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77367,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "7517:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77368,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "7536:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7572:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7594:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7627:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7649:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 77373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7679:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7706:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7738:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 77376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7763:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7791:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7837:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77365,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "7480:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "7480:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7480:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7439:411:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f75676850726f766973696f6e",
                        "id": 77384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7872:46:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc838b84ecd4fdea99242bf42919782c2cd9dbfdea1148147b48bd7f4a940748",
                          "typeString": "literal_string \"MultiUser/derive_gasprice/NotEnoughProvision\""
                        },
                        "value": "MultiUser/derive_gasprice/NotEnoughProvision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cc838b84ecd4fdea99242bf42919782c2cd9dbfdea1148147b48bd7f4a940748",
                          "typeString": "literal_string \"MultiUser/derive_gasprice/NotEnoughProvision\""
                        }
                      ],
                      "expression": {
                        "id": 77381,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "7856:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 77383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "7856:15:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 77385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7856:63:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77386,
                  "nodeType": "ExpressionStatement",
                  "src": "7856:63:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77392,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77364,
                        "src": "7955:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77387,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "7925:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "7925:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e30303031",
                          "id": 77390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7941:12:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000_by_1",
                            "typeString": "int_const 100000000000000"
                          },
                          "value": "0.0001"
                        }
                      ],
                      "src": "7925:29:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:39:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 77394,
                  "nodeType": "ExpressionStatement",
                  "src": "7925:39:113"
                }
              ]
            },
            "functionSelector": "830ca968",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_buy_order_reverts_when_unprovisioned",
            "nameLocation": "7374:49:113",
            "parameters": {
              "id": 77358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7423:2:113"
            },
            "returnParameters": {
              "id": 77359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7433:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77479,
            "nodeType": "FunctionDefinition",
            "src": "7973:934:113",
            "body": {
              "id": 77478,
              "nodeType": "Block",
              "src": "8044:863:113",
              "statements": [
                {
                  "assignments": [77400],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77400,
                      "mutability": "mutable",
                      "name": "balQuoteBefore",
                      "nameLocation": "8055:14:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77478,
                      "src": "8050:19:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8050:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77407,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77404,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8090:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77403,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "8088:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8088:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 77401,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "8072:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 77402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "8072:15:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8072:24:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8050:46:113"
                },
                {
                  "assignments": [77409],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77409,
                      "mutability": "mutable",
                      "name": "balBaseBefore",
                      "nameLocation": "8107:13:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77478,
                      "src": "8102:18:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77408,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8102:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77416,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77413,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8140:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77412,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "8138:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8138:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 77410,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "8123:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 77411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "8123:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8123:23:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8102:44:113"
                },
                {
                  "assignments": [77421],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77421,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "8183:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77478,
                      "src": "8153:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77420,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77419,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "8153:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "8153:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77437,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77424,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "8231:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77425,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "8250:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8286:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8308:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "31",
                        "id": 77428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8341:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 77429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8363:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "31",
                        "id": 77430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8393:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 77431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8420:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8452:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 77433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8477:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8505:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8551:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77422,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "8194:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "8194:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "8194:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8153:411:113"
                },
                {
                  "assignments": [77442],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77442,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "8606:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77478,
                      "src": "8570:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77441,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77440,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "8570:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "8570:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77449,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77447,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77421,
                        "src": "8646:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77443,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "8612:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "8612:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8628:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "8612:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8612:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8570:90:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77454,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8700:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 77453,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "8698:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 77455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8698:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 77451,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "8682:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 77452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "8682:15:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:24:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77457,
                          "name": "balQuoteBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77400,
                          "src": "8714:14:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 77458,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77442,
                            "src": "8731:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGave",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37184,
                          "src": "8731:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8714:30:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742071756f74652062616c616e6365",
                        "id": 77461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8752:25:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da0c6774acf475fe8f69c1ae5540554f3479f52667e147370b156bea49ebebc5",
                          "typeString": "literal_string \"incorrect quote balance\""
                        },
                        "value": "incorrect quote balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da0c6774acf475fe8f69c1ae5540554f3479f52667e147370b156bea49ebebc5",
                          "typeString": "literal_string \"incorrect quote balance\""
                        }
                      ],
                      "id": 77450,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8666:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8666:117:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77463,
                  "nodeType": "ExpressionStatement",
                  "src": "8666:117:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77468,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8822:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 77467,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "8820:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 77469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8820:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 77465,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "8805:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 77466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "8805:14:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8805:23:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77471,
                          "name": "balBaseBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77409,
                          "src": "8836:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 77472,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77442,
                            "src": "8852:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37182,
                          "src": "8852:12:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8836:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f727265637420626173652062616c616e6365",
                        "id": 77475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8872:24:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51e291a1468642b5a1f8bc61856618ddab050dd7d34c3e2a758dff57ab59680d",
                          "typeString": "literal_string \"incorrect base balance\""
                        },
                        "value": "incorrect base balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51e291a1468642b5a1f8bc61856618ddab050dd7d34c3e2a758dff57ab59680d",
                          "typeString": "literal_string \"incorrect base balance\""
                        }
                      ],
                      "id": 77464,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8789:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8789:113:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77477,
                  "nodeType": "ExpressionStatement",
                  "src": "8789:113:113"
                }
              ]
            },
            "functionSelector": "400efb29",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_filled_resting_buy_order_ignores_resting_option",
            "nameLocation": "7982:52:113",
            "parameters": {
              "id": 77397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8034:2:113"
            },
            "returnParameters": {
              "id": 77398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8044:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77532,
            "nodeType": "FunctionDefinition",
            "src": "8911:682:113",
            "body": {
              "id": 77531,
              "nodeType": "Block",
              "src": "8977:616:113",
              "statements": [
                {
                  "assignments": [77483],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77483,
                      "mutability": "mutable",
                      "name": "balWeiBefore",
                      "nameLocation": "8988:12:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77531,
                      "src": "8983:17:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77482,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8983:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77488,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 77485,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "9005:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 77484,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          70446, 70463, 70480, 70497, 70514
                        ],
                        "referencedDeclaration": 70497,
                        "src": "9003:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 77486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9003:7:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 77487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9003:15:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8983:35:113"
                },
                {
                  "assignments": [77493],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77493,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "9055:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77531,
                      "src": "9025:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77492,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77491,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "9025:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "9025:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77509,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77496,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "9103:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77497,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "9122:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9158:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9180:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "31",
                        "id": 77500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9213:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 77501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9235:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "31",
                        "id": 77502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9265:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 77503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9292:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9324:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 77505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9349:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9377:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9423:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77494,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "9066:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "9066:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9066:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9025:411:113"
                },
                {
                  "assignments": [77514],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77514,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "9478:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77531,
                      "src": "9442:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77513,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77512,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "9442:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "9442:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77519,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77517,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77493,
                        "src": "9493:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 77515,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76714,
                        "src": "9484:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 77516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29244,
                      "src": "9484:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9484:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9442:60:113"
                },
                {
                  "expression": {
                    "id": 77520,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77514,
                    "src": "9508:3:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 77521,
                  "nodeType": "ExpressionStatement",
                  "src": "9508:3:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77524,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9535:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 77523,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "9533:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 77525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9533:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 77526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "9533:15:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77527,
                        "name": "balWeiBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77483,
                        "src": "9550:12:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374207765692062616c616e6365",
                        "id": 77528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9564:23:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ec38f56a5e7ea6139662e3bba8a84b1c9d63c62b662fb6c540971d97332646",
                          "typeString": "literal_string \"incorrect wei balance\""
                        },
                        "value": "incorrect wei balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ec38f56a5e7ea6139662e3bba8a84b1c9d63c62b662fb6c540971d97332646",
                          "typeString": "literal_string \"incorrect wei balance\""
                        }
                      ],
                      "id": 77522,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9524:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9524:64:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77530,
                  "nodeType": "ExpressionStatement",
                  "src": "9524:64:113"
                }
              ]
            },
            "functionSelector": "75089822",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_filled_resting_buy_order_returns_provision",
            "nameLocation": "8920:47:113",
            "parameters": {
              "id": 77480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8967:2:113"
            },
            "returnParameters": {
              "id": 77481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8977:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77739,
            "nodeType": "FunctionDefinition",
            "src": "9597:2036:113",
            "body": {
              "id": 77738,
              "nodeType": "Block",
              "src": "9661:1972:113",
              "statements": [
                {
                  "assignments": [77539],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77539,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "9697:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77738,
                      "src": "9667:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77538,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77537,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "9667:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "9667:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77555,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77542,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "9745:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77543,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "9764:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9800:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9822:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9855:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9877:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 77548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9927:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e32353438",
                        "id": 77549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9954:12:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_254800000000000000_by_1",
                          "typeString": "int_const 254800000000000000"
                        },
                        "value": "0.2548"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10010:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 77551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10035:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10063:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10109:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_254800000000000000_by_1",
                          "typeString": "int_const 254800000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77540,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "9708:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "9708:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9708:414:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9667:455:113"
                },
                {
                  "assignments": [77557],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77557,
                      "mutability": "mutable",
                      "name": "bal_quote_before",
                      "nameLocation": "10133:16:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77738,
                      "src": "10128:21:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77556,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10128:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77567,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77562,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "10180:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77564,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10189:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77563,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "10187:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10187:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77558,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "10152:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 77559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33716,
                          "src": "10152:10:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 77560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10152:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 77561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39282,
                      "src": "10152:27:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view external returns (uint256)"
                      }
                    },
                    "id": 77566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10152:43:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10128:67:113"
                },
                {
                  "assignments": [77569],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77569,
                      "mutability": "mutable",
                      "name": "bal_base_before",
                      "nameLocation": "10206:15:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77738,
                      "src": "10201:20:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77568,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10201:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77579,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77574,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "10252:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77576,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10261:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77575,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "10259:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10259:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77570,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "10224:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 77571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33716,
                          "src": "10224:10:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 77572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10224:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 77573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39282,
                      "src": "10224:27:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view external returns (uint256)"
                      }
                    },
                    "id": 77578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10224:43:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10201:66:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77584,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "10298:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              ],
                              "id": 77583,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70463,
                              "src": "10296:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                                "typeString": "function (contract AccessControlled) pure returns (address payable)"
                              }
                            },
                            "id": 77585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10296:6:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 77581,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "10282:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 77582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24218,
                          "src": "10282:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10282:21:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 77587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10305:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e76616c69642062616c616e6365206f6e204d616e67726f7665",
                        "id": 77588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10308:29:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa4c937e76fa7784fd373339bad39bae59bd47b1d5622586c7172bfe9d6f5d05",
                          "typeString": "literal_string \"Invalid balance on Mangrove\""
                        },
                        "value": "Invalid balance on Mangrove"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa4c937e76fa7784fd373339bad39bae59bd47b1d5622586c7172bfe9d6f5d05",
                          "typeString": "literal_string \"Invalid balance on Mangrove\""
                        }
                      ],
                      "id": 77580,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10273:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10273:65:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77590,
                  "nodeType": "ExpressionStatement",
                  "src": "10273:65:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77593,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "10358:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 77592,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "10356:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 77594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10356:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 77591,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "10345:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 77595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10345:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77596,
                  "nodeType": "ExpressionStatement",
                  "src": "10345:18:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77601,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "10412:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 77600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10404:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 77599,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10404:8:113",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10404:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 77598,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23446,
                          "src": "10394:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$23446_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 77603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10394:23:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 77604,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "10425:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77605,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "10437:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77607,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10452:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77606,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "10450:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10450:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10465:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77612,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "10498:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77611,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "10496:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10496:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 77615,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "10507:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77614,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "10505:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10505:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 77617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10515:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 77610,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "10487:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 77618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10487:36:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 77619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10531:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "30",
                        "id": 77620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10549:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "34",
                        "id": 77621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10558:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 77597,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76711,
                      "src": "10374:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$23446_$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 77622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10374:252:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77623,
                  "nodeType": "EmitStatement",
                  "src": "10369:257:113"
                },
                {
                  "assignments": [77628],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77628,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "10668:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77738,
                      "src": "10632:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77627,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77626,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "10632:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "10632:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77635,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77633,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77539,
                        "src": "10708:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77629,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "10674:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "10674:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10690:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "10674:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10674:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10632:90:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77637,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77628,
                            "src": "10746:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77638,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "offerId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37190,
                          "src": "10746:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 77639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10760:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10746:15:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657374696e67206f66666572206661696c656420746f206265207075626c6973686564206f6e206d616e67726f7665",
                        "id": 77641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10769:50:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a28ebb0a1ee22746d988d4f8942733b3ae5a2fa619c395cc38a0fd57b72c98a0",
                          "typeString": "literal_string \"Resting offer failed to be published on mangrove\""
                        },
                        "value": "Resting offer failed to be published on mangrove"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a28ebb0a1ee22746d988d4f8942733b3ae5a2fa619c395cc38a0fd57b72c98a0",
                          "typeString": "literal_string \"Resting offer failed to be published on mangrove\""
                        }
                      ],
                      "id": 77636,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "10728:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 77642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10728:97:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77643,
                  "nodeType": "ExpressionStatement",
                  "src": "10728:97:113"
                },
                {
                  "assignments": [77649],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77649,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "10883:5:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77738,
                      "src": "10873:15:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 77648,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77647,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32167,
                          "src": "10873:9:113"
                        },
                        "referencedDeclaration": 32167,
                        "src": "10873:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77661,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77653,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "10904:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77652,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10902:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10902:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77656,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "10914:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77655,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "10912:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10912:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 77658,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77628,
                          "src": "10921:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77659,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "10921:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77650,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "10891:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 77651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "10891:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 77660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10891:42:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10873:60:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77663,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77649,
                            "src": "10955:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 77664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wants",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32530,
                          "src": "10955:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 77665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10955:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77666,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77539,
                            "src": "10976:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder memory"
                            }
                          },
                          "id": 77667,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerWants",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37167,
                          "src": "10976:19:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 77672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 77668,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77628,
                                  "src": "10999:3:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 77669,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "takerGot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37182,
                                "src": "10999:12:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 77670,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77628,
                                  "src": "11014:3:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 77671,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37188,
                                "src": "11014:7:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10999:22:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 77673,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10998:24:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10976:46:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742077616e747320666f72206269642072657374696e67206f72646572",
                        "id": 77675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11030:39:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af25f723f84f57e72481e6d80d0229f66278bea974bfa11bed258f095731b5c",
                          "typeString": "literal_string \"Incorrect wants for bid resting order\""
                        },
                        "value": "Incorrect wants for bid resting order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af25f723f84f57e72481e6d80d0229f66278bea974bfa11bed258f095731b5c",
                          "typeString": "literal_string \"Incorrect wants for bid resting order\""
                        }
                      ],
                      "id": 77662,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10939:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10939:136:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77677,
                  "nodeType": "ExpressionStatement",
                  "src": "10939:136:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77679,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77649,
                            "src": "11097:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 77680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "11097:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 77681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11097:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77682,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77539,
                            "src": "11118:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder memory"
                            }
                          },
                          "id": 77683,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerGives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37171,
                          "src": "11118:19:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 77684,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77628,
                            "src": "11140:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77685,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGave",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37184,
                          "src": "11140:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11118:35:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420676976657320666f72206269642072657374696e67206f72646572",
                        "id": 77687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11161:39:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        },
                        "value": "Incorrect gives for bid resting order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        }
                      ],
                      "id": 77678,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11081:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11081:125:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77689,
                  "nodeType": "ExpressionStatement",
                  "src": "11081:125:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77693,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11272:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "id": 77694,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11279:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "expression": {
                              "id": 77695,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77628,
                              "src": "11285:3:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrderResult memory"
                              }
                            },
                            "id": 77696,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37190,
                            "src": "11285:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 77691,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "11260:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 77692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37503,
                          "src": "11260:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (address)"
                          }
                        },
                        "id": 77697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11260:37:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77699,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11307:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77698,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "11305:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11305:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f66666572206f776e6572",
                        "id": 77701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11320:21:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09925069ac5619f22606be970b8c67ebec257de6d793722e8cd258a9a2ac4775",
                          "typeString": "literal_string \"Invalid offer owner\""
                        },
                        "value": "Invalid offer owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09925069ac5619f22606be970b8c67ebec257de6d793722e8cd258a9a2ac4775",
                          "typeString": "literal_string \"Invalid offer owner\""
                        }
                      ],
                      "id": 77690,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 345,
                      "src": "11244:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 77702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11244:103:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77703,
                  "nodeType": "ExpressionStatement",
                  "src": "11244:103:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77709,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "11397:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 77711,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11406:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 77710,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "11404:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 77712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11404:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 77705,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "11369:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 77706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "11369:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 77707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11369:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 77708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39282,
                          "src": "11369:27:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 77713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11369:43:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77714,
                          "name": "bal_quote_before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77557,
                          "src": "11420:16:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 77715,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77628,
                            "src": "11439:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGave",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37184,
                          "src": "11439:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11420:32:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642071756f74652062616c616e6365",
                        "id": 77718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11460:23:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        },
                        "value": "Invalid quote balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        }
                      ],
                      "id": 77704,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11353:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11353:136:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77720,
                  "nodeType": "ExpressionStatement",
                  "src": "11353:136:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77726,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "11539:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 77728,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11547:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 77727,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "11545:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 77729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11545:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 77722,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "11511:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 77723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "11511:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 77724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11511:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 77725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39282,
                          "src": "11511:27:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 77730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11511:42:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77731,
                          "name": "bal_base_before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77569,
                          "src": "11561:15:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 77732,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77628,
                            "src": "11579:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 77733,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37182,
                          "src": "11579:12:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11561:30:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642071756f74652062616c616e6365",
                        "id": 77735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11599:23:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        },
                        "value": "Invalid quote balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        }
                      ],
                      "id": 77721,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11495:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11495:133:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77737,
                  "nodeType": "ExpressionStatement",
                  "src": "11495:133:113"
                }
              ]
            },
            "functionSelector": "5d35978d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_buy_order_is_successfully_posted",
            "nameLocation": "9606:45:113",
            "parameters": {
              "id": 77533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9651:2:113"
            },
            "returnParameters": {
              "id": 77534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9661:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77895,
            "nodeType": "FunctionDefinition",
            "src": "11637:1771:113",
            "body": {
              "id": 77894,
              "nodeType": "Block",
              "src": "11702:1706:113",
              "statements": [
                {
                  "assignments": [77746],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77746,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "11778:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "11748:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77745,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77744,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "11748:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "11748:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77762,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77749,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "11826:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77750,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "11845:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11881:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11903:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11936:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11958:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 77755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11988:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12015:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12047:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 77758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12072:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12100:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12146:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77747,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "11789:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "11789:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11789:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11748:411:113"
                },
                {
                  "assignments": [77767],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77767,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "12201:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "12165:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77766,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77765,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "12165:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "12165:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77774,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77772,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77746,
                        "src": "12241:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77768,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "12207:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "12207:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12223:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "12207:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12207:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12165:90:113"
                },
                {
                  "assignments": [77776],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77776,
                      "mutability": "mutable",
                      "name": "oldLocalBaseBal",
                      "nameLocation": "12266:15:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "12261:20:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77775,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12261:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77783,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77780,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12301:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77779,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "12299:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12299:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 77777,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "12284:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 77778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74388,
                      "src": "12284:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 77782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12284:23:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12261:46:113"
                },
                {
                  "assignments": [77785],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77785,
                      "mutability": "mutable",
                      "name": "oldRemoteQuoteBal",
                      "nameLocation": "12318:17:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "12313:22:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77784,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12313:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77795,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77790,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "12366:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77792,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12375:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 77791,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "12373:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 77793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12373:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77786,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "12338:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 77787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33716,
                          "src": "12338:10:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 77788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12338:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 77789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39282,
                      "src": "12338:27:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view external returns (uint256)"
                      }
                    },
                    "id": 77794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12338:43:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12313:68:113"
                },
                {
                  "assignments": [77797, 77799, 77801, null, 77803],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77797,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "12433:7:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "12428:12:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 77796,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12428:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 77799,
                      "mutability": "mutable",
                      "name": "sell_takerGot",
                      "nameLocation": "12453:13:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "12448:18:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77798,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12448:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 77801,
                      "mutability": "mutable",
                      "name": "sell_takerGave",
                      "nameLocation": "12479:14:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "12474:19:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77800,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12474:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 77803,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "12514:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "12509:8:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77802,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12509:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77810,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77806,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77767,
                          "src": "12560:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77807,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "12560:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 77808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12585:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77804,
                        "name": "sell_taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76723,
                        "src": "12526:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 77805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73850,
                      "src": "12526:23:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 77809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["offerId", "takerWants"],
                    "nodeType": "FunctionCall",
                    "src": "12526:70:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12420:176:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77812,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77797,
                        "src": "12614:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657374696e67206f72646572206661696c6564",
                        "id": 77813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12623:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c74dddc76fca47b32193aecbf4f92ee60b2ae508e3c7a412bd7defdd1b8f427",
                          "typeString": "literal_string \"Resting order failed\""
                        },
                        "value": "Resting order failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c74dddc76fca47b32193aecbf4f92ee60b2ae508e3c7a412bd7defdd1b8f427",
                          "typeString": "literal_string \"Resting order failed\""
                        }
                      ],
                      "id": 77811,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12603:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 77814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12603:43:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77815,
                  "nodeType": "ExpressionStatement",
                  "src": "12603:43:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77817,
                        "name": "sell_takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77799,
                        "src": "12690:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77820,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "12722:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77819,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "12720:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12720:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 77823,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "12732:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 77822,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "12730:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 77824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12730:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 77825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12739:9:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "id": 77818,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "12711:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 77826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12711:38:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420726563656976656420616d6f756e7420666f722073656c6c65722074616b6572",
                        "id": 77827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12757:44:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3f58ddc9171694ac65d2f3907d9c5a6239a32621fcf66ce9bdb04994d3aadf7",
                          "typeString": "literal_string \"Incorrect received amount for seller taker\""
                        },
                        "value": "Incorrect received amount for seller taker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3f58ddc9171694ac65d2f3907d9c5a6239a32621fcf66ce9bdb04994d3aadf7",
                          "typeString": "literal_string \"Incorrect received amount for seller taker\""
                        }
                      ],
                      "id": 77816,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12674:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12674:133:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77829,
                  "nodeType": "ExpressionStatement",
                  "src": "12674:133:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 77834,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12892:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 77833,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "12890:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 77835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12890:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 77831,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "12875:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 77832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74388,
                          "src": "12875:14:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 77836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12875:23:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77837,
                          "name": "oldLocalBaseBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77776,
                          "src": "12906:15:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 77838,
                          "name": "sell_takerGave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77801,
                          "src": "12924:14:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12906:32:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420666f7277617264656420616d6f756e7420746f20696e697469616c2074616b6572",
                        "id": 77840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12946:45:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14a7024dd4f4bb58e39447d6897db1ff970fa0b4afd0080b26583abb92dbe7eb",
                          "typeString": "literal_string \"Incorrect forwarded amount to initial taker\""
                        },
                        "value": "Incorrect forwarded amount to initial taker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14a7024dd4f4bb58e39447d6897db1ff970fa0b4afd0080b26583abb92dbe7eb",
                          "typeString": "literal_string \"Incorrect forwarded amount to initial taker\""
                        }
                      ],
                      "id": 77830,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "12859:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12859:138:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77842,
                  "nodeType": "ExpressionStatement",
                  "src": "12859:138:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77848,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13048:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 77850,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13057:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 77849,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70497,
                              "src": "13055:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 77851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13055:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 77844,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "13020:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 77845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "13020:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 77846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13020:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 77847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39282,
                          "src": "13020:27:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$24851_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 77852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13020:43:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77853,
                          "name": "oldRemoteQuoteBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77785,
                          "src": "13071:17:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 77856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77854,
                                "name": "sell_takerGot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77799,
                                "src": "13092:13:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 77855,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77803,
                                "src": "13108:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13092:19:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 77857,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13091:21:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13071:41:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420746f6b656e2062616c616e6365206f6e206d676f",
                        "id": 77859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13120:32:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34f4c12610b3817679a9a0721589167deaa1bf36e5ce8895dbf882b2d436b44e",
                          "typeString": "literal_string \"Incorrect token balance on mgo\""
                        },
                        "value": "Incorrect token balance on mgo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34f4c12610b3817679a9a0721589167deaa1bf36e5ce8895dbf882b2d436b44e",
                          "typeString": "literal_string \"Incorrect token balance on mgo\""
                        }
                      ],
                      "id": 77843,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13004:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13004:154:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77861,
                  "nodeType": "ExpressionStatement",
                  "src": "13004:154:113"
                },
                {
                  "assignments": [77867],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77867,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "13214:5:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77894,
                      "src": "13204:15:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 77866,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77865,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32167,
                          "src": "13204:9:113"
                        },
                        "referencedDeclaration": 32167,
                        "src": "13204:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77879,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77871,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "13235:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77870,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13233:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13233:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77874,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "13245:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77873,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "13243:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13243:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 77876,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77767,
                          "src": "13252:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77877,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "13252:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77868,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "13222:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 77869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24205,
                      "src": "13222:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$32167_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 77878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13222:42:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13204:60:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 77881,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77867,
                            "src": "13287:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$32167",
                              "typeString": "t"
                            }
                          },
                          "id": 77882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32588,
                          "src": "13287:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$32167_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$32167_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 77883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13287:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 77884,
                              "name": "buyOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77746,
                              "src": "13308:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder memory"
                              }
                            },
                            "id": 77885,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37169,
                            "src": "13308:14:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 77886,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77767,
                              "src": "13325:3:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrderResult memory"
                              }
                            },
                            "id": 77887,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "takerGave",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37184,
                            "src": "13325:13:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13308:30:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e31",
                          "id": 77889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13341:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        },
                        "src": "13308:42:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420676976657320666f72206269642072657374696e67206f72646572",
                        "id": 77891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13358:39:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        },
                        "value": "Incorrect gives for bid resting order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        }
                      ],
                      "id": 77880,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13271:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13271:132:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77893,
                  "nodeType": "ExpressionStatement",
                  "src": "13271:132:113"
                }
              ]
            },
            "functionSelector": "cc273483",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_buy_order_can_be_partially_filled",
            "nameLocation": "11646:46:113",
            "parameters": {
              "id": 77740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11692:2:113"
            },
            "returnParameters": {
              "id": 77741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11702:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 77991,
            "nodeType": "FunctionDefinition",
            "src": "13412:1117:113",
            "body": {
              "id": 77990,
              "nodeType": "Block",
              "src": "13480:1049:113",
              "statements": [
                {
                  "assignments": [77902],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77902,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "13516:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77990,
                      "src": "13486:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77901,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77900,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "13486:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "13486:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77918,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77905,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "13564:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 77906,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "13583:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13619:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 77908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13641:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 77909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13674:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13696:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 77911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13726:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 77912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13753:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 77913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13785:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 77914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13810:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 77915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13838:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 77916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13884:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77903,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "13527:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 77904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "13527:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 77917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13527:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13486:411:113"
                },
                {
                  "assignments": [77923],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77923,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "13939:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77990,
                      "src": "13903:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 77922,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77921,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "13903:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "13903:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77930,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 77928,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77902,
                        "src": "13979:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 77924,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "13945:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 77925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "13945:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 77927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 77926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13961:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "13945:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 77929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13945:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13903:90:113"
                },
                {
                  "assignments": [77932],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77932,
                      "mutability": "mutable",
                      "name": "oldWeiBalance",
                      "nameLocation": "14052:13:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77990,
                      "src": "14047:18:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77931,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14047:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77937,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 77934,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "14070:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 77933,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          70446, 70463, 70480, 70497, 70514
                        ],
                        "referencedDeclaration": 70497,
                        "src": "14068:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 77935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14068:7:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 77936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14068:15:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14047:36:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77942,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "14188:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77941,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14186:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14186:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77945,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "14198:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77944,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14196:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14196:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 77947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14205:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 77938,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69379,
                        "src": "14171:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 77940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23952,
                      "src": "14171:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 77948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14171:42:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77949,
                  "nodeType": "ExpressionStatement",
                  "src": "14171:42:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77952,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "14232:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 77951,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "14230:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 77953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14230:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 77950,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "14219:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 77954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14219:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77955,
                  "nodeType": "ExpressionStatement",
                  "src": "14219:18:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 77958,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "14263:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77957,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14261:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14261:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 77961,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "14273:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 77960,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "14271:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 77962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14271:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 77963,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77923,
                          "src": "14280:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77964,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "14280:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 77956,
                      "name": "OfferRetract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24714,
                      "src": "14248:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 77965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14248:44:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77966,
                  "nodeType": "EmitStatement",
                  "src": "14243:49:113"
                },
                {
                  "assignments": [77968, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77968,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "14304:7:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 77990,
                      "src": "14299:12:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 77967,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14299:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 77975,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77971,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77923,
                          "src": "14364:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 77972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "14364:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 77973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14395:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77969,
                        "name": "sell_taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76723,
                        "src": "14323:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 77970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73850,
                      "src": "14323:23:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 77974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["offerId", "takerWants"],
                    "nodeType": "FunctionCall",
                    "src": "14323:80:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14298:105:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 77977,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77968,
                        "src": "14420:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e697065206661696c6564",
                        "id": 77978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14429:14:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5b8d2378626d33dc62f40422d0949058b0e7703d932017008fb45be9f64c408",
                          "typeString": "literal_string \"snipe failed\""
                        },
                        "value": "snipe failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5b8d2378626d33dc62f40422d0949058b0e7703d932017008fb45be9f64c408",
                          "typeString": "literal_string \"snipe failed\""
                        }
                      ],
                      "id": 77976,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14409:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 77979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14409:35:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77980,
                  "nodeType": "ExpressionStatement",
                  "src": "14409:35:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77983,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "14461:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 77982,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "14459:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 77984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14459:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 77985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "14459:15:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77986,
                        "name": "oldWeiBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77932,
                        "src": "14476:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "726574726163742073686f756c64206e6f7420646570726f766973696f6e",
                        "id": 77987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14491:32:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eda4c20443e05d0efe5e83749c78daef1cf80b8a061dd00adfc533e594ed5d13",
                          "typeString": "literal_string \"retract should not deprovision\""
                        },
                        "value": "retract should not deprovision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eda4c20443e05d0efe5e83749c78daef1cf80b8a061dd00adfc533e594ed5d13",
                          "typeString": "literal_string \"retract should not deprovision\""
                        }
                      ],
                      "id": 77981,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14450:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 77988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14450:74:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77989,
                  "nodeType": "ExpressionStatement",
                  "src": "14450:74:113"
                }
              ]
            },
            "functionSelector": "98ec3a97",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_offer_retracts_when_unable_to_repost",
            "nameLocation": "13421:49:113",
            "parameters": {
              "id": 77896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13470:2:113"
            },
            "returnParameters": {
              "id": 77897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13480:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78057,
            "nodeType": "FunctionDefinition",
            "src": "14533:805:113",
            "body": {
              "id": 78056,
              "nodeType": "Block",
              "src": "14587:751:113",
              "statements": [
                {
                  "assignments": [77998],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77998,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "14623:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78056,
                      "src": "14593:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 77997,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77996,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "14593:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "14593:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78014,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78001,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "14671:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78002,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "14690:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14726:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14748:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 78005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14781:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 78006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14803:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 78007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14833:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 78008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14860:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 78009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14892:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 78010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14917:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 78011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14945:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14991:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 77999,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "14634:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 78000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "14634:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 78013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "14634:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14593:411:113"
                },
                {
                  "assignments": [78019],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78019,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "15046:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78056,
                      "src": "15010:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 78018,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78017,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "15010:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "15010:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78026,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78024,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77998,
                        "src": "15086:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 78020,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "15052:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 78021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "15052:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 78023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 78022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15068:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "15052:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 78025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15052:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15010:90:113"
                },
                {
                  "assignments": [78028],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78028,
                      "mutability": "mutable",
                      "name": "userWeiBalanceOld",
                      "nameLocation": "15111:17:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78056,
                      "src": "15106:22:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78027,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15106:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78033,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 78030,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "15133:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 78029,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          70446, 70463, 70480, 70497, 70514
                        ],
                        "referencedDeclaration": 70497,
                        "src": "15131:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 78031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15131:7:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 78032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "15131:15:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15106:40:113"
                },
                {
                  "assignments": [78035],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78035,
                      "mutability": "mutable",
                      "name": "credited",
                      "nameLocation": "15157:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78056,
                      "src": "15152:13:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78034,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15152:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78044,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78038,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "15185:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78039,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "15192:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "expression": {
                          "id": 78040,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78019,
                          "src": "15198:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 78041,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "15198:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 78042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15211:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 78036,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76714,
                        "src": "15168:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 78037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38082,
                      "src": "15168:16:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 78043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15168:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15152:64:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78047,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "15240:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 78046,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "15238:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 78048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15238:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 78049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "15238:15:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 78050,
                          "name": "userWeiBalanceOld",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78028,
                          "src": "15261:17:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 78051,
                          "name": "credited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78035,
                          "src": "15281:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15261:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742070726f766973696f6e207265636569766564",
                        "id": 78053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15297:30:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2875c8791dd723a11f0ab8efa788c63cd9309915e519f55049bbe7a0ca000e7b",
                          "typeString": "literal_string \"Incorrect provision received\""
                        },
                        "value": "Incorrect provision received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2875c8791dd723a11f0ab8efa788c63cd9309915e519f55049bbe7a0ca000e7b",
                          "typeString": "literal_string \"Incorrect provision received\""
                        }
                      ],
                      "id": 78045,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15222:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15222:111:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78055,
                  "nodeType": "ExpressionStatement",
                  "src": "15222:111:113"
                }
              ]
            },
            "functionSelector": "026f7423",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_user_can_retract_resting_offer",
            "nameLocation": "14542:35:113",
            "parameters": {
              "id": 77992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14577:2:113"
            },
            "returnParameters": {
              "id": 77993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14587:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78185,
            "nodeType": "FunctionDefinition",
            "src": "15342:1545:113",
            "body": {
              "id": 78184,
              "nodeType": "Block",
              "src": "15418:1469:113",
              "statements": [
                {
                  "assignments": [78064],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78064,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "15454:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78184,
                      "src": "15424:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 78063,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78062,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "15424:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "15424:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78080,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78067,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "15502:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78068,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "15521:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15557:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15579:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 78071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15612:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 78072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15634:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 78073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15664:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 78074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15691:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 78075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15723:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 78076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15748:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 78077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15776:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15822:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78065,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "15465:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 78066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "15465:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 78079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "15465:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15424:411:113"
                },
                {
                  "assignments": [78082],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78082,
                      "mutability": "mutable",
                      "name": "provision",
                      "nameLocation": "15847:9:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78184,
                      "src": "15842:14:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78081,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15842:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78084,
                  "initialValue": {
                    "hexValue": "35",
                    "id": 78083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15859:7:113",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5000000000000000000_by_1",
                      "typeString": "int_const 5000000000000000000"
                    },
                    "value": "5"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15842:24:113"
                },
                {
                  "assignments": [78089],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78089,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "15908:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78184,
                      "src": "15872:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 78088,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78087,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "15872:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "15872:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78096,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78094,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78064,
                        "src": "15948:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 78090,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "15914:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 78091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "15914:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 78093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 78092,
                          "name": "provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78082,
                          "src": "15930:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "15914:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 78095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15914:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15872:90:113"
                },
                {
                  "assignments": [78098],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78098,
                      "mutability": "mutable",
                      "name": "native_reserve_before",
                      "nameLocation": "16010:21:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78184,
                      "src": "16005:26:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78097,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16005:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78103,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 78100,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "16036:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 78099,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          70446, 70463, 70480, 70497, 70514
                        ],
                        "referencedDeclaration": 70497,
                        "src": "16034:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 78101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16034:7:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 78102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "16034:15:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16005:44:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 78108,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "16148:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 78109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "16148:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 78110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16148:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 78107,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "16146:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 78111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16146:15:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16163:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78104,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "16132:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 78106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "16132:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 78113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16132:33:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78114,
                  "nodeType": "ExpressionStatement",
                  "src": "16132:33:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 78119,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76714,
                                "src": "16186:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 78120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33716,
                              "src": "16186:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$39424_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 78121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16186:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$39424",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 78118,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "16184:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 78122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16184:15:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16201:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78115,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "16171:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 78117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75145,
                      "src": "16171:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 78124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16171:32:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78125,
                  "nodeType": "ExpressionStatement",
                  "src": "16171:32:113"
                },
                {
                  "assignments": [null, null, null, 78127, null],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 78127,
                      "mutability": "mutable",
                      "name": "bounty",
                      "nameLocation": "16222:6:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78184,
                      "src": "16217:11:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78126,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16217:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 78134,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78130,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78089,
                          "src": "16275:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 78131,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "16275:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16306:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 78128,
                        "name": "sell_taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76723,
                        "src": "16234:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$73996",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 78129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73850,
                      "src": "16234:23:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 78133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["offerId", "takerWants"],
                    "nodeType": "FunctionCall",
                    "src": "16234:80:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16210:104:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 78136,
                          "name": "bounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78127,
                          "src": "16331:6:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 78137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16340:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16331:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e6970652073686f756c642068617665206661696c6564",
                        "id": 78139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16343:26:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3af53249debbe6f24d094ddf5bdc5196aa118572c68db3532f55dedccca002e6",
                          "typeString": "literal_string \"snipe should have failed\""
                        },
                        "value": "snipe should have failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3af53249debbe6f24d094ddf5bdc5196aa118572c68db3532f55dedccca002e6",
                          "typeString": "literal_string \"snipe should have failed\""
                        }
                      ],
                      "id": 78135,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16320:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 78140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16320:50:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78141,
                  "nodeType": "ExpressionStatement",
                  "src": "16320:50:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78145,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "16430:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78146,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "16437:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "expression": {
                          "id": 78147,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78089,
                          "src": "16443:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 78148,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37190,
                        "src": "16443:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 78149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16456:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 78142,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76714,
                        "src": "16413:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 78144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38082,
                      "src": "16413:16:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 78150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16413:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78151,
                  "nodeType": "ExpressionStatement",
                  "src": "16413:48:113"
                },
                {
                  "assignments": [78153],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78153,
                      "mutability": "mutable",
                      "name": "native_reserve_after",
                      "nameLocation": "16472:20:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78184,
                      "src": "16467:25:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78152,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16467:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78158,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 78155,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "16497:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 78154,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          70446, 70463, 70480, 70497, 70514
                        ],
                        "referencedDeclaration": 70497,
                        "src": "16495:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 78156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16495:7:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 78157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "16495:15:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16467:43:113"
                },
                {
                  "assignments": [78160],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78160,
                      "mutability": "mutable",
                      "name": "userReleasedProvision",
                      "nameLocation": "16521:21:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78184,
                      "src": "16516:26:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78159,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16516:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78164,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 78161,
                      "name": "native_reserve_after",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78153,
                      "src": "16545:20:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 78162,
                      "name": "native_reserve_before",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78098,
                      "src": "16568:21:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16545:44:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16516:73:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 78166,
                          "name": "userReleasedProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78160,
                          "src": "16606:21:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 78167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16630:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16606:25:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072656c65617365642070726f766973696f6e",
                        "id": 78169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16633:23:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d410cdf9ef11191e5e177387980c49728b2970158a735de605c3a0ebc957ace4",
                          "typeString": "literal_string \"No released provision\""
                        },
                        "value": "No released provision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d410cdf9ef11191e5e177387980c49728b2970158a735de605c3a0ebc957ace4",
                          "typeString": "literal_string \"No released provision\""
                        }
                      ],
                      "id": 78165,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16595:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 78170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16595:62:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78171,
                  "nodeType": "ExpressionStatement",
                  "src": "16595:62:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 78176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 78173,
                                "name": "provision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78082,
                                "src": "16774:9:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 78174,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78089,
                                  "src": "16786:3:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 78175,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bounty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37186,
                                "src": "16786:10:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16774:22:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 78177,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16773:24:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 78178,
                          "name": "userReleasedProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78160,
                          "src": "16800:21:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16773:48:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 78180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16829:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "696e76616c696420616d6f756e74206f662072656c65617365642070726f766973696f6e",
                        "id": 78181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16838:38:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a88eb7356d3a23f299babf18529a5212d00489f9a1d2470e4e358b12193ec6b8",
                          "typeString": "literal_string \"invalid amount of released provision\""
                        },
                        "value": "invalid amount of released provision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a88eb7356d3a23f299babf18529a5212d00489f9a1d2470e4e358b12193ec6b8",
                          "typeString": "literal_string \"invalid amount of released provision\""
                        }
                      ],
                      "id": 78172,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16757:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16757:125:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78183,
                  "nodeType": "ExpressionStatement",
                  "src": "16757:125:113"
                }
              ]
            },
            "functionSelector": "11d70a7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_failing_resting_offer_releases_uncollected_provision",
            "nameLocation": "15351:57:113",
            "parameters": {
              "id": 78058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15408:2:113"
            },
            "returnParameters": {
              "id": 78059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15418:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78352,
            "nodeType": "FunctionDefinition",
            "src": "16891:1382:113",
            "body": {
              "id": 78351,
              "nodeType": "Block",
              "src": "16947:1326:113",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 78191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16976:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 78188,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76720,
                        "src": "16953:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$73404",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 78190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRepost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72857,
                      "src": "16953:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 78192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16953:28:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78193,
                  "nodeType": "ExpressionStatement",
                  "src": "16953:28:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78196,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "17000:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 78195,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "16998:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 78197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16998:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 78194,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "16987:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 78198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16987:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78199,
                  "nodeType": "ExpressionStatement",
                  "src": "16987:18:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78202,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "17039:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78201,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17037:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17037:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78205,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "17054:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78204,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17052:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17052:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78208,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "17070:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 78207,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "17068:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 78209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17068:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78212,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "17093:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78211,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17091:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17091:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78215,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "17102:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78214,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17100:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17100:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 78217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17110:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 78210,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "17082:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 78218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17082:36:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 78219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17126:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "30",
                        "id": 78220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17144:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78223,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "17162:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78222,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17160:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17160:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78226,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "17171:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78225,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17169:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17169:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 78228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17179:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 78221,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69893,
                          "src": "17153:6:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 78229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17153:34:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78200,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24632,
                      "src": "17016:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 78230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17016:177:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78231,
                  "nodeType": "EmitStatement",
                  "src": "17011:182:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78234,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69379,
                            "src": "17212:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 78233,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70446,
                          "src": "17210:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22838_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 78235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17210:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 78232,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "17199:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 78236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17199:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78237,
                  "nodeType": "ExpressionStatement",
                  "src": "17199:18:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78240,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69382,
                            "src": "17251:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78239,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17249:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17249:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78243,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69385,
                            "src": "17266:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$76251",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 78242,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70514,
                          "src": "17264:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 78244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17264:8:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78246,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "17282:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 78245,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "17280:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 78247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17280:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78250,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "17305:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78249,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17303:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17303:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78253,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "17314:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78252,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17312:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17312:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 78255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17322:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 78248,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "17294:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 78256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17294:36:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 78257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17338:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "30",
                        "id": 78258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17356:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78261,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "17374:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78260,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17372:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17372:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78264,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "17383:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78263,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17381:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17381:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 78266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17391:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 78259,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69893,
                          "src": "17365:6:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 78267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17365:34:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78238,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24632,
                      "src": "17228:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 78268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17228:177:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78269,
                  "nodeType": "EmitStatement",
                  "src": "17223:182:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78272,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "17424:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 78271,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "17422:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 78273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17422:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 78270,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "17411:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 78274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17411:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78275,
                  "nodeType": "ExpressionStatement",
                  "src": "17411:18:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78280,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "17478:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 78279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17470:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 78278,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17470:8:113",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17470:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 78277,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23446,
                          "src": "17460:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$23446_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 78282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17460:23:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 78283,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "17491:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78284,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "17503:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78286,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17518:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 78285,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "17516:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 78287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17516:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17531:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78291,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "17555:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78290,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17553:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17553:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78294,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "17564:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78293,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "17562:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17562:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "32",
                            "id": 78296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17572:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 78289,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "17544:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 78297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17544:36:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 78298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17588:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "30",
                        "id": 78299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17606:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 78300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17615:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 78276,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76711,
                      "src": "17440:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$23446_$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 78301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17440:182:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78302,
                  "nodeType": "EmitStatement",
                  "src": "17435:187:113"
                },
                {
                  "assignments": [78307],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78307,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "17658:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78351,
                      "src": "17628:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 78306,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78305,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "17628:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "17628:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78323,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78310,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "17706:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78311,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "17725:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17761:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17783:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 78314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17816:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 78315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17838:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 78316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17868:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 78317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17895:10:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 78318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17927:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "31",
                        "id": 78319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17952:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 78320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17980:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18026:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78308,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "17669:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 78309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "17669:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 78322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "17669:370:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17628:411:113"
                },
                {
                  "assignments": [78328],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78328,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "18081:3:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78351,
                      "src": "18045:39:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 78327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78326,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37191,
                          "src": "18045:28:113"
                        },
                        "referencedDeclaration": 37191,
                        "src": "18045:28:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$37191_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78335,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78333,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78307,
                        "src": "18121:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 78329,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "18087:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 78330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "18087:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 78332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 78331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18103:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "18087:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 78334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18087:48:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18045:90:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78337,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78328,
                          "src": "18157:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 78338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37182,
                        "src": "18157:12:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78341,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69382,
                                "src": "18188:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78340,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "18186:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18186:7:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 78344,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69385,
                                "src": "18197:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$76251",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 78343,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                70446, 70463, 70480, 70497, 70514
                              ],
                              "referencedDeclaration": 70514,
                              "src": "18195:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24851_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 78345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18195:8:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "32",
                            "id": 78346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18205:7:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 78339,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69929,
                          "src": "18177:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 78347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18177:36:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "497465726174697665206d61726b6574206f7264657220776173206e6f7420636f6d706c657465",
                        "id": 78348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18221:41:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8579a38e5e56bb88374fd0936cf33774653b317d69fb91812634a933b2585868",
                          "typeString": "literal_string \"Iterative market order was not complete\""
                        },
                        "value": "Iterative market order was not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8579a38e5e56bb88374fd0936cf33774653b317d69fb91812634a933b2585868",
                          "typeString": "literal_string \"Iterative market order was not complete\""
                        }
                      ],
                      "id": 78336,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "18141:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 78349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18141:127:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78350,
                  "nodeType": "ExpressionStatement",
                  "src": "18141:127:113"
                }
              ]
            },
            "functionSelector": "5c36d7f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_iterative_market_order_completes",
            "nameLocation": "16900:37:113",
            "parameters": {
              "id": 78186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16937:2:113"
            },
            "returnParameters": {
              "id": 78187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16947:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78510,
            "nodeType": "FunctionDefinition",
            "src": "18277:1412:113",
            "body": {
              "id": 78509,
              "nodeType": "Block",
              "src": "18319:1370:113",
              "statements": [
                {
                  "assignments": [78359],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78359,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "18355:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78509,
                      "src": "18325:38:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 78358,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78357,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37180,
                          "src": "18325:22:113"
                        },
                        "referencedDeclaration": 37180,
                        "src": "18325:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78375,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78362,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "18403:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78363,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "18422:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18458:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18480:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 78366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18500:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 78367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18522:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "32",
                        "id": 78368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18551:7:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 78369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18578:9:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 78370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18609:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "31",
                        "id": 78371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18634:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 78372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18662:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 78373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18708:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 78360,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37237,
                        "src": "18366:11:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$37237_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 78361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37180,
                      "src": "18366:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$37180_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 78374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "18366:355:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18325:396:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78378,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "18740:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 78377,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "18738:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 78379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18738:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 78376,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "18727:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 78380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18727:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78381,
                  "nodeType": "ExpressionStatement",
                  "src": "18727:18:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78386,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "18794:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 78385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18786:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 78384,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18786:8:113",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18786:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 78383,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23446,
                          "src": "18776:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$23446_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 78388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18776:23:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 78389,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "18807:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78390,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "18819:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78392,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18834:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 78391,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "18832:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 78393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18832:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18847:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 78395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18860:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 78396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18869:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 78397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18878:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "34",
                        "id": 78398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18887:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 78382,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76711,
                      "src": "18756:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$23446_$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 78399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18756:199:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78400,
                  "nodeType": "EmitStatement",
                  "src": "18751:204:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78406,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78359,
                        "src": "18988:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 78401,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "18961:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 78403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "18961:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 78405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 78404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18977:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "18961:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 78407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18961:36:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 78408,
                  "nodeType": "ExpressionStatement",
                  "src": "18961:36:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78411,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76714,
                            "src": "19016:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 78410,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70463,
                          "src": "19014:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$43417_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 78412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19014:6:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 78409,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70817,
                      "src": "19003:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 78413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19003:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78414,
                  "nodeType": "ExpressionStatement",
                  "src": "19003:18:113"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 78419,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69379,
                                "src": "19070:3:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22838",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 78418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19062:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 78417,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19062:8:113",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 78420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19062:12:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 78416,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23446,
                          "src": "19052:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$23446_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 78421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19052:23:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 78422,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "19083:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78423,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "19095:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78425,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19110:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 78424,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "19108:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 78426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19108:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19123:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 78428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19136:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 78429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19145:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 78430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19154:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "35",
                        "id": 78431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19163:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$23446",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 78415,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76711,
                      "src": "19032:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$23446_$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 78432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19032:199:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78433,
                  "nodeType": "EmitStatement",
                  "src": "19027:204:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78439,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78359,
                        "src": "19264:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$37180_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 78434,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "19237:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 78436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29244,
                        "src": "19237:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 78438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 78437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19253:9:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "19237:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$37180_memory_ptr_$returns$_t_struct$_TakerOrderResult_$37191_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 78440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19237:36:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$37191_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 78441,
                  "nodeType": "ExpressionStatement",
                  "src": "19237:36:113"
                },
                {
                  "assignments": [78446, 78449],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78446,
                      "mutability": "mutable",
                      "name": "live",
                      "nameLocation": "19294:4:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78509,
                      "src": "19280:18:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78444,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "19280:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78445,
                        "nodeType": "ArrayTypeName",
                        "src": "19280:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78449,
                      "mutability": "mutable",
                      "name": "dead",
                      "nameLocation": "19314:4:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 78509,
                      "src": "19300:18:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 78447,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "19300:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78448,
                        "nodeType": "ArrayTypeName",
                        "src": "19300:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78458,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78453,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19349:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 78452,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70446, 70463, 70480, 70497, 70514
                          ],
                          "referencedDeclaration": 70497,
                          "src": "19347:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 78454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19347:7:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 78455,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "19362:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78456,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "19375:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      ],
                      "expression": {
                        "id": 78450,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76714,
                        "src": "19322:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 78451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offersOfOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29549,
                      "src": "19322:17:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,contract IERC20,contract IERC20) view external returns (uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 78457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19322:63:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19279:106:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 78468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 78463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 78460,
                              "name": "live",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78446,
                              "src": "19402:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 78461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19402:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 78462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19417:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19402:16:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 78467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 78464,
                              "name": "dead",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78449,
                              "src": "19422:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 78465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19422:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 78466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19437:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19422:16:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "19402:36:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206f66666572206c697374",
                        "id": 78469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19440:22:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e23a4ef5f05f3810b4dac31980e233ef7b7375e51da9eda8c27f8658b9eb98d",
                          "typeString": "literal_string \"Incorrect offer list\""
                        },
                        "value": "Incorrect offer list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e23a4ef5f05f3810b4dac31980e233ef7b7375e51da9eda8c27f8658b9eb98d",
                          "typeString": "literal_string \"Incorrect offer list\""
                        }
                      ],
                      "id": 78459,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "19391:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 78470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19391:72:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78471,
                  "nodeType": "ExpressionStatement",
                  "src": "19391:72:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78475,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "19486:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 78476,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69382,
                        "src": "19493:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 78477,
                          "name": "live",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78446,
                          "src": "19499:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 78479,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 78478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19504:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19499:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 78480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19508:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$76251",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 78472,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76714,
                        "src": "19469:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 78474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38082,
                      "src": "19469:16:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 78481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19469:45:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78482,
                  "nodeType": "ExpressionStatement",
                  "src": "19469:45:113"
                },
                {
                  "expression": {
                    "id": 78494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 78483,
                          "name": "live",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78446,
                          "src": "19521:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 78484,
                          "name": "dead",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78449,
                          "src": "19527:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "id": 78485,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19520:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 78489,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "19555:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$78511",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 78488,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              70446, 70463, 70480, 70497, 70514
                            ],
                            "referencedDeclaration": 70497,
                            "src": "19553:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 78490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19553:7:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 78491,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69385,
                          "src": "19562:5:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          }
                        },
                        {
                          "id": 78492,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69382,
                          "src": "19569:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          },
                          {
                            "typeIdentifier": "t_contract$_TestToken_$76251",
                            "typeString": "contract TestToken"
                          }
                        ],
                        "expression": {
                          "id": 78486,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76714,
                          "src": "19535:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$29550",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 78487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offersOfOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29549,
                        "src": "19535:17:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IERC20_$24851_$_t_contract$_IERC20_$24851_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,contract IERC20,contract IERC20) view external returns (uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 78493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19535:39:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "src": "19520:54:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78495,
                  "nodeType": "ExpressionStatement",
                  "src": "19520:54:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 78505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 78500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 78497,
                              "name": "live",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78446,
                              "src": "19598:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 78498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19598:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 78499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19613:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "19598:16:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 78504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 78501,
                              "name": "dead",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78449,
                              "src": "19618:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 78502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19618:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 78503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19633:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "19618:16:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "19598:36:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206f66666572206c6973742061667465722072657472616374",
                        "id": 78506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19642:36:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e767876541d360204b3cd655aa55433a106b958a25b69ea65ddf58270ad605c9",
                          "typeString": "literal_string \"Incorrect offer list after retract\""
                        },
                        "value": "Incorrect offer list after retract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e767876541d360204b3cd655aa55433a106b958a25b69ea65ddf58270ad605c9",
                          "typeString": "literal_string \"Incorrect offer list after retract\""
                        }
                      ],
                      "id": 78496,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "19580:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 78507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19580:104:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78508,
                  "nodeType": "ExpressionStatement",
                  "src": "19580:104:113"
                }
              ]
            },
            "functionSelector": "70aa3a5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ownership_relation",
            "nameLocation": "18286:23:113",
            "parameters": {
              "id": 78353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18309:2:113"
            },
            "returnParameters": {
              "id": 78354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18319:0:113"
            },
            "scope": 78511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76664,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70515,
              "src": "620:12:113"
            },
            "id": 76665,
            "nodeType": "InheritanceSpecifier",
            "src": "620:12:113"
          }
        ],
        "canonicalName": "MangroveOrder_Test",
        "contractDependencies": [
          23581, 23707, 29550, 72689, 73404, 73996, 76251
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78511, 70515, 24715, 70890, 72490, 3455, 2022, 1786
        ],
        "name": "MangroveOrder_Test",
        "nameLocation": "598:18:113",
        "scope": 78512,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 113
}
