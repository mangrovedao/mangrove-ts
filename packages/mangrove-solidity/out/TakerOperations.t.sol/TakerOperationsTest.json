{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "callname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GasCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echoSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_detect_lowgas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_empty_wants_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_empty_wants_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_fillGives_at_0_wants_works",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_maker_has_not_enough_base_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_maker_revert_is_logged",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_empty_book_does_not_leave_lock_on",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_empty_book_does_not_revert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_market_order_stops_for_filled_after_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_market_order_stops_for_filled_mid_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_market_order_stops_for_high_price",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillGivesAll_no_approved_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillGivesAll_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_multiple_snipes_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_fill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_recursion_depth_is_acceptable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_marketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_snipe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fails_if_price_has_changed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillGives_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillWants_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_free_offer_fillGives_respects_spec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_free_offer_fillWants_respects_spec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_higher_gas_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_higher_price_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_lower_price_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_reverts_if_taker_is_blacklisted_for_base",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_reverts_if_taker_is_blacklisted_for_quote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_with_0_wants_ejects_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerGives_is_zero_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_is_zero_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_cannot_drain_maker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_collects_failing_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_has_no_quote_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_hasnt_approved_base_succeeds_order_with_fee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_hasnt_approved_base_succeeds_order_wo_fee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_hasnt_approved_quote_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_doesnt_pay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_base",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_quote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reverts_on_penalty_triggers_revert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_unsafe_gas_left_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1368:26:0:-:0;;;-1:-1:-1;;163:28:1;;;;;-1:-1:-1;2025:20:95;;;;3560:34;;;;266:31307:92;1847:237:94;;;1912:64;;;;-1:-1:-1;;;1912:64:94;;;;1368:26:0;1912:64:94;;;;;;;;-1:-1:-1;;;1912:64:94;;;;1972:2;-1:-1:-1;1912:64:94;;;-1:-1:-1;1847:237:94;;;1991:65;;;;-1:-1:-1;;;1991:65:94;;1912:64;1991:65;;;;-1:-1:-1;1991:65:94;;;;;-1:-1:-1;;;1991:65:94;;-1:-1:-1;1991:65:94;;;;-1:-1:-1;1991:65:94;-1:-1:-1;1847:237:94;;;;-1:-1:-1;1847:237:94;;;;1813:271;;;-1:-1:-1;;1813:271:94;;;266:31307:92;;1813:271:94;;1368:26:0;;1813:271:94;;;;;;1912:64;1813:271;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;-1:-1:-1;;1813:271:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1813:271:94;;;;;;;;;;;;-1:-1:-1;;1813:271:94;;;;;;;;;;;;;;;;;;;;;;377:26:92;;;-1:-1:-1;;;;377:26:92;;;266:31307;;;;;;;;;-1:-1:-1;2139:32:94;;;-1:-1:-1;;;2139:32:94;;2148:9;2139:32;;;226:51:113;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:113;;;363:39;237:61:1;;2139:8:94;;419:19:113;;2139:32:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2177:32:94;;;-1:-1:-1;;;2177:32:94;;2188:4;2177:32;;;669:51:113;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:113;;;807:41;2177:32:94;;237:61:1;;-1:-1:-1;2177:8:94;;-1:-1:-1;865:19:113;;;;;-1:-1:-1;;2177:32:94;;;;;;;-1:-1:-1;237:61:1;2177:32:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:31307:92;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;266:31307:92;;;-1:-1:-1;266:31307:92;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:113;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;266:31307:92;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200043a5760003560e01c80638c0048321162000233578063cb228e2a116200012f578063e820585311620000b9578063efd590151162000084578063efd590151462000b24578063f4635d041462000b3c578063f8ccbf471462000b54578063fa7626d41462000b76578063ff7627681462000b9257600080fd5b8063e82058531462000ab7578063e91725771462000acf578063ea14b5c31462000ae7578063ef8febf61462000b0c57600080fd5b8063d9a725cf11620000fa578063d9a725cf1462000a57578063dc46f1de1462000a6f578063e0c773391462000a87578063e55e2f6f1462000a9f57600080fd5b8063cb228e2a14620009ea578063ce980d161462000a02578063d080b6291462000a1a578063d56a22f01462000a3257600080fd5b8063a218492e11620001bd578063bad9a4731162000188578063bad9a4731462000958578063bbab0fac1462000970578063bdb48ac31462000995578063bec2e7d314620009ad578063bfdc358814620009c557600080fd5b8063a218492e14620008da578063b67fc16e14620008f2578063b84e3eda146200090a578063ba414fa6146200092f57600080fd5b806393e54d9b11620001fe57806393e54d9b146200087a578063959d9fb714620008925780639737b57714620008aa578063a1b78bc814620008c257600080fd5b80638c004832146200081a5780638d6efbcb14620008325780638f3237ee146200084a5780639364ce1c146200086257600080fd5b8063339e7171116200034357806364a0bf4011620002cd57806373e33e1b116200029857806373e33e1b14620007a25780637d4258d114620007ba578063835f7cde14620007d2578063856a63d114620007ea5780638a0dc9e8146200080257600080fd5b806364a0bf4014620007265780636cc12a24146200073e5780636e980fa9146200077257806371b980ed146200078a57600080fd5b80634cd73ad6116200030e5780634cd73ad614620006b9578063521606d214620006d157806353cc12bd14620006f65780636060908a146200070e57600080fd5b8063339e7171146200064c578063374b46f514620006645780633a768463146200067c5780633b629aed14620006a157600080fd5b80630f8cadb311620003c55780632c4e73cd11620003905780632c4e73cd14620005df5780632e7ed0dd14620005f75780632f4ebf8e146200060f5780633336a63f146200062757600080fd5b80630f8cadb3146200058257806313599121146200059a5780631dd051c214620005b25780631e91f8cb14620005ca57600080fd5b80630b3d8c4211620004065780630b3d8c4214620005155780630b851352146200053a5780630c4ba05d14620005525780630e16461e146200056a57600080fd5b8062c4655e146200048b5780630645f2be14620004a35780630941ba7814620004e55780630a9254e414620004fd57600080fd5b366200048657601a54600160a01b900460ff1615620004845760405162461bcd60e51b81526020600482015260026024820152616e6f60f01b604482015260640160405180910390fd5b005b600080fd5b3480156200049857600080fd5b506200048462000baa565b348015620004b057600080fd5b50620004c8620004c23660046200c17a565b62001164565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620004f257600080fd5b5062000484620012ac565b3480156200050a57600080fd5b5062000484620015f4565b3480156200052257600080fd5b50620004c8620005343660046200c1b0565b62001d9d565b3480156200054757600080fd5b506200048462001dc0565b3480156200055f57600080fd5b506200048462001ed6565b3480156200057757600080fd5b50620004846200219f565b3480156200058f57600080fd5b506200048462002423565b348015620005a757600080fd5b506200048462002845565b348015620005bf57600080fd5b506200048462002ccf565b348015620005d757600080fd5b5033620004c8565b348015620005ec57600080fd5b506200048462002f22565b3480156200060457600080fd5b506200048462002f7b565b3480156200061c57600080fd5b50620004846200326c565b3480156200063457600080fd5b50620004c8620006463660046200c277565b62003483565b3480156200065957600080fd5b5062000484620035d3565b3480156200067157600080fd5b506200048462003b3a565b3480156200068957600080fd5b50620004c86000805160206201dc6e83398151915281565b348015620006ae57600080fd5b506200048462003e3a565b348015620006c657600080fd5b506200048462004141565b348015620006de57600080fd5b5062000484620006f03660046200c34f565b620044e0565b3480156200070357600080fd5b50620004846200461c565b3480156200071b57600080fd5b5062000484620048f3565b3480156200073357600080fd5b506200048462004cfb565b3480156200074b57600080fd5b50620007636200075d3660046200c3e9565b62004f11565b604051908152602001620004dc565b3480156200077f57600080fd5b506200048462004f40565b3480156200079757600080fd5b5062000484620051af565b348015620007af57600080fd5b5062000484620054d5565b348015620007c757600080fd5b50620004846200577d565b348015620007df57600080fd5b506200048462005a5e565b348015620007f757600080fd5b506200048462005df2565b3480156200080f57600080fd5b506200048462006076565b3480156200082757600080fd5b50620004c86200642c565b3480156200083f57600080fd5b50620004846200643f565b3480156200085757600080fd5b506200048462006737565b3480156200086f57600080fd5b506200048462006b1f565b3480156200088757600080fd5b506200048462006e4b565b3480156200089f57600080fd5b5062000484620071e7565b348015620008b757600080fd5b5062000484620074e8565b348015620008cf57600080fd5b506200048462007963565b348015620008e757600080fd5b506200048462007d89565b348015620008ff57600080fd5b506200048462007e67565b3480156200091757600080fd5b5062000484620009293660046200c34f565b620080e5565b3480156200093c57600080fd5b506200094762008215565b6040519015158152602001620004dc565b3480156200096557600080fd5b506200048462008346565b3480156200097d57600080fd5b50620004c86200098f3660046200c421565b62008a4e565b348015620009a257600080fd5b506200048462008ad1565b348015620009ba57600080fd5b506200048462008de5565b348015620009d257600080fd5b50620004c8620009e43660046200c277565b62008f3a565b348015620009f757600080fd5b506200048462008f63565b34801562000a0f57600080fd5b506200048462009204565b34801562000a2757600080fd5b5062000484620093d9565b34801562000a3f57600080fd5b506200076362000a513660046200c45f565b620095c7565b34801562000a6457600080fd5b506200048462009662565b34801562000a7c57600080fd5b50620004846200988a565b34801562000a9457600080fd5b506200048462009bac565b34801562000aac57600080fd5b506200048462009bf8565b34801562000ac457600080fd5b506200048462009c88565b34801562000adc57600080fd5b506200048462009ef7565b34801562000af457600080fd5b50620004c862000b063660046200c421565b6200a4fb565b34801562000b1957600080fd5b50620004846200a50b565b34801562000b3157600080fd5b50620004846200a837565b34801562000b4957600080fd5b50620004846200ad9a565b34801562000b6157600080fd5b50600054620009479062010000900460ff1681565b34801562000b8357600080fd5b50600054620009479060ff1681565b34801562000b9f57600080fd5b50620004846200af88565b600e5460009062000bd5906001600160a01b03165b600f546001600160a01b0316620186a06200b0c0565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39262000c17921690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562000c37573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c5d91906200c4a7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562000cc9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cef91906200c4c7565b60185460405163e67ecda160e01b8152731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b60048201529192506001600160a01b03169063e67ecda190602401600060405180830381600087803b15801562000d4d57600080fd5b505af115801562000d62573d6000803e3d6000fd5b5050600f546018546040516316c0212960e01b81526001600160a01b039182166004820152911692506316c021299150602401600060405180830381600087803b15801562000db057600080fd5b505af115801562000dc5573d6000803e3d6000fd5b5050600f54600092506001600160a01b031690506370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000e24573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e4a91906200c4c7565b600d5490915030319062000e67906001600160a01b03166200b188565b600f54600e5460408051868152306020820152670de0b6b3a76400009181018290526060810191909152731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b60808201526001600160a01b0392831692909116906000805160206201de468339815191529060a0015b60405180910390a3600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b031662000f4560405180608001604052808c8152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b815260040162000f6894939291906200c546565b60a0604051808303816000875af115801562000f88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fae91906200c587565b505092509250925060008462000fc13090565b6001600160a01b03163162000fd791906200c5de565b905062001001600082116040518060600160405280602281526020016201dcc7602291396200b26d565b62001039846000146040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b8152506200b26d565b6200106b82841480156200104b575082155b6040518060600160405280602181526020016201dd35602191396200b26d565b600f5462001110906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620010c8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ee91906200c4c7565b87146040518060600160405280603b81526020016201df12603b91396200b26d565b6018546001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09462001149838b6200c5de565b60405190815260200160405180910390a25050505050505050565b60008115620011c557306028621e848060405162001182906200c0f9565b6001600160a01b03909316835260208301919091526040820152606001604051809103906000f080158015620011bc573d6000803e3d6000fd5b50905062001218565b306028621e8480604051620011da906200c107565b6001600160a01b03909316835260208301919091526040820152606001604051809103906000f08015801562001214573d6000803e3d6000fd5b5090505b6000805160206201dc6e83398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b1580156200128e57600080fd5b505af1158015620012a3573d6000803e3d6000fd5b50505050919050565b600e546000906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001307573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200132d91906200c4c7565b60185460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015261c35060448201526000606482018190529293506001600160a01b039091169063cda30c3b906084016020604051808303816000875af11580156200139b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013c191906200c4c7565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39262001403921690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562001423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200144991906200c4a7565b50600d54600e546001600160a01b03918216916346e142fa9116600f546001600160a01b0316620014ac6040518060800160405280878152602001670de0b6b3a76400008152602001670de0b6b3a7640000815260200161c3508152506200b20a565b60016040518563ffffffff1660e01b8152600401620014cf94939291906200c546565b60a0604051808303816000875af1158015620014ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200151591906200c587565b5050600e54620015f093508592506001600160a01b031690506370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562001579573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200159f91906200c4c7565b620015ab91906200c5de565b670de0b6b3a76400006040518060400160405280601a81526020017f496e636f72726563742064656c69766572656420616d6f756e740000000000008152506200b2a6565b5050565b620015fe6200b2e2565b600e54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001637929116906000906004016200c48e565b6020604051808303816000875af115801562001657573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200167d91906200c4a7565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620016b7929116906000906004016200c48e565b6020604051808303816000875af1158015620016d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016fd91906200c4a7565b50600e546200173f906001600160a01b0316600f546001600160a01b03166040518060400160405280600581526020016436b0b5b2b960d91b81525062008f3a565b601880546001600160a01b0319166001600160a01b03928316179055600e546200179b9116600f546001600160a01b03166040518060400160405280600c81526020016b3932b33ab9b4b7339036b5b960a11b81525062008f3a565b601980546001600160a01b0319166001600160a01b03929092169182179055604051635239cafb60e11b81526001600482015263a47395f690602401600060405180830381600087803b158015620017f257600080fd5b505af115801562001807573d6000803e3d6000fd5b5050600e546200185592506001600160a01b03169050600f546001600160a01b03166040518060400160405280600d81526020016c3932bb32b93a34b7339036b5b960991b81525062008f3a565b601a80546001600160a01b0319166001600160a01b0392909216918217905560405160016228e33160e11b031981526001600482015263ffae399e90602401600060405180830381600087803b158015620018af57600080fd5b505af1158015620018c4573d6000803e3d6000fd5b50506018546040516369c22ff560e11b8152678ac7230489e8000060048201526001600160a01b03909116925063d3845fea9150602401600060405180830381600087803b1580156200191657600080fd5b505af11580156200192b573d6000803e3d6000fd5b5050601854600e5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d9350620019709290911690678ac7230489e80000906004016200c48e565b600060405180830381600087803b1580156200198b57600080fd5b505af1158015620019a0573d6000803e3d6000fd5b50506019546040516369c22ff560e11b8152670de0b6b3a764000060048201526001600160a01b03909116925063d3845fea9150602401600060405180830381600087803b158015620019f257600080fd5b505af115801562001a07573d6000803e3d6000fd5b5050601954600e5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062001a4c9290911690678ac7230489e80000906004016200c48e565b600060405180830381600087803b15801562001a6757600080fd5b505af115801562001a7c573d6000803e3d6000fd5b5050601a546040516369c22ff560e11b8152670de0b6b3a764000060048201526001600160a01b03909116925063d3845fea9150602401600060405180830381600087803b15801562001ace57600080fd5b505af115801562001ae3573d6000803e3d6000fd5b5050601a54600e5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d935062001b289290911690678ac7230489e80000906004016200c48e565b600060405180830381600087803b15801562001b4357600080fd5b505af115801562001b58573d6000803e3d6000fd5b5050600e546018546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062001b9d9290911690674563918244f40000906004016200c48e565b600060405180830381600087803b15801562001bb857600080fd5b505af115801562001bcd573d6000803e3d6000fd5b5050600e54601a546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062001c129290911690674563918244f40000906004016200c48e565b600060405180830381600087803b15801562001c2d57600080fd5b505af115801562001c42573d6000803e3d6000fd5b5050600e546019546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062001c879290911690674563918244f40000906004016200c48e565b600060405180830381600087803b15801562001ca257600080fd5b505af115801562001cb7573d6000803e3d6000fd5b5050600f546040516340c10f1960e01b81526001600160a01b0390911692506340c10f19915062001cf7903090674563918244f40000906004016200c48e565b600060405180830381600087803b15801562001d1257600080fd5b505af115801562001d27573d6000803e3d6000fd5b5050600f546040516340c10f1960e01b81526001600160a01b0390911692506340c10f19915062001d67903090674563918244f40000906004016200c48e565b600060405180830381600087803b15801562001d8257600080fd5b505af115801562001d97573d6000803e3d6000fd5b50505050565b600062001daa8262001164565b905062001db98484836200b505565b9392505050565b600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b0316670de0b6b3a7640000600060016040518663ffffffff1660e01b815260040162001e199594939291906200c5f8565b6080604051808303816000875af115801562001e39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e5f91906200c629565b50509150915062001e9d826000604051806040016040528060128152602001710a8c2d6cae440cedee840e8dede40daeac6d60731b8152506200b2a6565b620015f0816000604051806040016040528060138152602001720a8c2d6cae440cec2ecca40e8dede40daeac6d606b1b8152506200b2a6565b600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001f1692911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562001f36573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f5c91906200c4a7565b50601a5460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015261c3506044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562001fc7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fed91906200c4c7565b9050600030600d54600e546001600160a01b0392831631935060009283928392908216916346e142fa9116600f546001600160a01b03166200205460405180608001604052808b81526020016000815260200160008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b81526004016200207794939291906200c546565b60a0604051808303816000875af115801562002097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020bd91906200c587565b5050925092509250620020fd836000146040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b8152506200b26d565b6200214b81831480156200210f575081155b6040518060400160405280601c81526020017f5472616e73616374696f6e20646174612073686f756c642062652030000000008152506200b26d565b6200219884306001600160a01b031631116040518060400160405280601981526020017f54616b657220776173206e6f7420636f6d70656e7361746564000000000000008152506200b26d565b5050505050565b60185460405163cda30c3b60e01b8152671bc16d674ec8000060048201819052602482015261c3506044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562002208573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200222e91906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda1906200225f906004016200c660565b600060405180830381600087803b1580156200227a57600080fd5b505af11580156200228f573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620022d49290911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af1158015620022f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200231a91906200c4a7565b50600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b0316670de0b6b3a7640000671bc16d674ec8000060016040518663ffffffff1660e01b81526004016200237b9594939291906200c5f8565b6080604051808303816000875af11580156200239b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c191906200c629565b505091509150620023f582670de0b6b3a76400006040518060600160405280602b81526020016201debc602b91396200b2a6565b620015f081670de0b6b3a76400006040518060600160405280602b81526020016201dee7602b91396200b2a6565b600e546000906200244c906001600160a01b0316600f546001600160a01b031661c3506200b0c0565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b3926200248e921690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af1158015620024ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024d491906200c4a7565b50601a5460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015261c3506044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af11580156200253f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200256591906200c4c7565b600f549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620025c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025e891906200c4c7565b600d5490915030319062002605906001600160a01b03166200b188565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201de468339815191528530670de0b6b3a7640000806040516200265894939291906200c67c565b60405180910390a3600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b0316620026ca60405180608001604052808c8152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b8152600401620026ed94939291906200c546565b60a0604051808303816000875af11580156200270d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200273391906200c587565b5050925092509250600084620027463090565b6001600160a01b0316316200275c91906200c5de565b905062002786600082116040518060600160405280602281526020016201dcc7602291396200b26d565b620027be846000146040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b8152506200b26d565b620027ef82841480156200104b575082156040518060600160405280602181526020016201dd35602191396200b26d565b600f546200280c906001600160a01b03166370a082313062001083565b601a546001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09462001149838b6200c5de565b600e546000906200285f906001600160a01b031662000bbf565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b392620028a1921690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af1158015620028c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028e791906200c4a7565b5060195460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562002953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200297991906200c4c7565b60185460405163e67ecda160e01b8152741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b60048201529192506001600160a01b03169063e67ecda190602401600060405180830381600087803b158015620029d857600080fd5b505af1158015620029ed573d6000803e3d6000fd5b5050600f54600092506001600160a01b031690506370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002a4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a7291906200c4c7565b600d5490915030319062002a8f906001600160a01b03166200b188565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201de468339815191528530670de0b6b3a76400008060405162002ae294939291906200c6b8565b60405180910390a3600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b031662002b5460405180608001604052808c8152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b815260040162002b7794939291906200c546565b60a0604051808303816000875af115801562002b97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bbd91906200c587565b505092509250925060008462002bd03090565b6001600160a01b03163162002be691906200c5de565b905062002c10600082116040518060600160405280602281526020016201dcc7602291396200b26d565b62002c48846000146040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b8152506200b26d565b62002c7982841480156200104b575082156040518060600160405280602181526020016201dd35602191396200b26d565b600f5462002c96906001600160a01b03166370a082313062001083565b6019546001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09462001149838b6200c5de565b60185460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015261c3506044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562002d39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d5f91906200c4c7565b600e54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39262002da1921690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562002dc1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002de791906200c4a7565b5060405163f28dceb360e01b81526000805160206201dc6e8339815191529063f28dceb39062002e1a906004016200c6fa565b600060405180830381600087803b15801562002e3557600080fd5b505af115801562002e4a573d6000803e3d6000fd5b5050600d54600e546001600160a01b0391821693506346e142fa9250165b600f546001600160a01b031662002eb16040518060800160405280878152602001670de0b6b3a76400008152602001670de0b6b3a7640000815260200161c3508152506200b20a565b60016040518563ffffffff1660e01b815260040162002ed494939291906200c546565b60a0604051808303816000875af115801562002ef4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f1a91906200c587565b505050505050565b600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b03166000670de0b6b3a764000060016040518663ffffffff1660e01b815260040162001e199594939291906200c5f8565b600d54600e54600f546040516313e84be360e11b81526001600160a01b03938416936327d097c69362002fbb93908216929116906001906004016200c729565b600060405180830381600087803b15801562002fd657600080fd5b505af115801562002feb573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620030309290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562003050573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200307691906200c4a7565b5060185460405163cda30c3b60e01b8152670de0b6b3a76400006004820181905260248201526201d4c06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af1158015620030e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200310891906200c4c7565b60405163f28dceb360e01b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000060448201529091506000805160206201dc6e8339815191529063f28dceb390606401600060405180830381600087803b1580156200318157600080fd5b505af115801562003196573d6000803e3d6000fd5b5050600d54600e546001600160a01b0391821693506346e142fa92506201d4c09116600f546001600160a01b0316620032026040518060800160405280888152602001670de0b6b3a76400008152602001670de0b6b3a764000081526020016201d4c08152506200b20a565b60016040518663ffffffff1660e01b81526004016200322594939291906200c546565b60a06040518083038160008887f115801562003245573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002f1a91906200c587565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af1158015620032d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032fd91906200c4c7565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b3926200333f9216906706f05b59d3b20000906004016200c48e565b6020604051808303816000875af11580156200335f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200338591906200c4a7565b50600d54600e546000916001600160a01b03908116916346e142fa9116600f546001600160a01b0316620033ec6040518060800160405280888152602001670de0b6b3a764000081526020016706f05b59d3b200008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b81526004016200340f94939291906200c546565b60a0604051808303816000875af11580156200342f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200345591906200c587565b505050509050620015f0816000146040518060600160405280603781526020016201ddab603791396200b26d565b600080600d60009054906101000a90046001600160a01b03168585604051620034ac906200c115565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620034e9573d6000803e3d6000fd5b5060405163c88a5e6d60e01b81529091506000805160206201dc6e8339815191529063c88a5e6d906200352c90849068056bc75e2d63100000906004016200c48e565b600060405180830381600087803b1580156200354757600080fd5b505af11580156200355c573d6000803e3d6000fd5b50506040516318caf8e360e31b81526000805160206201dc6e833981519152925063c657c71891506200359690849087906004016200c7aa565b600060405180830381600087803b158015620035b157600080fd5b505af1158015620035c6573d6000803e3d6000fd5b5092979650505050505050565b60185460405163cda30c3b60e01b8152600060048201819052670de0b6b3a76400006024830152620186a0604483015260648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af11580156200363e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200366491906200c4c7565b600d54600e549192506200379e916001600160a01b039182169163275074589183916368c13d6b91165b600f546001600160a01b0316876040518463ffffffff1660e01b8152600401620036bb939291906200c729565b602060405180830381865afa158015620036d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036ff91906200c4c7565b6040518263ffffffff1660e01b81526004016200371e91815260200190565b602060405180830381865afa1580156200373c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200376291906200c4a7565b6040518060400160405280601b81526020017f4f666665722073686f756c6420626520696e2074686520626f6f6b00000000008152506200b26d565b60185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda190620037ce906004016200c660565b600060405180830381600087803b158015620037e957600080fd5b505af1158015620037fe573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620038439290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562003863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200388991906200c4a7565b50600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b0316620038ed60405180608001604052808a815260200167016345785d8a0000815260200160008152602001620186a08152506200b20a565b60006040518563ffffffff1660e01b81526004016200391094939291906200c546565b60a0604051808303816000875af115801562003930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200395691906200c587565b50509250925092506200399a836001146040518060400160405280601581526020017414db9a5c19481cda1bdd5b19081b9bdd0819985a5b605a1b8152506200b26d565b620039d682670de0b6b3a76400006040518060400160405280600f81526020016e57726f6e6720676f742076616c756560881b8152506200b2a6565b62003a0c8160006040518060400160405280601081526020016f57726f6e6720676176652076616c756560801b8152506200b2a6565b600d54600e54600f546040516368c13d6b60e01b815262001d97936001600160a01b039081169363275074589385936368c13d6b9362003a569381169216908c906004016200c729565b602060405180830381865afa15801562003a74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a9a91906200c4c7565b6040518263ffffffff1660e01b815260040162003ab991815260200190565b602060405180830381865afa15801562003ad7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003afd91906200c4a7565b156040518060400160405280601f81526020017f4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b008152506200b26d565b600e5460009062003b54906001600160a01b031662000bbf565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39262003b96921690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562003bb6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003bdc91906200c4a7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562003c48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c6e91906200c4c7565b60185460405163e67ecda160e01b8152741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b60048201529192506001600160a01b03169063e67ecda190602401600060405180830381600087803b15801562003ccd57600080fd5b505af115801562003ce2573d6000803e3d6000fd5b5050600e546018546040516316c0212960e01b81526001600160a01b039182166004820152911692506316c021299150602401600060405180830381600087803b15801562003d3057600080fd5b505af115801562003d45573d6000803e3d6000fd5b5050600f54600092506001600160a01b031690506370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562003da4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dca91906200c4c7565b600d5490915030319062003de7906001600160a01b03166200b188565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201de468339815191528530670de0b6b3a76400008060405162000ed394939291906200c6b8565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562003ea5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003ecb91906200c4c7565b60185460405163e67ecda160e01b81529192506001600160a01b03169063e67ecda19062003efc906004016200c660565b600060405180830381600087803b15801562003f1757600080fd5b505af115801562003f2c573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062003f719290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562003f91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003fb791906200c4a7565b50600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b03166200402260405180608001604052808a81526020016706f05b59d3b200008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60006040518563ffffffff1660e01b81526004016200404594939291906200c546565b60a0604051808303816000875af115801562004065573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200408b91906200c587565b5050925092509250620040cf836001146040518060400160405280601581526020017414db9a5c19481cda1bdd5b19081b9bdd0819985a5b605a1b8152506200b26d565b6200410882670de0b6b3a76400006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b62001d9781670de0b6b3a76400006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af1158015620041ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620041d191906200c4c7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af11580156200423c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200426291906200c4c7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af1158015620042cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042f391906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda19062004324906004016200c660565b600060405180830381600087803b1580156200433f57600080fd5b505af115801562004354573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620043999290911690671bc16d674ec80000906004016200c48e565b6020604051808303816000875af1158015620043b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620043df91906200c4a7565b5060405163f28dceb360e01b81526000805160206201dc6e8339815191529063f28dceb39062004412906004016200c6fa565b600060405180830381600087803b1580156200442d57600080fd5b505af115801562004442573d6000803e3d6000fd5b5050600d54600e546001600160a01b03918216935063fbffe5fd925016600f546001600160a01b031660006729a2241af62c000060006040518663ffffffff1660e01b81526004016200449a9594939291906200c5f8565b6080604051808303816000875af1158015620044ba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d9791906200c629565b604080516020810190915260008082525b82518110156200461057825182906000805160206201dc6e83398151915290636900a3ae908690859081106200452b576200452b6200c7d0565b60200260200101516040518263ffffffff1660e01b81526004016200455291815260200190565b600060405180830381865afa15801562004570573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200459a91908101906200c7e6565b604051602001620045ad9291906200c866565b604051602081830303815290604052915060018351620045ce91906200c5de565b811015620045fb5781604051602001620045e991906200c899565b60405160208183030381529060405291505b8062004607816200c8c1565b915050620044f1565b50620015f0816200b803565b60185460405163cda30c3b60e01b815268056bc75e2d631000006004820152671bc16d674ec80000602482015261c3506044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af11580156200468e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620046b491906200c4c7565b60185460405163e67ecda160e01b81529192506001600160a01b03169063e67ecda190620046e5906004016200c660565b600060405180830381600087803b1580156200470057600080fd5b505af115801562004715573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200475b929091169068056bc75e2d63100000906004016200c48e565b6020604051808303816000875af11580156200477b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047a191906200c4a7565b50600e54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620047e292911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562004802573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200482891906200c4a7565b5060405163f28dceb360e01b81526000805160206201dc6e8339815191529063f28dceb3906200485b906004016200c6fa565b600060405180830381600087803b1580156200487657600080fd5b505af11580156200488b573d6000803e3d6000fd5b5050600d54600e546001600160a01b0391821693506346e142fa925016600f546001600160a01b031662002eb16040518060800160405280878152602001671bc16d674ec80000815260200168056bc75e2d631000008152602001620186a08152506200b20a565b600d546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200494d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200497391906200c4c7565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a060448201526000606482018190529293506001600160a01b039091169063cda30c3b906084016020604051808303816000875af1158015620049e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a0891906200c4c7565b60185460405163e67ecda160e01b81529192506001600160a01b03169063e67ecda19062004a39906004016200c660565b600060405180830381600087803b15801562004a5457600080fd5b505af115801562004a69573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062004aae9290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562004ace573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004af491906200c4a7565b50600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b031662004b5f60405180608001604052808a8152602001670de0b6b3a764000081526020016706f05b59d3b200008152602001620186a08152506200b20a565b60006040518563ffffffff1660e01b815260040162004b8294939291906200c546565b60a0604051808303816000875af115801562004ba2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004bc891906200c587565b505092509250925062004c08836000146040518060400160405280601181526020017014db9a5c19481cda1bdd5b190819985a5b607a1b8152506200b26d565b600d5462004cc99086906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004c67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004c8d91906200c4c7565b6040518060400160405280601c81526020017f54616b65722073686f756c64206e6f742074616b6520626f756e7479000000008152506200b2a6565b62002198818314801562004cdb575081155b6040518060600160405280602681526020016201dce9602691396200b26d565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562004d66573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d8c91906200c4c7565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39262004dce921690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562004dee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e1491906200c4a7565b50600d54600e546000916001600160a01b03908116916346e142fa9116600f546001600160a01b031662004e7a6040518060800160405280888152602001670de0b6b3a76400008152602001670de0b6b3a7640000815260200161c3508152506200b20a565b60016040518563ffffffff1660e01b815260040162004e9d94939291906200c546565b60a0604051808303816000875af115801562004ebd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004ee391906200c587565b505050509050620015f0816000146040518060600160405280603581526020016201dd76603591396200b26d565b600062004f2082600a6200c9da565b62004f2c8585620095c7565b62004f3891906200c9e8565b949350505050565b600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262004f8092911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562004fa0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004fc691906200c4a7565b5060005b600a8110156200509e576018546001600160a01b031663cda30c3b62004ff28360016200ca0b565b620050069067016345785d8a00006200ca26565b6040516001600160e01b031960e084901b168152600481019190915267016345785d8a0000602482015261c3506044820152606481018490526084016020604051808303816000875af115801562005062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200508891906200c4c7565b508062005095816200c8c1565b91505062004fca565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda190620050cf906004016200c660565b600060405180830381600087803b158015620050ea57600080fd5b505af1158015620050ff573d6000803e3d6000fd5b5050600d54600e5467058d15e1762800009350670853a0d2313c000092506001600160a01b039182169163fbffe5fd916205573091165b600f546001600160a01b0316868660016040518763ffffffff1660e01b8152600401620051689594939291906200c5f8565b60806040518083038160008887f115801562005188573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002f1a91906200c629565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af11580156200521a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200524091906200c4c7565b600d54600e549192506200526f916001600160a01b039182169163275074589183916368c13d6b91166200368e565b60185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda1906200529f906004016200c660565b600060405180830381600087803b158015620052ba57600080fd5b505af1158015620052cf573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620053149290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562005334573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200535a91906200c4a7565b50600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b0316620053b760405180608001604052808a81526020016000815260200160008152602001620186a08152506200b20a565b60006040518563ffffffff1660e01b8152600401620053da94939291906200c546565b60a0604051808303816000875af1158015620053fa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200542091906200c587565b505092509250925062005464836001146040518060400160405280601581526020017414db9a5c19481cda1bdd5b19081b9bdd0819985a5b605a1b8152506200b26d565b6200549c826000604051806040016040528060128152602001710a8c2d6cae440d0c2c840e8dede40daeac6d60731b8152506200b2a6565b62003a0c816000604051806040016040528060138152602001720a8c2d6cae440cec2ecca40e8dede40daeac6d606b1b8152506200b2a6565b60185460405163cda30c3b60e01b8152600060048201819052671bc16d674ec80000602483015261c350604483015260648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af11580156200553f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200556591906200c4c7565b60185460405163e67ecda160e01b81529192506001600160a01b03169063e67ecda19062005596906004016200c660565b600060405180830381600087803b158015620055b157600080fd5b505af1158015620055c6573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200560b9290911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af11580156200562b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200565191906200c4a7565b50600d54600e5460009182916001600160a01b03918216916346e142fa9116600f546001600160a01b0316620056b36040518060800160405280898152602001671bc16d674ec80000815260200160008152602001620493e08152506200b20a565b60006040518563ffffffff1660e01b8152600401620056d694939291906200c546565b60a0604051808303816000875af1158015620056f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200571c91906200c587565b505092509250506200574a8160006040518060600160405280602b81526020016201dee7602b91396200b2a6565b6200577882671bc16d674ec800006040518060600160405280602b81526020016201debc602b91396200b2a6565b505050565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af1158015620057e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200580e91906200c4c7565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b3926200585192169068056bc75e2d63100000906004016200c48e565b6020604051808303816000875af115801562005871573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200589791906200c4a7565b50600e54600090632370a17d60e11b906001600160a01b0316600f546001600160a01b0316620058fa6040518060800160405280878152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60016040516024016200591194939291906200c546565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600d5490915060009081906200595f906001600160a01b031690565b6001600160a01b03166201fbd0846040516200597c91906200ca48565b60006040518083038160008787f1925050503d8060008114620059bc576040519150601f19603f3d011682016040523d82523d6000602084013e620059c1565b606091505b5091509150811562005a135762005a0d6040518060400160405280601f81526020017f74616b652073686f756c64206661696c2064756520746f206c6f7720676173008152506200b84a565b62001d97565b6200219862005a22826200b87c565b6040518060400160405280601d81526020017f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000008152506200b8da565b600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262005a9e92911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562005abe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ae491906200c4a7565b5060185460405163cda30c3b60e01b815267016345785d8a000060048201819052602482015261c3506044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562005b4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b7491906200c4c7565b5060185460405163cda30c3b60e01b815267016345785d8a000060048201819052602482015261c3506044820152600160648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562005bde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c0491906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda19062005c35906004016200c660565b600060405180830381600087803b15801562005c5057600080fd5b505af115801562005c65573d6000803e3d6000fd5b5050600d54600e54600f5460405163fbffe5fd60e01b8152600095506001600160a01b03938416945063fbffe5fd9362005cb6938116921690670214e8348c4f00009081906001906004016200c5f8565b6080604051808303816000875af115801562005cd6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005cfc91906200c629565b505050905062005d2f81670214e8348c4f00006040518060600160405280602681526020016201dd0f602691396200b2a6565b600e5462005def906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562005d8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005db191906200c4c7565b670214e8348c4f0000604051806040016040528060168152602001751a5b98dbdc9c9958dd081c185c9d1a585b08199a5b1b60521b8152506200b2a6565b50565b60185460405163cda30c3b60e01b8152671bc16d674ec8000060048201819052602482015261c3506044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562005e5b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e8191906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda19062005eb2906004016200c660565b600060405180830381600087803b15801562005ecd57600080fd5b505af115801562005ee2573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062005f279290911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af115801562005f47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f6d91906200c4a7565b50600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b0316670de0b6b3a7640000671bc16d674ec8000060006040518663ffffffff1660e01b815260040162005fce9594939291906200c5f8565b6080604051808303816000875af115801562005fee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200601491906200c629565b5050915091506200604881671bc16d674ec800006040518060600160405280602b81526020016201dee7602b91396200b2a6565b620015f082671bc16d674ec800006040518060600160405280602b81526020016201debc602b91396200b2a6565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af1158015620060e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200610691906200c4c7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562006171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200619791906200c4c7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562006202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200622891906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda19062006259906004016200c660565b600060405180830381600087803b1580156200627457600080fd5b505af115801562006289573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620062ce92909116906729a2241af62c0000906004016200c48e565b6020604051808303816000875af1158015620062ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200631491906200c4a7565b50600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b031660006729a2241af62c000060006040518663ffffffff1660e01b81526004016200636e9594939291906200c5f8565b6080604051808303816000875af11580156200638e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620063b491906200c629565b505091509150620063f3826729a2241af62c00006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b620015f0816729a2241af62c00006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b60006200643a600062001164565b905090565b60185460405163cda30c3b60e01b8152600060048201819052670de0b6b3a76400006024830152620186a0604483015260648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af1158015620064aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620064d091906200c4c7565b600d54600e54919250620064ff916001600160a01b039182169163275074589183916368c13d6b91166200368e565b60185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda1906200652f906004016200c660565b600060405180830381600087803b1580156200654a57600080fd5b505af11580156200655f573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620065a49290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af1158015620065c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620065ea91906200c4a7565b50600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b03166200664e60405180608001604052808a815260200167016345785d8a0000815260200160008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b81526004016200667194939291906200c546565b60a0604051808303816000875af115801562006691573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620066b791906200c587565b5050925092509250620066fb836001146040518060400160405280601581526020017414db9a5c19481cda1bdd5b19081b9bdd0819985a5b605a1b8152506200b26d565b620039d68267016345785d8a00006040518060400160405280600f81526020016e57726f6e6720676f742076616c756560881b8152506200b2a6565b600d546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562006791573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620067b791906200c4c7565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a060448201526000606482018190529293506001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562006826573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200684c91906200c4c7565b60185460405163e67ecda160e01b81529192506001600160a01b03169063e67ecda1906200687d906004016200c660565b600060405180830381600087803b1580156200689857600080fd5b505af1158015620068ad573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620068f29290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562006912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200693891906200c4a7565b50600e546001600160a01b03166316c02129306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200698d57600080fd5b505af1158015620069a2573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b60448201526000805160206201dc6e833981519152925063f28dceb391506064015b600060405180830381600087803b15801562006a1557600080fd5b505af115801562006a2a573d6000803e3d6000fd5b5050600d54600e546001600160a01b0391821693506346e142fa925016600f546001600160a01b031662006a916040518060800160405280878152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b815260040162006ab494939291906200c546565b60a0604051808303816000875af115801562006ad4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006afa91906200c587565b5050600d54620015f093508592506001600160a01b031690506370a082313062004c22565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562006b89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006baf91906200c4c7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562006c1a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c4091906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda19062006c71906004016200c660565b600060405180830381600087803b15801562006c8c57600080fd5b505af115801562006ca1573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062006ce69290911690671bc16d674ec80000906004016200c48e565b6020604051808303816000875af115801562006d06573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006d2c91906200c4a7565b50600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b0316670f43fc2c04ee0000671bc16d674ec8000060006040518663ffffffff1660e01b815260040162006d8d9594939291906200c5f8565b6080604051808303816000875af115801562006dad573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006dd391906200c629565b50509150915062006e1282671bc16d674ec800006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b620015f081671bc16d674ec800006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b600d54600e54600f54604051630fbb669160e41b81526001600160a01b039384169363fbb669109362006e8b93908216929116906000906004016200c729565b600060405180830381600087803b15801562006ea657600080fd5b505af115801562006ebb573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062006f009290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562006f20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006f4691906200c4a7565b5060185460405163cda30c3b60e01b815260096004820152600a6024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562006fab573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006fd191906200c4c7565b600f549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200702e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200705491906200c4c7565b600d54600e549192506001600160a01b03908116916346e142fa9116600f546001600160a01b0316620070b360405180608001604052808881526020016001815260200167d02ab486cedc00008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b8152600401620070d694939291906200c546565b60a0604051808303816000875af1158015620070f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200711c91906200c587565b5050600f54600093506001600160a01b031691506370a082319050306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200717d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620071a391906200c4c7565b90506200577882826040518060400160405280602081526020017f6f6c6442616c2073686f756c64206265207374726963746c79206869676865728152506200b91d565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562007252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200727891906200c4c7565b600d54600e54919250620072a7916001600160a01b039182169163275074589183916368c13d6b91166200368e565b60185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda190620072d7906004016200c660565b600060405180830381600087803b158015620072f257600080fd5b505af115801562007307573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200734c9290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af11580156200736c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200739291906200c4a7565b50600f54620073aa906001600160a01b03166200b188565b600d546001600160a01b0316306001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051620073f391815260200190565b60405180910390a3600f5462007412906001600160a01b03166200b188565b601854600d546001600160a01b0391821691166001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60006040516200746191815260200190565b60405180910390a3600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b0316620074c560405180608001604052808a81526020016000815260200160008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b8152600401620053da94939291906200c546565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562007553573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200757991906200c4c7565b600f54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b392620075bb921690671bc16d674ec80000906004016200c48e565b6020604051808303816000875af1158015620075db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200760191906200c4a7565b50600e546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200765c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200768291906200c4c7565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015620076d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620076fb91906200c4c7565b600d54600e549192506000916001600160a01b03918216916346e142fa9116600f546001600160a01b03166200776460405180608001604052808a8152602001670de0b6b3a76400008152602001671bc16d674ec800008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b81526004016200778794939291906200c546565b60a0604051808303816000875af1158015620077a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620077cd91906200c587565b505050509050620077fb816001146040518060600160405280603981526020016201dc8e603991396200b26d565b600e54620078b59084906001600160a01b03166370a08231305b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200785a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200788091906200c4c7565b6200788c91906200c5de565b670de0b6b3a76400006040518060600160405280602281526020016201dde2602291396200b2a6565b600f546018546040516370a0823160e01b81526001600160a01b03918216600482015262001d9792859216906370a0823190602401602060405180830381865afa15801562007908573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200792e91906200c4c7565b6200793a91906200c5de565b670de0b6b3a76400006040518060600160405280602281526020016201de04602291396200b2a6565b600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620079a392911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af1158015620079c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620079e991906200c4a7565b50600e546018546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa15801562007a3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007a6291906200c4c7565b60185460405163cda30c3b60e01b815267016345785d8a000060048201819052602482015261c35060448201526000606482018190529293506001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562007ad0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007af691906200c4c7565b600d54600e549192506000916001600160a01b03918216916346e142fa9116600f546001600160a01b031662007b57604051806080016040528088815260200160008152602001670de0b6b3a7640000815260200161c3508152506200b20a565b60016040518563ffffffff1660e01b815260040162007b7a94939291906200c546565b60a0604051808303816000875af115801562007b9a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007bc091906200c587565b50505050905062007c0181600114604051806040016040528060148152602001731cdb9a5c19481cda1bdd5b19081cdd58d8d9595960621b8152506200b26d565b600d54600e5462007cd2916001600160a01b039081169163def5ddaa9116600f546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801562007c77573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007c9d91906200c4c7565b6000604051806040016040528060148152602001736f666665722073686f756c6420626520676f6e6560601b8152506200b2a6565b600e546018546040516370a0823160e01b81526001600160a01b039182166004820152620057789291909116906370a0823190602401602060405180830381865afa15801562007d26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007d4c91906200c4c7565b846040518060400160405280601d81526020017f6d6b722062616c616e63652073686f756c64206e6f74206368616e67650000008152506200b2a6565b60405163f28dceb360e01b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f3136306269747300000060448201526000805160206201dc6e8339815191529063f28dceb390606401600060405180830381600087803b15801562007dff57600080fd5b505af115801562007e14573d6000803e3d6000fd5b5050600d54600e546001600160a01b03918216935063fbffe5fd925016600f546001600160a01b0316600160a01b6001806040518663ffffffff1660e01b81526004016200449a9594939291906200c5f8565b60185460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015261c3506044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562007ed1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007ef791906200c4c7565b60185460405163e67ecda160e01b81526e1b59dd8bdb585ad95c94995d995c9d608a1b60048201529192506001600160a01b03169063e67ecda190602401600060405180830381600087803b15801562007f5057600080fd5b505af115801562007f65573d6000803e3d6000fd5b505060185460405160016228e33160e11b03198152600160048201526001600160a01b03909116925063ffae399e9150602401600060405180830381600087803b15801562007fb357600080fd5b505af115801562007fc8573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200800d9290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af11580156200802d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200805391906200c4a7565b50600d546200806b906001600160a01b03166200b188565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201de468339815191528330670de0b6b3a764000080604051620080be94939291906200c67c565b60405180910390a3600d54600e546001600160a01b03918216916346e142fa911662002e68565b604080516020810190915260008082525b82518110156200461057825182906000805160206201dc6e83398151915290636900a3ae908690859081106200813057620081306200c7d0565b60200260200101516040518263ffffffff1660e01b81526004016200815791815260200190565b600060405180830381865afa15801562008175573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200819f91908101906200c7e6565b604051602001620081b29291906200c866565b604051602081830303815290604052915060018351620081d391906200c5de565b811015620082005781604051602001620081ee91906200c899565b60405160208183030381529060405291505b806200820c816200c8c1565b915050620080f6565b60008054610100900460ff1615620082365750600054610100900460ff1690565b60006000805160206201dc6e8339815191523b1562008341576040516000906000805160206201dc6e833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620082a39083906519985a5b195960d21b906020016200c48e565b60408051601f1981840301815290829052620082c392916020016200ca66565b60408051601f1981840301815290829052620082df916200ca48565b6000604051808303816000865af19150503d80600081146200831e576040519150601f19603f3d011682016040523d82523d6000602084013e62008323565b606091505b50915050808060200190518101906200833d91906200c4a7565b9150505b919050565b60408051600380825260808201909252600091829190602082016060803683370190505060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201529192506001600160a01b03169063cda30c3b906084016020604051808303816000875af1158015620083d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620083fb91906200c4c7565b818362008408816200c8c1565b9450815181106200841d576200841d6200c7d0565b602090810291909101015260185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562008492573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620084b891906200c4c7565b8183620084c5816200c8c1565b945081518110620084da57620084da6200c7d0565b602090810291909101015260185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af11580156200854f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200857591906200c4c7565b818362008582816200c8c1565b9450815181106200859757620085976200c7d0565b602090810291909101015260185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda190620085d2906004016200c660565b600060405180830381600087803b158015620085ed57600080fd5b505af115801562008602573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200864792909116906729a2241af62c0000906004016200c48e565b6020604051808303816000875af115801562008667573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200868d91906200c4a7565b5060408051600380825260808201909252600091816020015b620086b06200c123565b815260200190600190039081620086a657905050905060006040518060800160405280848381518110620086e857620086e86200c7d0565b602002602001015181526020016706f05b59d3b200008152602001670de0b6b3a76400008152602001620186a08152508282815181106200872d576200872d6200c7d0565b6020026020010181905250808062008745906200c8c1565b91505060405180608001604052808483815181106200876857620087686200c7d0565b60200260200101518152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001620186a0815250828281518110620087ad57620087ad6200c7d0565b60200260200101819052508080620087c5906200c8c1565b9150506040518060800160405280848381518110620087e857620087e86200c7d0565b60200260200101518152602001670b1a2bc2ec5000008152602001670de0b6b3a76400008152602001620186a08152508282815181106200882d576200882d6200c7d0565b6020908102919091010152600d546200884f906001600160a01b03166200b188565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a1600d546200888f906001600160a01b03166200b188565b600f54600e5460408051671feb3dd067660000808252602082015260008183018190526060820152905130936001600160a01b039081169316917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47919081900360800190a4600d54600e54600f54604051632370a17d60e11b8152600093849384936001600160a01b03928316936346e142fa936200893b9381169216908a906001906004016200c546565b60a0604051808303816000875af11580156200895b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200898191906200c587565b5050925092509250620089c6836003146040518060400160405280601681526020017514db9a5c195cc81cda1bdd5b19081b9bdd0819985a5b60521b8152506200b26d565b620089ff82671feb3dd0676600006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b62008a4581671feb3dd067660000604051806040016040528060198152602001780a8c2d6cae440c8d2c840dcdee840ced2ecca40cadcdeeaced603b1b8152506200b2a6565b50505050505050565b600d5460009062008a68906001600160a01b03166200b959565b50600d546040516001600160a01b03909116908490849062008a8a906200c141565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562008ac7573d6000803e3d6000fd5b5090505b92915050565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af115801562008b3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008b6291906200c4c7565b60185460405163e67ecda160e01b81529192506001600160a01b03169063e67ecda19062008b93906004016200c660565b600060405180830381600087803b15801562008bae57600080fd5b505af115801562008bc3573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062008c089290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562008c28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008c4e91906200c4a7565b50600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b031662008cb960405180608001604052808a81526020016706f05b59d3b200008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b815260040162008cdc94939291906200c546565b60a0604051808303816000875af115801562008cfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008d2291906200c587565b505092509250925062008d66836001146040518060400160405280601581526020017414db9a5c19481cda1bdd5b19081b9bdd0819985a5b605a1b8152506200b26d565b62008d9f826706f05b59d3b200006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b62001d97816706f05b59d3b20000604051806040016040528060198152602001780a8c2d6cae440c8d2c840dcdee840ced2ecca40cadcdeeaced603b1b8152506200b2a6565b600d54600e54600f5460405163fbffe5fd60e01b81526001600160a01b039384169363fbffe5fd9362008e319390821692911690670de0b6b3a76400009081906001906004016200c5f8565b6080604051808303816000875af115801562008e51573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008e7791906200c629565b5050600d54600e5462008f3893506001600160a01b03918216925063db20266f9116600f546001600160a01b03166040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801562008ef1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008f1791906200c4a7565b156040518060600160405280603681526020016201de66603691396200b26d565b565b600080600d60009054906101000a90046001600160a01b03168585604051620034ac906200c14f565b600d546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562008fbd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008fe391906200c4c7565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a060448201526000606482018190529293506001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562009052573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200907891906200c4c7565b60185460405163e67ecda160e01b81529192506001600160a01b03169063e67ecda190620090a9906004016200c660565b600060405180830381600087803b158015620090c457600080fd5b505af1158015620090d9573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200911e9290911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af11580156200913e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200916491906200c4a7565b50600f546001600160a01b03166316c02129306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b158015620091b957600080fd5b505af1158015620091ce573d6000803e3d6000fd5b505060405163f28dceb360e01b81526000805160206201dc6e833981519152925063f28dceb39150620069fa906004016200c6fa565b60185460405163cda30c3b60e01b8152671bc16d674ec8000060048201819052602482015261c3506044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af11580156200926d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200929391906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda190620092c4906004016200c660565b600060405180830381600087803b158015620092df57600080fd5b505af1158015620092f4573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620093399290911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af115801562009359573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200937f91906200c4a7565b50600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b03166000671bc16d674ec8000060006040518663ffffffff1660e01b815260040162005fce9594939291906200c5f8565b600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200941992911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af115801562009439573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200945f91906200c4a7565b5060005b600a8110156200952a576018546001600160a01b031663cda30c3b620094928367016345785d8a00006200ca26565b6040516001600160e01b031960e084901b168152600481019190915267016345785d8a0000602482015261c3506044820152606481018490526084016020604051808303816000875af1158015620094ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200951491906200c4c7565b508062009521816200c8c1565b91505062009463565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda1906200955b906004016200c660565b600060405180830381600087803b1580156200957657600080fd5b505af11580156200958b573d6000803e3d6000fd5b5050600d54600e54670214e8348c4f000093506702c68af0bb14000092506001600160a01b039182169163fbffe5fd9162055730911662005136565b6000620095d36200ba32565b6000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562009614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200963a91906200ca99565b60ff169050620096496200ba3e565b6200965681600a6200c9da565b62004f3890846200ca26565b60195460405163cda30c3b60e01b8152670de0b6b3a764000060048201819052602482015261c3506044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af1158015620096cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620096f291906200c4c7565b601a805460ff60a01b1916600160a01b179055600f54600d549192506001600160a01b039081169163095ea7b39162009729911690565b670de0b6b3a76400006040518363ffffffff1660e01b8152600401620097519291906200c48e565b6020604051808303816000875af115801562009771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200979791906200c4a7565b5060405163f28dceb360e01b815260206004820152601760248201527f6d67762f73656e6450656e616c7479526576657274656400000000000000000060448201526000805160206201dc6e8339815191529063f28dceb390606401600060405180830381600087803b1580156200980e57600080fd5b505af115801562009823573d6000803e3d6000fd5b5050600d54600e546001600160a01b0391821693506346e142fa925016600f546001600160a01b031662002eb16040518060800160405280878152602001670de0b6b3a76400008152602001670de0b6b3a76400008152602001620186a08152506200b20a565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482015268056bc75e2d631000006024820152620186a06044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af1158015620098fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200992391906200c4c7565b60185460405163e67ecda160e01b8152741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b60048201529192506001600160a01b03169063e67ecda190602401600060405180830381600087803b1580156200998257600080fd5b505af115801562009997573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620099dc92909116906706f05b59d3b20000906004016200c48e565b6020604051808303816000875af1158015620099fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009a2291906200c4a7565b50600d5462009a3a906001600160a01b03166200b188565b600f546001600160a01b0316600e546001600160a01b0391821691166001600160a01b03166000805160206201de4683398151915283306802b5e3af16b18800006706f05b59d3b2000060405162009a9694939291906200c6b8565b60405180910390a3600d54600e546000916001600160a01b03908116916346e142fa9116600f546001600160a01b031662009b0560405180608001604052808881526020016802b5e3af16b188000081526020016706f05b59d3b200008152602001620186a08152506200b20a565b60016040518563ffffffff1660e01b815260040162009b2894939291906200c546565b60a0604051808303816000875af115801562009b48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009b6e91906200c587565b505050509050620015f081600014604051806040016040528060118152602001701bdc99195c881cda1bdd5b190819985a5b607a1b8152506200b26d565b600d54600e54600f5460405163fbffe5fd60e01b81526001600160a01b039384169363fbffe5fd936200449a9390821692911690670de0b6b3a76400009081906001906004016200c5f8565b600d54600e54600f5460405163dc7e98df60e01b81526001600160a01b039384169363dc7e98df9362009c3893908216929116906003906004016200c729565b600060405180830381600087803b15801562009c5357600080fd5b505af115801562009c68573d6000803e3d6000fd5b5050600e54600092506001600160a01b031690506370a0823130620012c2565b60185460405163cda30c3b60e01b8152671bc16d674ec8000060048201819052602482015261c3506044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562009cf1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009d1791906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda19062009d48906004016200c660565b600060405180830381600087803b15801562009d6357600080fd5b505af115801562009d78573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062009dbd9290911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af115801562009ddd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009e0391906200c4a7565b50600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b03166000671bc16d674ec8000060016040518663ffffffff1660e01b815260040162009e5d9594939291906200c5f8565b6080604051808303816000875af115801562009e7d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009ea391906200c629565b50509150915062009ed08160006040518060600160405280602b81526020016201dee7602b91396200b2a6565b620015f08260006040518060600160405280602b81526020016201debc602b91396200b2a6565b60185460405163cda30c3b60e01b8152670f43fc2c04ee00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562009f67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009f8d91906200c4c7565b5060185460405163cda30c3b60e01b81526710a741a4627800006004820152670de0b6b3a7640000602482015261c3506044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af115801562009ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a02491906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda1906200a055906004016200c660565b600060405180830381600087803b1580156200a07057600080fd5b505af11580156200a085573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200a0ca9290911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af11580156200a0ea573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a11091906200c4a7565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200a15192911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af11580156200a171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a19791906200c4a7565b50600e546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200a1f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a21891906200c4c7565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa1580156200a26b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a29191906200c4c7565b600d54600e54600f5460405163fbffe5fd60e01b815293945060009384936001600160a01b039081169363fbffe5fd936200a2ec93918316921690671bc16d674ec8000090673782dace9d900000906001906004016200c5f8565b6080604051808303816000875af11580156200a30c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a33291906200c629565b5050915091506200a36682671bc16d674ec800006040518060600160405280602b81526020016201debc602b91396200b2a6565b6200a39481671feb3dd0676600006040518060600160405280602b81526020016201dee7602b91396200b2a6565b600e546200a44d9085906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200a3f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a41891906200c4c7565b6200a42491906200c5de565b671bc16d674ec800006040518060600160405280602281526020016201dde2602291396200b2a6565b600f546018546040516370a0823160e01b81526001600160a01b03918216600482015262001d9792869216906370a0823190602401602060405180830381865afa1580156200a4a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a4c691906200c4c7565b6200a4d291906200c5de565b671feb3dd0676600006040518060600160405280602281526020016201de04602291396200b2a6565b600062001db98383600062001d9d565b60185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af11580156200a575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a59b91906200c4c7565b5060185460405163cda30c3b60e01b8152670de0b6b3a7640000600482018190526024820152620186a06044820152600060648201526001600160a01b039091169063cda30c3b906084016020604051808303816000875af11580156200a606573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a62c91906200c4c7565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda1906200a65d906004016200c660565b600060405180830381600087803b1580156200a67857600080fd5b505af11580156200a68d573d6000803e3d6000fd5b5050600f54600d5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200a6d29290911690671bc16d674ec80000906004016200c48e565b6020604051808303816000875af11580156200a6f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a71891906200c4a7565b50600d54600e5460009182916001600160a01b039182169163fbffe5fd9116600f546001600160a01b0316670f43fc2c04ee0000671bc16d674ec8000060016040518663ffffffff1660e01b81526004016200a7799594939291906200c5f8565b6080604051808303816000875af11580156200a799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a7bf91906200c629565b5050915091506200a7fe82670f43fc2c04ee00006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b620015f081670f43fc2c04ee00006040518060400160405280601881526020016000805160206201de268339815191528152506200b2a6565b60185460405163cda30c3b60e01b8152670f43fc2c04ee00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052916001600160a01b03169063cda30c3b906084016020604051808303816000875af11580156200a8a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a8ce91906200c4c7565b600e54600d5460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b3926200a910921690678ac7230489e80000906004016200c48e565b6020604051808303816000875af11580156200a930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a95691906200c4a7565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200a99792911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af11580156200a9b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a9dd91906200c4a7565b50600e546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200aa38573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200aa5e91906200c4c7565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa1580156200aab1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200aad791906200c4c7565b600d549091506200aaf1906001600160a01b03166200b188565b600f54600e5460408051868152306020820152670de0b6b3a764000081830152670f43fc2c04ee0000606082015290516001600160a01b039384169392909216917f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d9181900360800190a3600d54600e54600091829182916001600160a01b03908116916346e142fa9116600f546001600160a01b03166200abc560405180608001604052808c8152602001670de0b6b3a76400008152602001670f43fc2c04ee0000815260200161c3508152506200b20a565b60016040518563ffffffff1660e01b81526004016200abe894939291906200c546565b60a0604051808303816000875af11580156200ac08573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ac2e91906200c587565b50509250925092506200ac71836001146040518060400160405280601481526020017314db9a5c19481cda1bdd5b19081cdd58d8d9595960621b8152506200b26d565b600e546200ac909086906001600160a01b03166370a082313062007815565b600f546018546040516370a0823160e01b81526001600160a01b0391821660048201526200ad3e92879216906370a0823190602401602060405180830381865afa1580156200ace3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ad0991906200c4c7565b6200ad1591906200c5de565b670f43fc2c04ee00006040518060600160405280602281526020016201de04602291396200b2a6565b6200ad6c82670de0b6b3a76400006040518060600160405280602181526020016201dd35602191396200b2a6565b62002f1a81670f43fc2c04ee00006040518060600160405280602181526020016201dd35602191396200b2a6565b600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200adda92911690670de0b6b3a7640000906004016200c48e565b6020604051808303816000875af11580156200adfa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ae2091906200c4a7565b5060005b600a8110156200aeeb576018546001600160a01b031663cda30c3b6200ae538367016345785d8a00006200ca26565b6040516001600160e01b031960e084901b168152600481019190915267016345785d8a0000602482015261c3506044820152606481018490526084016020604051808303816000875af11580156200aeaf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200aed591906200c4c7565b50806200aee2816200c8c1565b9150506200ae24565b5060185460405163e67ecda160e01b81526001600160a01b039091169063e67ecda1906200af1c906004016200c660565b600060405180830381600087803b1580156200af3757600080fd5b505af11580156200af4c573d6000803e3d6000fd5b5050600d54600e546702c68af0bb1400009350670429d069189e000092506001600160a01b039182169163fbffe5fd9162055730911662005136565b60005b60328110156200b0395760185460405163cda30c3b60e01b815266038d7ea4c6800060048201819052602482015261c3506044820152606481018390526001600160a01b039091169063cda30c3b906084016020604051808303816000875af11580156200affd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b02391906200c4c7565b50806200b030816200c8c1565b9150506200af8b565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200b07a92911690678ac7230489e80000906004016200c48e565b6020604051808303816000875af11580156200b09a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005def91906200c4a7565b600d546040516365fbae4d60e11b81526001600160a01b0385811660048301528481166024830152600092839283929091169063cbf75c9a906044016040805180830381865afa1580156200b119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b13f91906200cabe565b909250905061ffff604083901c166200b16262ffffff606084901c16866200ca0b565b6200b16e91906200ca26565b6200b17e90633b9aca006200ca26565b9695505050505050565b6040516381bad6f360e01b8152600160048201819052602482018190526044820181905260648201526001600160a01b03821660848201526000805160206201dc6e833981519152906381bad6f39060a401600060405180830381600087803b1580156200b1f557600080fd5b505af115801562002198573d6000803e3d6000fd5b60408051600180825281830190925260609160009190816020015b6200b22f6200c123565b8152602001906001900390816200b22557905050905082816000815181106200b25c576200b25c6200c7d0565b602090810291909101015292915050565b81620015f0576000805160206201dd56833981519152816040516200b29391906200cae3565b60405180910390a1620015f0826200bad4565b81831462005778576000805160206201dd56833981519152816040516200b2ce91906200cae3565b60405180910390a16200577883836200bb29565b601354604051309160119160129160ff16906200b2ff906200c15d565b6200b30e94939291906200cbbb565b604051809103906000f0801580156200b32b573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b03929092169190911790553060165460405160149160159160ff909116906200b36a906200c15d565b6200b37994939291906200cbbb565b604051809103906000f0801580156200b396573d6000803e3d6000fd5b50600f80546001600160a01b0319166001600160a01b03928316908117909155600e546010546200b3d09391909116919060ff1662001d9d565b600d80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b1580156200b43057600080fd5b505af11580156200b445573d6000803e3d6000fd5b5050600e54600d5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b394506200b4849350911690600019906004016200c48e565b6020604051808303816000875af11580156200b4a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b4ca91906200c4a7565b50600f54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200b07a92911690600019906004016200c48e565b6200b510836200b959565b506200b51c826200b959565b50601754604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b1580156200b58457600080fd5b505af11580156200b599573d6000803e3d6000fd5b5050601754604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b1580156200b60457600080fd5b505af11580156200b619573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200b695573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200b6bf91908101906200c7e6565b6040518363ffffffff1660e01b81526004016200b6de9291906200c7aa565b600060405180830381600087803b1580156200b6f957600080fd5b505af11580156200b70e573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200b78a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200b7b491908101906200c7e6565b6040518363ffffffff1660e01b81526004016200b7d39291906200c7aa565b600060405180830381600087803b1580156200b7ee57600080fd5b505af115801562008a45573d6000803e3d6000fd5b62005def816040516024016200b81a91906200cc0a565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526200bbed565b6000805160206201dd56833981519152816040516200b86a91906200cae3565b60405180910390a162005def6200bc0e565b606060008060201b836040516020016200b8989291906200cc1f565b60405160208183030381529060405290506000600484516200b8bb91906200c5de565b602083018181529290915062004f38906040838201810191016200c7e6565b60006200b9148383604051806040016040528060138152602001723bb937b733903932bb32b93a103932b0b9b7b760691b8152506200bd17565b50600192915050565b81831162005778576000805160206201dd56833981519152816040516200b94591906200cae3565b60405180910390a16200577883836200bda3565b60006001600160a01b0382166200ba23576000805160206201dc4e8339815191526040516200b9b9906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a16200ba236200bc0e565b506001600160a01b0316151590565b62008f3860006200be90565b6008546001036200ba895760095460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206201dc6e8339815191529063ca669fa79060240162001d67565b60085460020362008f38576009546040516303223eab60e11b81526001600160a01b0390911660048201526000805160206201dc6e833981519152906306447d569060240162001d67565b8062005def576000805160206201dc4e8339815191526040516200b86a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b808214620015f0576000805160206201dc4e8339815191526040516200bb8b9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16000805160206201de9c833981519152816040516200bbb391906200cc4e565b60405180910390a16000805160206201de9c833981519152826040516200bbdb91906200cc87565b60405180910390a1620015f06200bc0e565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000805160206201dc6e8339815191523b156200bd0657604080516000805160206201dc6e833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526200bca192916020016200ca66565b60408051601f19818403018152908290526200bcbd916200ca48565b6000604051808303816000865af19150503d80600081146200bcfc576040519150601f19603f3d011682016040523d82523d6000602084013e6200bd01565b606091505b505050505b6000805461ff001916610100179055565b816040516020016200bd2a91906200ca48565b60405160208183030381529060405280519060200120836040516020016200bd5391906200ca48565b604051602081830303815290604052805190602001201462005778576000805160206201dd56833981519152816040516200bd8f91906200cae3565b60405180910390a16200577883836200bff5565b808211620015f0576000805160206201dc4e8339815191526040516200be049060208082526021908201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b60608201526020810184905290516000805160206201de9c8339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b6060820152602081018290526000805160206201de9c833981519152906080016200bbdb565b600060085560408051631e91f8cb60e01b815290513091631e91f8cb9160048083019260209291908290030181865afa1580156200bed2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200bef891906200ccb2565b600980546001600160a01b0319166001600160a01b03929092169182179055301462005def57306001600160a01b0316631e91f8cb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200bf5d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200bf8391906200ccb2565b6009546001600160a01b039081169116146200bfa157600160085550565b801562005def576002600855604080516390c5013b60e01b815290516000805160206201dc6e833981519152916390c5013b91600480830192600092919082900301818387803b1580156200b1f557600080fd5b806040516020016200c00891906200ca48565b60405160208183030381529060405280519060200120826040516020016200c03191906200ca48565b6040516020818303038152906040528051906020012014620015f0576000805160206201dc4e8339815191526040516200c0a99060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a16000805160206201dd56833981519152816040516200c0d191906200ccd2565b60405180910390a16000805160206201dd56833981519152826040516200bbdb91906200cd11565b61567e806200cd3d83390190565b6155e480620123bb83390190565b610c49806201799f83390190565b60405180608001604052806004906020820280368337509192915050565b61206d80620185e883390190565b611a41806201a65583390190565b611bb8806201c09683390190565b801515811462005def57600080fd5b6000602082840312156200c18d57600080fd5b813562001db9816200c16b565b6001600160a01b038116811462005def57600080fd5b6000806000606084860312156200c1c657600080fd5b83356200c1d3816200c19a565b925060208401356200c1e5816200c19a565b915060408401356200c1f7816200c16b565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200c244576200c2446200c202565b604052919050565b600067ffffffffffffffff8211156200c269576200c2696200c202565b50601f01601f191660200190565b6000806000606084860312156200c28d57600080fd5b83356200c29a816200c19a565b925060208401356200c2ac816200c19a565b9150604084013567ffffffffffffffff8111156200c2c957600080fd5b8401601f810186136200c2db57600080fd5b80356200c2f26200c2ec826200c24c565b6200c218565b8181528760208385010111156200c30857600080fd5b816020840160208301376000602083830101528093505050509250925092565b600067ffffffffffffffff8211156200c345576200c3456200c202565b5060051b60200190565b600060208083850312156200c36357600080fd5b823567ffffffffffffffff8111156200c37b57600080fd5b8301601f810185136200c38d57600080fd5b80356200c39e6200c2ec826200c328565b81815260059190911b820183019083810190878311156200c3be57600080fd5b928401925b828410156200c3de578335825292840192908401906200c3c3565b979650505050505050565b6000806000606084860312156200c3ff57600080fd5b83356200c40c816200c19a565b95602085013595506040909401359392505050565b600080604083850312156200c43557600080fd5b82356200c442816200c19a565b915060208301356200c454816200c19a565b809150509250929050565b600080604083850312156200c47357600080fd5b82356200c480816200c19a565b946020939093013593505050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200c4ba57600080fd5b815162001db9816200c16b565b6000602082840312156200c4da57600080fd5b5051919050565b60008151808452602080850194508084016000805b848110156200c53a57825188835b60048110156200c523578251825291860191908601906001016200c504565b50505060809790970196918301916001016200c4f6565b50959695505050505050565b6001600160a01b038581168252841660208201526080604082018190526000906200c574908301856200c4e1565b9050821515606083015295945050505050565b600080600080600060a086880312156200c5a057600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b634e487b7160e01b600052601160045260246000fd5b6000828210156200c5f3576200c5f36200c5c8565b500390565b6001600160a01b03958616815293909416602084015260408301919091526060820152901515608082015260a00190565b600080600080608085870312156200c64057600080fd5b505082516020840151604085015160609095015191969095509092509050565b6f6d67762f74726164655375636365737360801b815260200190565b9384526001600160a01b03929092166020840152604083015260608201526e1b59dd8bdb585ad95c94995d995c9d608a1b608082015260a00190565b9384526001600160a01b0392909216602084015260408301526060820152741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b608082015260a00190565b6020808252601590820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60005b838110156200c76a5781810151838201526020016200c750565b8381111562001d975750506000910152565b600081518084526200c7968160208601602086016200c74d565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062004f38908301846200c77c565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200c7f957600080fd5b815167ffffffffffffffff8111156200c81157600080fd5b8201601f810184136200c82357600080fd5b80516200c8346200c2ec826200c24c565b8181528560208385010111156200c84a57600080fd5b6200c85d8260208301602086016200c74d565b95945050505050565b600083516200c87a8184602088016200c74d565b8351908301906200c8908183602088016200c74d565b01949350505050565b600082516200c8ad8184602087016200c74d565b61016160f51b920191825250600201919050565b6000600182016200c8d6576200c8d66200c5c8565b5060010190565b600181815b808511156200c91e5781600019048211156200c902576200c9026200c5c8565b808516156200c91057918102915b93841c93908002906200c8e2565b509250929050565b6000826200c9375750600162008acb565b816200c9465750600062008acb565b81600181146200c95f57600281146200c96a576200c98a565b600191505062008acb565b60ff8411156200c97e576200c97e6200c5c8565b50506001821b62008acb565b5060208310610133831016604e8410600b84101617156200c9af575081810a62008acb565b6200c9bb83836200c8dd565b80600019048211156200c9d2576200c9d26200c5c8565b029392505050565b600062001db983836200c926565b6000826200ca0657634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156200ca21576200ca216200c5c8565b500190565b60008160001904831182151516156200ca43576200ca436200c5c8565b500290565b600082516200ca5c8184602087016200c74d565b9190910192915050565b6001600160e01b03198316815281516000906200ca8b8160048501602087016200c74d565b919091016004019392505050565b6000602082840312156200caac57600080fd5b815160ff8116811462001db957600080fd5b600080604083850312156200cad257600080fd5b505080516020909101519092909150565b60408152600560408201526422b93937b960d91b606082015260806020820152600062001db960808301846200c77c565b8054600090600181811c90808316806200cb2f57607f831692505b602080841082036200cb5157634e487b7160e01b600052602260045260246000fd5b838852602088018280156200cb6f57600181146200cb81576200cbae565b60ff198716825282820197506200cbae565b60008981526020902060005b878110156200cba8578154848201529086019084016200cb8d565b83019850505b5050505050505092915050565b6001600160a01b03851681526080602082018190526000906200cbe1908301866200cb14565b82810360408401526200cbf581866200cb14565b91505060ff8316606083015295945050505050565b60208152600062001db960208301846200c77c565b63ffffffff1983168152600082516200cc4081601c8501602087016200c74d565b91909101601c019392505050565b6040815260006200cc7960408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200cc7960408301600a815269080808081058dd1d585b60b21b602082015260400190565b6000602082840312156200ccc557600080fd5b815162001db9816200c19a565b6040815260006200ccfd60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b828103602084015262004f3881856200c77c565b6040815260006200ccfd60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea26469706673582212206f7a3c82f195bccff7131c6fed2cb383b9aa2b14228ede7529798084a7c9f14064736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea264697066735822122063bc37507b0e565e2a8136c576c1357b3a90b594b4c54a87e5a42e97ece520f764736f6c634300080e003360806040526000805460ff1916600117905534801561001d57600080fd5b50604051610c49380380610c4983398101604081905261003c9161009f565b600080546001600160a01b0394851661010002610100600160a81b0319909116179055600180549284166001600160a01b0319938416179055600280549190931691161790556100ec565b6001600160a01b038116811461009c57600080fd5b50565b6000806000606084860312156100b457600080fd5b83516100bf81610087565b60208501519093506100d081610087565b60408501519092506100e181610087565b809150509250925092565b610b4e806100fb6000396000f3fe6080604052600436106100ab5760003560e01c8063a3cfe14d11610064578063a3cfe14d146101ee578063aa2cc08b1461020e578063b04220dd146100fa578063e1f21c671461022e578063f8ccbf471461024e578063ff2e2d331461026857600080fd5b8063080d7c4d146100b75780631154020b146100d95780632d24c42f146100fa5780633a768463146101345780634d1d2b6614610174578063978b7c02146101be57600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d23660046107db565b610288565b005b3480156100e557600080fd5b506100d76100f4366004610807565b50505050565b34801561010657600080fd5b5061011a61011536600461084d565b61031f565b604080519283526020830191909152015b60405180910390f35b34801561014057600080fd5b5061015c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b03909116815260200161012b565b34801561018057600080fd5b5061019461018f36600461084d565b6103c7565b6040805195151586526020860194909452928401919091526060830152608082015260a00161012b565b3480156101ca57600080fd5b506101de6101d936600461084d565b6104c3565b604051901515815260200161012b565b3480156101fa57600080fd5b506100d76102093660046107db565b61053b565b34801561021a57600080fd5b5061011a61022936600461086f565b610579565b34801561023a57600080fd5b506100d76102493660046108ca565b610617565b34801561025a57600080fd5b506000546101de9060ff1681565b34801561027457600080fd5b506101de61028336600461090b565b61068a565b60005460015460025460405163167ae91560e21b81526001600160a01b039283166004820152908216602482015284821660448201526064810184905261010090920416906359eba454906084015b6020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a919061098e565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b03928316600482015290821660248201526044810187905260648101869052608481019290925283926101009004169063fbffe5fd9060a4016080604051808303816000875af1158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba91906109b0565b5091969095509350505050565b60008060008060008061040f60405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff8016815250610748565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b036101009093048316946346e142fa9461046094928316939216918c916004016109e6565b60a0604051808303816000875af115801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190610a7b565b60019094149e50919c509a50985096505050505050509295509295909350565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af115801561050b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052f9190610abb565b50929695505050505050565b60005460405163095ea7b360e01b81526101009091046001600160a01b0390811660048301526024820183905283169063095ea7b3906044016102d7565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af11580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060791906109b0565b5091999098509650505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af1158015610666573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f4919061098e565b6000806106b6604051806080016040528088815260200187815260200186815260200185815250610748565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016106ed94939291906109e6565b60a0604051808303816000875af115801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190610a7b565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b61076b6107a5565b815260200190600190039081610763579050509050828160008151811061079457610794610b02565b602090810291909101015292915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b03811681146107d857600080fd5b50565b600080604083850312156107ee57600080fd5b82356107f9816107c3565b946020939093013593505050565b6000806000806080858703121561081d57600080fd5b8435610828816107c3565b93506020850135610838816107c3565b93969395505050506040820135916060013590565b6000806040838503121561086057600080fd5b50508035926020909101359150565b600080600080600060a0868803121561088757600080fd5b8535610892816107c3565b945060208601356108a2816107c3565b935060408601356108b2816107c3565b94979396509394606081013594506080013592915050565b6000806000606084860312156108df57600080fd5b83356108ea816107c3565b925060208401356108fa816107c3565b929592945050506040919091013590565b600080600080600080600060e0888a03121561092657600080fd5b8735610931816107c3565b96506020880135610941816107c3565b95506040880135610951816107c3565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b8051801515811461098957600080fd5b919050565b6000602082840312156109a057600080fd5b6109a982610979565b9392505050565b600080600080608085870312156109c657600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b82811015610a5c57855185835b6004811015610a4957825182529186019190860190600101610a2c565b5050509483019493860193600101610a1f565b5050505085151560608601529250610a72915050565b95945050505050565b600080600080600060a08688031215610a9357600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080600080600060a08688031215610ad357600080fd5b610adc86610979565b602087015160408801516060890151608090990151929a91995097965090945092505050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122037fdda2c3f9e65c58a2aa53916c2c81a6db7d75b5fede39a7f49baa6761eb0e364736f6c634300080e0033608060405234801561001057600080fd5b5060405161206d38038061206d83398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b611f7f806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b611a418061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e0033a264697066735822122028664c34373e72c49123f9c3469bcfa72398b0533b5bf2e6737015883ecc80b564736f6c634300080e003360806040526004805463ff00ff00191663010001001790553480156200002457600080fd5b5060405162001a4138038062001a418339810160408190526200004791620000a3565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000f7565b6001600160a01b0381168114620000a057600080fd5b50565b600080600060608486031215620000b957600080fd5b8351620000c6816200008a565b6020850151909350620000d9816200008a565b6040850151909250620000ec816200008a565b809150509250925092565b61193a80620001076000396000f3fe6080604052600436106101bb5760003560e01c8063ba414fa6116100ec578063e923c6511161008a578063fa7626d411610064578063fa7626d414610550578063fc3816c81461056f578063fc8349f21461058f578063ffae399e146105af57600080fd5b8063e923c651146104ef578063f5537ede1461050f578063f8ccbf471461052f57600080fd5b8063ccfbf94d116100c6578063ccfbf94d1461046f578063cda30c3b1461048f578063d3845fea146104af578063e67ecda1146104cf57600080fd5b8063ba414fa61461040a578063c4c6c87d1461042f578063cafffca81461044f57600080fd5b80635a4924e8116101595780637ec95ff3116101335780637ec95ff31461037c5780638b0af9bb1461039c578063a3cfe14d146103b1578063a47395f6146103d157600080fd5b80635a4924e8146102f55780636c49c32c146103235780637a943a371461034357600080fd5b80633a768463116101955780633a768463146102295780633d3d130d1461026e57806353e575ac1461028e578063557f49c3146102bc57600080fd5b80630cc9d656146101c75780632644c05c146101e957806333ac5efd1461020957600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e236600461142d565b6105e8565b005b3480156101f557600080fd5b506101e7610204366004611492565b610631565b34801561021557600080fd5b506101e76102243660046114cd565b6106af565b34801561023557600080fd5b50610251737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027a57600080fd5b506101e7610289366004611529565b610731565b34801561029a57600080fd5b506102ae6102a9366004611492565b61078d565b604051908152602001610265565b3480156102c857600080fd5b506101e76102d736600461157a565b60028054911515600160a81b0260ff60a81b19909216919091179055565b34801561030157600080fd5b506101e761031036600461157a565b6004805460ff1916911515919091179055565b34801561032f57600080fd5b506102ae61033e36600461159e565b610821565b34801561034f57600080fd5b506101e761035e36600461157a565b60028054911515600160b81b0260ff60b81b19909216919091179055565b34801561038857600080fd5b506102ae6103973660046114cd565b610988565b3480156103a857600080fd5b506102ae610a1d565b3480156103bd57600080fd5b506101e76103cc3660046115bb565b610a8f565b3480156103dd57600080fd5b506101e76103ec36600461157a565b60028054911515600160a01b0260ff60a01b19909216919091179055565b34801561041657600080fd5b5061041f610b0b565b6040519015158152602001610265565b34801561043b57600080fd5b506102ae61044a3660046115e7565b610c3a565b34801561045b57600080fd5b506102ae61046a3660046115e7565b610ccd565b34801561047b57600080fd5b506102ae61048a366004611600565b610d1e565b34801561049b57600080fd5b506102ae6104aa366004611659565b610d9e565b3480156104bb57600080fd5b506101e76104ca3660046115e7565b610e30565b3480156104db57600080fd5b506101e76104ea3660046115e7565b600355565b3480156104fb57600080fd5b506102ae61050a366004611492565b610e92565b34801561051b57600080fd5b506101e761052a36600461168b565b610f1b565b34801561053b57600080fd5b5060045461041f906301000000900460ff1681565b34801561055c57600080fd5b5060045461041f90610100900460ff1681565b34801561057b57600080fd5b506102ae61058a3660046116cc565b610f94565b34801561059b57600080fd5b5061041f6105aa3660046115e7565b611022565b3480156105bb57600080fd5b506101e76105ca36600461157a565b60028054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516106219695949392919061172e565b60405180910390a1505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f7691946106769481169316918b918b918b91908b908b90600401611767565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b505050505050505050565b60008054600154600254604051636a4f769160e01b81526001600160a01b0393841694636a4f76919487946106f794908216939116918d918d918d918d908d90600401611767565b6000604051808303818588803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b5050505050505050505050565b6003541561077f5761077f81602001356003546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611092565b61078982826110da565b5050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936107d4939183169216908c908c908c908a908d906004016117ab565b60206040518083038185885af11580156107f2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081791906117e9565b9695505050505050565b600254600090600160b01b900460ff161561085c576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c23361088b6020850185611802565b61089b6040860160208701611802565b856040013586608001358760a001356040516108bc9695949392919061172e565b60405180910390a1600254600160a01b900460ff161561095f576108e36020830183611802565b6000805460405163095ea7b360e01b81526001600160a01b0391821660048201526024810192909252919091169063095ea7b3906044016020604051808303816000875af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d919061181f565b505b600254600160a81b900460ff161561098057506418589bdc9d60da1b919050565b506000919050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc9387936109cf939183169216908d908d908d908d908d906004016117ab565b60206040518083038185885af11580156109ed573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906117e9565b905090565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061181f565b505050565b60045460009062010000900460ff1615610b2f575060045462010000900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610c355760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610bbd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611868565b60408051601f1981840301815290829052610bd791611899565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b5091505080806020019051810190610c31919061181f565b9150505b919050565b6000805460015460025460405163ad97db1b60e01b81526001600160a01b0392831660048201529082166024820152604481018590526064810184905291169063ad97db1b906084015b6020604051808303816000875af1158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906117e9565b92915050565b600080546001805460025460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810186905260648101929092529091169063ad97db1b90608401610c84565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc90610d5b908a908a908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1291906117e9565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610de493908216929116908a908a908a9089908b906004016117ab565b6020604051808303816000875af1158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2791906117e9565b95945050505050565b600054604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b158015610e7657600080fd5b505af1158015610e8a573d6000803e3d6000fd5b505050505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416936349f6d2dc93610ed893908216929116908b908b908b908b908b906004016117ab565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081791906117e9565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e919061181f565b50505050565b6000805460405163127db4b760e21b81526001600160a01b03909116906349f6d2dc908490610fd3908c908c908c908c908c908a908d906004016117ab565b60206040518083038185885af1158015610ff1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061101691906117e9565b98975050505050505050565b60008054604051632e1a7d4d60e01b8152600481018490526001600160a01b0390911690632e1a7d4d906024016020604051808303816000875af115801561106e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc7919061181f565b818314610b06577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516110c891906118b5565b60405180910390a1610b0683836111e2565b60045460ff16156111205760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b604482015260640160405180910390fd5b600254600160b81b900460ff1615610789576000546001600160a01b0316636a4f76916111506020850185611802565b6111606040860160208701611802565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016111c8989796959493929190611767565b600060405180830381600087803b158015610e7657600080fd5b808214610789577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112569060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610789737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156114025760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526113a19291602001611868565b60408051601f19818403018152908290526113bb91611899565b6000604051808303816000865af19150503d80600081146113f8576040519150601f19603f3d011682016040523d82523d6000602084013e6113fd565b606091505b505050505b6004805462ff0000191662010000179055565b6001600160a01b038116811461142a57600080fd5b50565b60008060008060008060c0878903121561144657600080fd5b863561145181611415565b9550602087013561146181611415565b9450604087013561147181611415565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080600060a086880312156114aa57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156114e657600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000610120828403121561152357600080fd5b50919050565b60008082840361016081121561153e57600080fd5b6115488585611510565b9250604061011f198201121561155d57600080fd5b50610120830190509250929050565b801515811461142a57600080fd5b60006020828403121561158c57600080fd5b81356115978161156c565b9392505050565b600061012082840312156115b157600080fd5b6115978383611510565b600080604083850312156115ce57600080fd5b82356115d981611415565b946020939093013593505050565b6000602082840312156115f957600080fd5b5035919050565b60008060008060008060c0878903121561161957600080fd5b863561162481611415565b9550602087013561163481611415565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806000806080858703121561166f57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156116a057600080fd5b83356116ab81611415565b925060208401356116bb81611415565b929592945050506040919091013590565b600080600080600080600060e0888a0312156116e757600080fd5b87356116f281611415565b9650602088013561170281611415565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b6000602082840312156117fb57600080fd5b5051919050565b60006020828403121561181457600080fd5b813561159781611415565b60006020828403121561183157600080fd5b81516115978161156c565b60005b8381101561185757818101518382015260200161183f565b83811115610f8e5750506000910152565b6001600160e01b031983168152815160009061188b81600485016020870161183c565b919091016004019392505050565b600082516118ab81846020870161183c565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600082518060808401526118f08160a085016020870161183c565b601f01601f19169190910160a0019291505056fea2646970667358221220758e228e653deeab2b14f8b888185a342a3bf92b0afc7614c92763efafc6472a64736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220bd809d42139540058cd45d799cf966bb21014a2ed0f238b1bc1b09a3c80841fd64736f6c634300080e003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d4f726465722073686f756c642073756363656564207768656e206f72646572207072696365206973206c6f776572207468616e206f6666657254616b65722073686f756c642068617665206265656e20636f6d70656e736174656454616b65722073686f756c64206e6f742067697665206f722074616b6520616e797468696e67496e636f7272656374206465636c61726564207061727469616c2066696c6c20616d6f756e74496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35834f726465722073686f756c64206661696c207768656e206f726465722067617320697320686967686572207468616e206f666665724f726465722073686f756c64206661696c207768656e206f7264657220707269636520697320686967686572207468616e206f66666572496e636f72726563742064656c69766572656420616d6f756e74202874616b657229496e636f72726563742064656c69766572656420616d6f756e7420286d616b65722954616b657220646964206e6f742067657420656e6f75676800000000000000001d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd834366d67762073686f756c64206e6f74206265206c6f636b6564206166746572206d61726b65744f72646572206f6e20656d707479204f42b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b65722974616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636ba26469706673582212202094ed09602483e371704cc3d052a26b30295c8598a5e0b29bb5b11d9dfa702b64736f6c634300080e0033",
    "sourceMapi;7709:411:94:-;;;;;;;;;;-1:-1:-1;7709:411:94;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1066:32:113;;;1048:51;;1036:2;1021:18;7709:411:94;;;;;;;;17949:446:92;;;;;;;;;;;;;:::i;495:798::-;;;;;;;;;;;;;:::i;8384:243:94:-;;;;;;;;;;-1:-1:-1;8384:243:94;;;;;:::i;:::-;;:::i;31297:274:92:-;;;;;;;;;;;;;:::i;15734:589::-;;;;;;;;;;;;;:::i;20657:465::-;;;;;;;;;;;;;:::i;16327:1127::-;;;;;;;;;;;;;:::i;11629:1217::-;;;;;;;;;;;;;:::i;18399:325::-;;;;;;;;;;;;;:::i;780:82:95:-;;;;;;;;;;-1:-1:-1;847:10:95;780:82;;31019:274:92;;;;;;;;;;;;;:::i;30228:380::-;;;;;;;;;;;;;:::i;24645:411::-;;;;;;;;;;;;;:::i;9614:268:94:-;;;;;;;;;;-1:-1:-1;9614:268:94;;;;;:::i;:::-;;:::i;7327:990:92:-;;;;;;;;;;;;;:::i;13217:1254::-;;;;;;;;;;;;;:::i;303:38:1:-;;;;;;;;;;-1:-1:-1;303:38:1;-1:-1:-1;;;;;;;;;;;303:38:1;;9088:552:92;;;;;;;;;;;;;:::i;10641:429::-;;;;;;;;;;;;;:::i;4455:283:95:-;;;;;;;;;;-1:-1:-1;4455:283:95;;;;;:::i;:::-;;:::i;23057:427:92:-;;;;;;;;;;;;;:::i;2519:719::-;;;;;;;;;;;;;:::i;25060:402::-;;;;;;;;;;;;;:::i;10208:132:94:-;;;;;;;;;;-1:-1:-1;10208:132:94;;;;;:::i;:::-;;:::i;:::-;;;5705:25:113;;;5693:2;5678:18;10208:132:94;5559:177:113;27899:506:92;;;;;;;;;;;;;:::i;8321:763::-;;;;;;;;;;;;;:::i;21596:508::-;;;;;;;;;;;;;:::i;25466:540::-;;;;;;;;;;;;;:::i;27352:500::-;;;;;;;;;;;;;:::i;21126:466::-;;;;;;;;;;;;;:::i;11074:551::-;;;;;;;;;;;;;:::i;7570:97:94:-;;;;;;;;;;;;;:::i;6337:986:92:-;;;;;;;;;;;;;:::i;1909:606::-;;;;;;;;;;;;;:::i;10144:493::-;;;;;;;;;;;;;:::i;3242:447::-;;;;;;;;;;;;;:::i;5429:904::-;;;;;;;;;;;;;:::i;26010:807::-;;;;;;;;;;;;;:::i;29643:581::-;;;;;;;;;;;;;:::i;29451:188::-;;;;;;;;;;;;;:::i;24153:488::-;;;;;;;;;;;;;:::i;4169:282:95:-;;;;;;;;;;-1:-1:-1;4169:282:95;;;;;:::i;:::-;;:::i;1610:472:0:-;;;;;;;;;;;;;:::i;:::-;;;6801:14:113;;6794:22;6776:41;;6764:2;6749:18;1610:472:0;6636:187:113;4252:1100:92;;;;;;;;;;;;;:::i;9442:168:94:-;;;;;;;;;;-1:-1:-1;9442:168:94;;;;;:::i;:::-;;:::i;3693:555:92:-;;;;;;;;;;;;;:::i;30750:265::-;;;;;;;;;;;;;:::i;9170:268:94:-;;;;;;;;;;-1:-1:-1;9170:268:94;;;;;:::i;:::-;;:::i;1297:608:92:-;;;;;;;;;;;;;:::i;22108:471::-;;;;;;;;;;;;;:::i;28452:495::-;;;;;;;;;;;;;:::i;9981:169:94:-;;;;;;;;;;-1:-1:-1;9981:169:94;;;;;:::i;:::-;;:::i;12850:363:92:-;;;;;;;;;;;;;:::i;23488:661::-;;;;;;;;;;;;;:::i;30612:134::-;;;;;;;;;;;;;:::i;17458:487::-;;;;;;;;;;;;;:::i;22583:470::-;;;;;;;;;;;;;:::i;19726:927::-;;;;;;;;;;;;;:::i;8157:173:94:-;;;;;;;;;;-1:-1:-1;8157:173:94;;;;;:::i;:::-;;:::i;9644:496:92:-;;;;;;;;;;;;;:::i;18728:994::-;;;;;;;;;;;;;:::i;28951:496::-;;;;;;;;;;;;;:::i;163:28:1:-;;;;;;;;;;-1:-1:-1;163:28:1;;;;;;;;;;;1368:26:0;;;;;;;;;;-1:-1:-1;1368:26:0;;;;;;;;27027:321:92;;;;;;;;;;;;;:::i;14475:1255::-;14591:4;;14555:18;;14576:40;;-1:-1:-1;;;;;14591:4:92;14589:7;14600:5;;-1:-1:-1;;;;;14600:5:92;14608:7;14576:12;:40::i;:::-;14622:5;;14638:3;;14622:30;;-1:-1:-1;;;14622:30:92;;14555:61;;-1:-1:-1;;;;;;14622:5:92;;;;:13;;:30;;14638:3;;14644:7;;14622:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14669:3:92;;:42;;-1:-1:-1;;;14669:42:92;;14682:7;14669:42;;;9355:25:113;;;9396:18;;;9389:34;14700:7:92;9439:18:113;;;9432:34;14658:8:92;9482:18:113;;;9475:34;;;14658:8:92;-1:-1:-1;;;;;14669:3:92;;:12;;9327:19:113;;14669:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14717:3;;:34;;-1:-1:-1;;;14717:34:92;;-1:-1:-1;;;14717:34:92;;;9918:41:113;14658:53:92;;-1:-1:-1;;;;;;14717:3:92;;:10;;9891:18:113;;14717:34:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14792:5:92;;14817:3;;14792:30;;-1:-1:-1;;;14792:30:92;;-1:-1:-1;;;;;14817:3:92;;;14792:30;;;1048:51:113;14792:5:92;;;-1:-1:-1;14792:16:92;;-1:-1:-1;1021:18:113;;14792:30:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14847:5:92;;14828:16;;-1:-1:-1;;;;;;14847:5:92;;-1:-1:-1;14847:15:92;14865:4;14847:24;;-1:-1:-1;;;;;;14847:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;14847:24:92;;;1048:51:113;1021:18;;14847:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14929:3;;14828:43;;-1:-1:-1;14896:4:92;14894:15;;14916:18;;-1:-1:-1;;;;;14929:3:92;14916:10;:18::i;:::-;14980:5;;14965:4;;14946:132;;;10568:25:113;;;15007:4:92;10624:2:113;10609:18;;10602:60;15020:7:92;10678:18:113;;;10671:34;;;10736:2;10721:18;;10714:34;;;;-1:-1:-1;;;10779:3:113;10764:19;;10757:51;-1:-1:-1;;;;;14980:5:92;;;;14965:4;;;;-1:-1:-1;;;;;;;;;;;14946:132:92;10555:3:113;10540:19;14946:132:92;;;;;;;;15138:3;;15158:4;;15085:14;;;;;;-1:-1:-1;;;;;15138:3:92;;;;:10;;15158:4;15173:5;;-1:-1:-1;;;;;15173:5:92;15187:46;;;;;;;;;15201:3;15187:46;;;;15206:7;15187:46;;;;15215:7;15187:46;;;;15224:7;15187:46;;;:12;:46::i;:::-;15241:4;15138:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15084:167;;;;;;;;15257:12;15290:9;15272:7;15274:4;10905:1:94;10815:98;15272:7:92;-1:-1:-1;;;;;15272:15:92;;:27;;;;:::i;:::-;15257:42;;15305:61;15326:1;15316:7;:11;15305:61;;;;;;;;;;;;;;;;;:10;:61::i;:::-;15372:47;15383:9;15396:1;15383:14;15372:47;;;;;;;;;;;;;-1:-1:-1;;;15372:47:92;;;:10;:47::i;:::-;15425:106;15455:9;15443:8;:21;:39;;;;-1:-1:-1;15468:14:92;;15443:39;15425:106;;;;;;;;;;;;;;;;;:10;:106::i;:::-;15570:5;;15537:132;;-1:-1:-1;;;;;15570:5:92;:15;15588:4;15586:7;15570:24;;-1:-1:-1;;;;;;15570:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;15570:24:92;;;1048:51:113;1021:18;;15570:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15555:11;:39;15537:132;;;;;;;;;;;;;;;;;:10;:132::i;:::-;15695:3;;-1:-1:-1;;;;;15695:3:92;15680:45;15701:23;15717:7;15701:13;:23;:::i;:::-;15680:45;;5705:25:113;;;5693:2;5678:18;15680:45:92;;;;;;;14549:1181;;;;;;;;14475:1255::o;7709:411:94:-;7763:21;7796:8;7792:272;;;7866:4;7891:2;7911:9;7821:108;;;;;:::i;:::-;-1:-1:-1;;;;;13182:32:113;;;13164:51;;13246:2;13231:18;;13224:34;;;;13289:2;13274:18;;13267:34;13152:2;13137:18;7821:108:94;;;;;;;;;;;;;;;;;;;;;;;7814:115;;7792:272;;;7994:4;8019:2;8039:9;7957:100;;;;;:::i;:::-;-1:-1:-1;;;;;13182:32:113;;;13164:51;;13246:2;13231:18;;13224:34;;;;13289:2;13274:18;;13267:34;13152:2;13137:18;7957:100:94;;;;;;;;;;;;;;;;;;;;;;;7950:107;;7792:272;-1:-1:-1;;;;;;;;;;;8069:8:94;8080:4;8069:29;;;-1:-1:-1;;;;;;8069:29:94;;;;;;;-1:-1:-1;;;;;13550:32:113;;;8069:29:94;;;13532:51:113;13599:18;;;13592:30;13658:1;13638:18;;;13631:29;-1:-1:-1;;;13676:18:113;;;13669:38;13724:19;;8069:29:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7709:411;;;:::o;17949:446:92:-;18042:4;;18026:13;;-1:-1:-1;;;;;18042:4:92;:14;18059:4;18057:7;18042:23;;-1:-1:-1;;;;;;18042:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;18042:23:92;;;1048:51:113;1021:18;;18042:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18082:3;;:41;;-1:-1:-1;;;18082:41:92;;18095:7;18082:41;;;9355:25:113;;;9396:18;;;9389:34;18113:6:92;9439:18:113;;;9432:34;18071:8:92;9482:18:113;;;9475:34;;;18026:39:92;;-1:-1:-1;;;;;;18082:3:92;;;;:12;;9327:19:113;;18082:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18129:5;;18145:3;;18129:30;;-1:-1:-1;;;18129:30:92;;18071:52;;-1:-1:-1;;;;;;18129:5:92;;;;:13;;:30;;18145:3;;18151:7;;18129:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18165:3:92;;18185:4;;-1:-1:-1;;;;;18165:3:92;;;;:10;;18185:4;18200:5;;-1:-1:-1;;;;;18200:5:92;18214:45;;;;;;;;;18228:3;18214:45;;;;18233:7;18214:45;;;;18242:7;18214:45;;;;18251:6;18214:45;;;:12;:45::i;:::-;18267:4;18165:112;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;18299:4:92;;18283:107;;-1:-1:-1;18325:8:92;;-1:-1:-1;;;;;;18299:4:92;;-1:-1:-1;18299:14:92;18316:4;18299:23;;-1:-1:-1;;;;;;18299:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;18299:23:92;;;1048:51:113;1021:18;;18299:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;18341:7;18283:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;18020:375;;17949:446::o;495:798::-;534:13;:11;:13::i;:::-;577:4;;592:3;;577:23;;-1:-1:-1;;;577:23:92;;-1:-1:-1;;;;;577:4:92;;;;:12;;:23;;592:3;;;598:1;;577:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;606:5:92;;622:3;;606:24;;-1:-1:-1;;;606:24:92;;-1:-1:-1;;;;;606:5:92;;;;:13;;:24;;622:3;;;628:1;;606:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;656:4:92;;643:38;;-1:-1:-1;;;;;656:4:92;665:5;;-1:-1:-1;;;;;665:5:92;643:38;;;;;;;;;;;;;-1:-1:-1;;;643:38:92;;;:10;:38::i;:::-;637:3;:44;;-1:-1:-1;;;;;;637:44:92;-1:-1:-1;;;;;637:44:92;;;;;;712:4;;699:45;;712:4;721:5;;-1:-1:-1;;;;;721:5:92;699:45;;;;;;;;;;;;;-1:-1:-1;;;699:45:92;;;:10;:45::i;:::-;687:9;:57;;-1:-1:-1;;;;;;687:57:92;-1:-1:-1;;;;;687:57:92;;;;;;;;;750:26;;-1:-1:-1;;;750:26:92;;-1:-1:-1;750:26:92;;;6776:41:113;750:20:92;;6749:18:113;;750:26:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;805:4:92;;792:46;;-1:-1:-1;;;;;;805:4:92;;-1:-1:-1;814:5:92;;-1:-1:-1;;;;;814:5:92;792:46;;;;;;;;;;;;;-1:-1:-1;;;792:46:92;;;:10;:46::i;:::-;782:7;:56;;-1:-1:-1;;;;;;782:56:92;-1:-1:-1;;;;;782:56:92;;;;;;;;;844:26;;-1:-1:-1;;;;;;844:26:92;;-1:-1:-1;844:26:92;;;6776:41:113;844:20:92;;6749:18:113;;844:26:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;877:3:92;;:26;;-1:-1:-1;;;877:26:92;;894:8;877:26;;;5705:25:113;-1:-1:-1;;;;;877:3:92;;;;-1:-1:-1;877:16:92;;-1:-1:-1;5678:18:113;;877:26:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:3:92;;924:4;;909:30;;-1:-1:-1;;;909:30:92;;-1:-1:-1;;;;;909:3:92;;;;-1:-1:-1;909:14:92;;-1:-1:-1;909:30:92;;924:4;;;;930:8;;909:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;946:9:92;;:31;;-1:-1:-1;;;946:31:92;;969:7;946:31;;;5705:25:113;-1:-1:-1;;;;;946:9:92;;;;-1:-1:-1;946:22:92;;-1:-1:-1;5678:18:113;;946:31:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:9:92;;1004:4;;983:36;;-1:-1:-1;;;983:36:92;;-1:-1:-1;;;;;983:9:92;;;;-1:-1:-1;983:20:92;;-1:-1:-1;983:36:92;;1004:4;;;;1010:8;;983:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1025:7:92;;:29;;-1:-1:-1;;;1025:29:92;;1046:7;1025:29;;;5705:25:113;-1:-1:-1;;;;;1025:7:92;;;;-1:-1:-1;1025:20:92;;-1:-1:-1;5678:18:113;;1025:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1060:7:92;;1079:4;;1060:34;;-1:-1:-1;;;1060:34:92;;-1:-1:-1;;;;;1060:7:92;;;;-1:-1:-1;1060:18:92;;-1:-1:-1;1060:34:92;;1079:4;;;;1085:8;;1060:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1101:4:92;;1119:3;;1101:32;;-1:-1:-1;;;1101:32:92;;-1:-1:-1;;;;;1101:4:92;;;;-1:-1:-1;1101:9:92;;-1:-1:-1;1101:32:92;;1119:3;;;;1125:7;;1101:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1139:4:92;;1157:7;;1139:36;;-1:-1:-1;;;1139:36:92;;-1:-1:-1;;;;;1139:4:92;;;;-1:-1:-1;1139:9:92;;-1:-1:-1;1139:36:92;;1157:7;;;;1167;;1139:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1181:4:92;;1199:9;;1181:38;;-1:-1:-1;;;1181:38:92;;-1:-1:-1;;;;;1181:4:92;;;;-1:-1:-1;1181:9:92;;-1:-1:-1;1181:38:92;;1199:9;;;;1211:7;;1181:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1226:5:92;;:28;;-1:-1:-1;;;1226:28:92;;-1:-1:-1;;;;;1226:5:92;;;;-1:-1:-1;1226:10:92;;-1:-1:-1;1226:28:92;;1239:4;;1246:7;;1226:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1260:5:92;;:28;;-1:-1:-1;;;1260:28:92;;-1:-1:-1;;;;;1260:5:92;;;;-1:-1:-1;1260:10:92;;-1:-1:-1;1260:28:92;;1273:4;;1280:7;;1260:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:798::o;8384:243:94:-;8495:21;8531:23;8545:8;8531:13;:23::i;:::-;8524:30;;8560:62;8580:12;8603:11;8617:4;8560:11;:62::i;:::-;8384:243;;;;;:::o;31297:274:92:-;31382:3;;31407:4;;31355:8;;;;-1:-1:-1;;;;;31382:3:92;;;;:15;;31407:4;31422:5;;-1:-1:-1;;;;;31422:5:92;31436:7;31451:1;31460:4;31382:88;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31354:116;;;;;;31476:38;31485:3;31490:1;31476:38;;;;;;;;;;;;;-1:-1:-1;;;31476:38:92;;;:8;:38::i;:::-;31520:46;31529:4;31535:7;31520:46;;;;;;;;;;;;;-1:-1:-1;;;31520:46:92;;;:8;:46::i;15734:589::-;15792:5;;15808:3;;15792:30;;-1:-1:-1;;;15792:30:92;;-1:-1:-1;;;;;15792:5:92;;;;:13;;:30;;15808:3;;;15814:7;;15792:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15839:7:92;;:45;;-1:-1:-1;;;15839:45:92;;15856:7;15839:45;;;9355:25:113;;;9396:18;;;9389:34;15874:6:92;9439:18:113;;;9432:34;15828:8:92;9482:18:113;;;9475:34;;;15828:8:92;-1:-1:-1;;;;;15839:7:92;;:16;;9327:19:113;;15839:45:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15828:56;-1:-1:-1;15890:14:92;15909:4;15983:3;;16003:4;;-1:-1:-1;;;;;15907:15:92;;;;;-1:-1:-1;15930:14:92;;;;;;15983:3;;;;:10;;16003:4;16018:5;;-1:-1:-1;;;;;16018:5:92;16032:34;;;;;;;;;16046:3;16032:34;;;;16051:1;16032:34;;;;16054:1;16032:34;;;;16057:7;16032:34;;;:12;:34::i;:::-;16074:4;15983:101;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15929:155;;;;;;;;16090:47;16101:9;16114:1;16101:14;16090:47;;;;;;;;;;;;;-1:-1:-1;;;16090:47:92;;;:10;:47::i;:::-;16143:101;16173:9;16161:8;:21;:39;;;;-1:-1:-1;16186:14:92;;16161:39;16143:101;;;;;;;;;;;;;;;;;:10;:101::i;:::-;16250:68;16279:9;16263:4;-1:-1:-1;;;;;16261:15:92;;:27;16250:68;;;;;;;;;;;;;;;;;:10;:68::i;:::-;15786:537;;;;;15734:589::o;20657:465::-;20703:3;;:41;;-1:-1:-1;;;20703:41:92;;20716:7;20703:41;;;9355:25:113;;;9396:18;;;9389:34;20734:6:92;9439:18:113;;;9432:34;20703:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;20703:3:92;;;;:12;;9327:19:113;;20703:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20750:3:92;;:30;;-1:-1:-1;;;20750:30:92;;-1:-1:-1;;;;;20750:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20786:5:92;;20802:3;;20786:31;;-1:-1:-1;;;20786:31:92;;-1:-1:-1;;;;;20786:5:92;;;;-1:-1:-1;20786:13:92;;-1:-1:-1;20786:31:92;;20802:3;;;;20808:8;;20786:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20862:3:92;;20887:4;;20825:13;;;;-1:-1:-1;;;;;20862:3:92;;;;:15;;20887:4;20902:5;;-1:-1:-1;;;;;20902:5:92;20916:7;20931;20946:4;20862:94;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20824:132;;;;;;20962:74;20971:8;20981:7;20962:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;21042:75;21051:9;21062:7;21042:75;;;;;;;;;;;;;;;;;:8;:75::i;16327:1127::-;16426:4;;16390:18;;16411:39;;-1:-1:-1;;;;;16426:4:92;16435:5;;-1:-1:-1;;;;;16435:5:92;16443:6;16411:12;:39::i;:::-;16456:5;;16472:3;;16456:30;;-1:-1:-1;;;16456:30:92;;16390:60;;-1:-1:-1;;;;;;16456:5:92;;;;:13;;:30;;16472:3;;16478:7;;16456:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16503:7:92;;:45;;-1:-1:-1;;;16503:45:92;;16520:7;16503:45;;;9355:25:113;;;9396:18;;;9389:34;16538:6:92;9439:18:113;;;9432:34;16492:8:92;9482:18:113;;;9475:34;;;16492:8:92;-1:-1:-1;;;;;16503:7:92;;:16;;9327:19:113;;16503:45:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16573:5;;16492:56;;-1:-1:-1;16554:16:92;;-1:-1:-1;;;;;16573:5:92;:15;16591:4;16573:24;;-1:-1:-1;;;;;;16573:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;16573:24:92;;;1048:51:113;1021:18;;16573:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16655:3;;16554:43;;-1:-1:-1;16622:4:92;16620:15;;16642:18;;-1:-1:-1;;;;;16655:3:92;14916:10;:18::i;16642:::-;16705:5;;-1:-1:-1;;;;;16705:5:92;16690:4;;-1:-1:-1;;;;;16671:127:92;;;;16690:4;-1:-1:-1;;;;;16671:127:92;-1:-1:-1;;;;;;;;;;;16719:3:92;16732:4;16745:7;16760;16671:127;;;;;;;;;:::i;:::-;;;;;;;;16858:3;;16878:4;;16805:14;;;;;;-1:-1:-1;;;;;16858:3:92;;;;:10;;16878:4;16893:5;;-1:-1:-1;;;;;16893:5:92;16907:46;;;;;;;;;16921:3;16907:46;;;;16926:7;16907:46;;;;16935:7;16907:46;;;;16944:7;16907:46;;;:12;:46::i;:::-;16961:4;16858:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16804:167;;;;;;;;16977:12;17010:9;16992:7;16994:4;10905:1:94;10815:98;16992:7:92;-1:-1:-1;;;;;16992:15:92;;:27;;;;:::i;:::-;16977:42;;17025:61;17046:1;17036:7;:11;17025:61;;;;;;;;;;;;;;;;;:10;:61::i;:::-;17092:47;17103:9;17116:1;17103:14;17092:47;;;;;;;;;;;;;-1:-1:-1;;;17092:47:92;;;:10;:47::i;:::-;17145:106;17175:9;17163:8;:21;:39;;;;-1:-1:-1;17188:14:92;;17145:106;;;;;;;;;;;;;;;;;:10;:106::i;:::-;17290:5;;17257:132;;-1:-1:-1;;;;;17290:5:92;:15;17308:4;17306:7;10815:98:94;17257:132:92;17415:7;;-1:-1:-1;;;;;17415:7:92;17400:49;17425:23;17441:7;17425:13;:23;:::i;11629:1217::-;11731:4;;11695:18;;11716:40;;-1:-1:-1;;;;;11731:4:92;11729:7;10815:98:94;11716:40:92;11762:5;;11778:3;;11762:30;;-1:-1:-1;;;11762:30:92;;11695:61;;-1:-1:-1;;;;;;11762:5:92;;;;:13;;:30;;11778:3;;11784:7;;11762:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11809:9:92;;:48;;-1:-1:-1;;;11809:48:92;;11828:7;11809:48;;;9355:25:113;;;9396:18;;;9389:34;11846:7:92;9439:18:113;;;9432:34;11798:8:92;9482:18:113;;;9475:34;;;11798:8:92;-1:-1:-1;;;;;11809:9:92;;:18;;9327:19:113;;11809:48:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11863:3;;:35;;-1:-1:-1;;;11863:35:92;;-1:-1:-1;;;11863:35:92;;;19312:42:113;11798:59:92;;-1:-1:-1;;;;;;11863:3:92;;:10;;19285:18:113;;11863:35:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11957:5:92;;11938:16;;-1:-1:-1;;;;;;11957:5:92;;-1:-1:-1;11957:15:92;11975:4;11957:24;;-1:-1:-1;;;;;;11957:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;11957:24:92;;;1048:51:113;1021:18;;11957:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12039:3;;11938:43;;-1:-1:-1;12006:4:92;12004:15;;12026:18;;-1:-1:-1;;;;;12039:3:92;14916:10;:18::i;12026:::-;12089:5;;-1:-1:-1;;;;;12089:5:92;12074:4;;-1:-1:-1;;;;;12055:133:92;;;;12074:4;-1:-1:-1;;;;;12055:133:92;-1:-1:-1;;;;;;;;;;;12103:3:92;12116:4;12129:7;12144;12055:133;;;;;;;;;:::i;:::-;;;;;;;;12248:3;;12268:4;;12195:14;;;;;;-1:-1:-1;;;;;12248:3:92;;;;:10;;12268:4;12283:5;;-1:-1:-1;;;;;12283:5:92;12297:46;;;;;;;;;12311:3;12297:46;;;;12316:7;12297:46;;;;12325:7;12297:46;;;;12334:7;12297:46;;;:12;:46::i;:::-;12351:4;12248:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12194:167;;;;;;;;12367:12;12400:9;12382:7;12384:4;10905:1:94;10815:98;12382:7:92;-1:-1:-1;;;;;12382:15:92;;:27;;;;:::i;:::-;12367:42;;12415:61;12436:1;12426:7;:11;12415:61;;;;;;;;;;;;;;;;;:10;:61::i;:::-;12482:47;12493:9;12506:1;12493:14;12482:47;;;;;;;;;;;;;-1:-1:-1;;;12482:47:92;;;:10;:47::i;:::-;12535:106;12565:9;12553:8;:21;:39;;;;-1:-1:-1;12578:14:92;;12535:106;;;;;;;;;;;;;;;;;:10;:106::i;:::-;12680:5;;12647:132;;-1:-1:-1;;;;;12680:5:92;:15;12698:4;12696:7;10815:98:94;12647:132:92;12805:9;;-1:-1:-1;;;;;12805:9:92;12790:51;12817:23;12833:7;12817:13;:23;:::i;18399:325::-;18478:3;;:41;;-1:-1:-1;;;18478:41:92;;18491:7;18478:41;;;9355:25:113;;;9396:18;;;9389:34;18509:6:92;9439:18:113;;;9432:34;18467:8:92;9482:18:113;;;9475:34;;;18467:8:92;-1:-1:-1;;;;;18478:3:92;;:12;;9327:19:113;;18478:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18525:4;;18540:3;;18525:29;;-1:-1:-1;;;18525:29:92;;18467:52;;-1:-1:-1;;;;;;18525:4:92;;;;:12;;:29;;18540:3;;18546:7;;18525:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18561:40:92;;-1:-1:-1;;;18561:40:92;;-1:-1:-1;;;;;;;;;;;237:61:1;18561:15:92;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18607:3:92;;18627:4;;-1:-1:-1;;;;;18607:3:92;;;;-1:-1:-1;18607:10:92;;-1:-1:-1;18627:4:92;18625:7;18642:5;;-1:-1:-1;;;;;18642:5:92;18656:45;;;;;;;;;18670:3;18656:45;;;;18675:7;18656:45;;;;18684:7;18656:45;;;;18693:6;18656:45;;;:12;:45::i;:::-;18709:4;18607:112;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;18461:263;18399:325::o;31019:274::-;31104:3;;31129:4;;31077:8;;;;-1:-1:-1;;;;;31104:3:92;;;;:15;;31129:4;31144:5;;-1:-1:-1;;;;;31144:5:92;31158:1;31167:7;31182:4;31104:88;;;;;;;;;;;;;;;;;;;:::i;30228:380::-;30285:3;;30302:4;;30311:5;;30285:36;;-1:-1:-1;;;30285:36:92;;-1:-1:-1;;;;;30285:3:92;;;;:14;;:36;;30302:4;;;;30311:5;;;30319:1;;30285:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30327:5:92;;30343:3;;30327:30;;-1:-1:-1;;;30327:30:92;;-1:-1:-1;;;;;30327:5:92;;;;-1:-1:-1;30327:13:92;;-1:-1:-1;30327:30:92;;30343:3;;;;30349:7;;30327:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;30374:3:92;;:42;;-1:-1:-1;;;30374:42:92;;30387:7;30374:42;;;9355:25:113;;;9396:18;;;9389:34;30405:7:92;9439:18:113;;;9432:34;30363:8:92;9482:18:113;;;9475:34;;;30363:8:92;-1:-1:-1;;;;;30374:3:92;;:12;;9327:19:113;;30374:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30422:48;;-1:-1:-1;;;30422:48:92;;22006:2:113;30422:48:92;;;21988:21:113;22045:2;22025:18;;;22018:30;22084:31;22064:18;;;22057:59;30363:53:92;;-1:-1:-1;;;;;;;;;;;;237:61:1;30422:15:92;;22133:18:113;;30422:48:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30476:3:92;;30510:4;;-1:-1:-1;;;;;30476:3:92;;;;-1:-1:-1;30476:10:92;;-1:-1:-1;30492:7:92;;30510:4;30525:5;;-1:-1:-1;;;;;30525:5:92;30539:46;;;;;;;;;30553:3;30539:46;;;;30558:7;30539:46;;;;30567:7;30539:46;;;;30576:7;30539:46;;;:12;:46::i;:::-;30593:4;30476:127;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;24645:411::-;24713:3;;:42;;-1:-1:-1;;;24713:42:92;;24726:7;24713:42;;;9355:25:113;;;9396:18;;;9389:34;24744:7:92;9439:18:113;;;9432:34;24702:8:92;9482:18:113;;;9475:34;;;24702:8:92;-1:-1:-1;;;;;24713:3:92;;:12;;9327:19:113;;24713:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24761:5;;24777:3;;24761:32;;-1:-1:-1;;;24761:32:92;;24702:53;;-1:-1:-1;;;;;;24761:5:92;;;;:13;;:32;;24777:3;;24783:9;;24761:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;24827:3:92;;24847:4;;24801:14;;-1:-1:-1;;;;;24827:3:92;;;;:10;;24847:4;24862:5;;-1:-1:-1;;;;;24862:5:92;24876:48;;;;;;;;;24890:3;24876:48;;;;24895:7;24876:48;;;;24904:9;24876:48;;;;24915:7;24876:48;;;:12;:48::i;:::-;24932:4;24827:115;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24800:142;;;;;;24948:103;24966:9;24979:1;24966:14;24948:103;;;;;;;;;;;;;;;;;:10;:103::i;9614:268:94:-;9714:9;9731:12;9760:3;;;;;;;;;-1:-1:-1;;;;;9760:3:94;9772:4;9786:3;9746:45;;;;;:::i;:::-;-1:-1:-1;;;;;22798:15:113;;;22780:34;;22850:15;;;22845:2;22830:18;;22823:43;22902:15;;;22897:2;22882:18;;22875:43;22730:2;22715:18;9746:45:94;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9797:31:94;;-1:-1:-1;;;9797:31:94;;9731:60;;-1:-1:-1;;;;;;;;;;;;237:61:1;9797:7:94;;:31;;9731:60;;9818:9;;9797:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9834:28:94;;-1:-1:-1;;;9834:28:94;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;9834:8:94;;-1:-1:-1;9834:28:94;;9851:2;;9856:5;;9834:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9875:2:94;;9614:268;-1:-1:-1;;;;;;;9614:268:94:o;7327:990:92:-;7408:3;;:36;;-1:-1:-1;;;7408:36:92;;7397:8;7408:36;;;9355:25:113;;;7424:7:92;9396:18:113;;;9389:34;7433:7:92;9439:18:113;;;9432:34;9482:18;;;9475:34;;;7397:8:92;-1:-1:-1;;;;;7408:3:92;;:12;;9327:19:113;;7408:36:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7468:3;;7492:4;;7397:47;;-1:-1:-1;7450:107:92;;-1:-1:-1;;;;;7468:3:92;;;;:10;;:3;;7479:10;;7492:4;7490:7;7501:5;;-1:-1:-1;;;;;7501:5:92;7509:3;7479:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7468:46;;;;;;;;;;;;;5705:25:113;;5693:2;5678:18;;5559:177;7468:46:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7450:107;;;;;;;;;;;;;;;;;:10;:107::i;:::-;7563:3;;:30;;-1:-1:-1;;;7563:30:92;;-1:-1:-1;;;;;7563:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7639:5:92;;7655:3;;7639:30;;-1:-1:-1;;;7639:30:92;;-1:-1:-1;;;;;7639:5:92;;;;-1:-1:-1;7639:13:92;;-1:-1:-1;7639:30:92;;7655:3;;;;7661:7;;7639:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7931:3:92;;7951:4;;7888:14;;;;;;-1:-1:-1;;;;;7931:3:92;;;;:10;;7951:4;7966:5;;-1:-1:-1;;;;;7966:5:92;7980:42;;;;;;;;;7994:3;7980:42;;;;7999:9;7980:42;;;;8010:1;7980:42;;;;8013:7;7980:42;;;:12;:42::i;:::-;8030:5;7931:110;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7887:154;;;;;;;;8047:51;8058:9;8071:1;8058:14;8047:51;;;;;;;;;;;;;-1:-1:-1;;;8047:51:92;;;:10;:51::i;:::-;8104:41;8113:3;8118:7;8104:41;;;;;;;;;;;;;-1:-1:-1;;;8104:41:92;;;:8;:41::i;:::-;8151:43;8160:4;8166:7;8151:43;;;;;;;;;;;;;-1:-1:-1;;;8151:43:92;;;:8;:43::i;:::-;8219:3;;8243:4;;8252:5;;8230:34;;-1:-1:-1;;;8230:34:92;;8200:112;;-1:-1:-1;;;;;8219:3:92;;;;:10;;:3;;8230:10;;:34;;8243:4;;;8252:5;;8260:3;;8230:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8219:46;;;;;;;;;;;;;5705:25:113;;5693:2;5678:18;;5559:177;8219:46:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8218:47;8200:112;;;;;;;;;;;;;;;;;:10;:112::i;13217:1254::-;13332:4;;13296:18;;13317:40;;-1:-1:-1;;;;;13332:4:92;13330:7;10815:98:94;13317:40:92;13363:5;;13379:3;;13363:30;;-1:-1:-1;;;13363:30:92;;13296:61;;-1:-1:-1;;;;;;13363:5:92;;;;:13;;:30;;13379:3;;13385:7;;13363:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13410:3:92;;:42;;-1:-1:-1;;;13410:42:92;;13423:7;13410:42;;;9355:25:113;;;9396:18;;;9389:34;13441:7:92;9439:18:113;;;9432:34;13399:8:92;9482:18:113;;;9475:34;;;13399:8:92;-1:-1:-1;;;;;13410:3:92;;:12;;9327:19:113;;13410:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13458:3;;:35;;-1:-1:-1;;;13458:35:92;;-1:-1:-1;;;13458:35:92;;;19312:42:113;13399:53:92;;-1:-1:-1;;;;;;13458:3:92;;:10;;19285:18:113;;13458:35:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13534:4:92;;13558:3;;13534:29;;-1:-1:-1;;;13534:29:92;;-1:-1:-1;;;;;13558:3:92;;;13534:29;;;1048:51:113;13534:4:92;;;-1:-1:-1;13534:15:92;;-1:-1:-1;1021:18:113;;13534:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13588:5:92;;13569:16;;-1:-1:-1;;;;;;13588:5:92;;-1:-1:-1;13588:15:92;13606:4;13588:24;;-1:-1:-1;;;;;;13588:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;13588:24:92;;;1048:51:113;1021:18;;13588:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13670:3;;13569:43;;-1:-1:-1;13637:4:92;13635:15;;13657:18;;-1:-1:-1;;;;;13670:3:92;14916:10;:18::i;13657:::-;13720:5;;-1:-1:-1;;;;;13720:5:92;13705:4;;-1:-1:-1;;;;;13686:133:92;;;;13705:4;-1:-1:-1;;;;;13686:133:92;-1:-1:-1;;;;;;;;;;;13734:3:92;13747:4;13760:7;13775;13686:133;;;;;;;;;:::i;9088:552::-;9144:3;;:42;;-1:-1:-1;;;9144:42:92;;9157:7;9144:42;;;9355:25:113;;;9396:18;;;9389:34;9175:7:92;9439:18:113;;;9432:34;9133:8:92;9482:18:113;;;9475:34;;;9133:8:92;-1:-1:-1;;;;;9144:3:92;;:12;;9327:19:113;;9144:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9192:3;;:30;;-1:-1:-1;;;9192:30:92;;9133:53;;-1:-1:-1;;;;;;9192:3:92;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9268:5:92;;9284:3;;9268:30;;-1:-1:-1;;;9268:30:92;;-1:-1:-1;;;;;9268:5:92;;;;-1:-1:-1;9268:13:92;;-1:-1:-1;9268:30:92;;9284:3;;;;9290:7;;9268:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9349:3:92;;9369:4;;9306:14;;;;;;-1:-1:-1;;;;;9349:3:92;;;;:10;;9369:4;9384:5;;-1:-1:-1;;;;;9384:5:92;9398:48;;;;;;;;;9412:3;9398:48;;;;9417:9;9398:48;;;;9428:7;9398:48;;;;9437:7;9398:48;;;:12;:48::i;:::-;9454:5;9349:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9305:160;;;;;;;;9471:51;9482:9;9495:1;9482:14;9471:51;;;;;;;;;;;;;-1:-1:-1;;;9471:51:92;;;:10;:51::i;:::-;9528:50;9537:3;9542:7;9528:50;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9528:50:92;;;:8;:50::i;:::-;9584:51;9593:4;9599:7;9584:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9584:51:92;;;:8;:51::i;10641:429::-;10704:3;;:42;;-1:-1:-1;;;10704:42:92;;10717:7;10704:42;;;9355:25:113;;;9396:18;;;9389:34;10735:7:92;9439:18:113;;;9432:34;10704:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;10704:3:92;;;;:12;;9327:19:113;;10704:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10752:3:92;;:42;;-1:-1:-1;;;10752:42:92;;10765:7;10752:42;;;9355:25:113;;;9396:18;;;9389:34;10783:7:92;9439:18:113;;;9432:34;10752:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;10752:3:92;;;;:12;;9327:19:113;;10752:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10800:3:92;;:42;;-1:-1:-1;;;10800:42:92;;10813:7;10800:42;;;9355:25:113;;;9396:18;;;9389:34;10831:7:92;9439:18:113;;;9432:34;10800:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;10800:3:92;;;;:12;;9327:19:113;;10800:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10848:3:92;;:30;;-1:-1:-1;;;10848:30:92;;-1:-1:-1;;;;;10848:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10924:5:92;;10940:3;;10924:30;;-1:-1:-1;;;10924:30:92;;-1:-1:-1;;;;;10924:5:92;;;;-1:-1:-1;10924:13:92;;-1:-1:-1;10924:30:92;;10940:3;;;;10946:7;;10924:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10960:40:92;;-1:-1:-1;;;10960:40:92;;-1:-1:-1;;;;;;;;;;;237:61:1;10960:15:92;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11006:3:92;;11024:4;;-1:-1:-1;;;;;11006:3:92;;;;-1:-1:-1;11006:15:92;;-1:-1:-1;11024:4:92;11033:5;;-1:-1:-1;;;;;11033:5:92;11041:7;11050;11059:5;11006:59;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4455:283:95:-;4508:20;;;;;;;;;:15;:20;;;4534:179;4555:4;:11;4551:1;:15;4534:179;;;4619:7;;4599:1;;-1:-1:-1;;;;;;;;;;;237:61:1;4602:11:95;;4619:4;;4624:1;;4619:7;;;;;;:::i;:::-;;;;;;;4602:26;;;;;;;;;;;;;5705:25:113;;5693:2;5678:18;;5559:177;4602:26:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4602:26:95;;;;;;;;;;;;:::i;:::-;4585:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4581:48;;4659:1;4645:4;:11;:15;;;;:::i;:::-;4641:1;:19;4637:70;;;4690:1;4676:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;4672:26;;4637:70;4568:3;;;;:::i;:::-;;;;4534:179;;;;4718:15;4731:1;4718:12;:15::i;23057:427:92:-;23128:3;;:43;;-1:-1:-1;;;23128:43:92;;23141:9;23128:43;;;9355:25:113;23152:7:92;9396:18:113;;;9389:34;23161:6:92;9439:18:113;;;9432:34;23117:8:92;9482:18:113;;;9475:34;;;23117:8:92;-1:-1:-1;;;;;23128:3:92;;:12;;9327:19:113;;23128:43:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23177:3;;:30;;-1:-1:-1;;;23177:30:92;;23117:54;;-1:-1:-1;;;;;;23177:3:92;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23214:5:92;;23230:3;;23214:32;;-1:-1:-1;;;23214:32:92;;-1:-1:-1;;;;;23214:5:92;;;;-1:-1:-1;23214:13:92;;-1:-1:-1;23214:32:92;;23230:3;;;;23236:9;;23214:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23252:4:92;;23267:3;;23252:29;;-1:-1:-1;;;23252:29:92;;-1:-1:-1;;;;;23252:4:92;;;;:12;;:29;;23267:3;;;23273:7;;23252:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23318:40:92;;-1:-1:-1;;;23318:40:92;;-1:-1:-1;;;;;;;;;;;237:61:1;23318:15:92;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23364:3:92;;23384:4;;-1:-1:-1;;;;;23364:3:92;;;;-1:-1:-1;23364:10:92;;-1:-1:-1;23384:4:92;23399:5;;-1:-1:-1;;;;;23399:5:92;23413:48;;;;;;;;;23427:3;23413:48;;;;23432:7;23413:48;;;;23441:9;23413:48;;;;23452:7;23413:48;;;:12;:48::i;2519:719::-;2605:3;;2581:21;;-1:-1:-1;;;;;2605:3:92;:13;2621:4;2605:22;;-1:-1:-1;;;;;;2605:22:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;2605:22:92;;;1048:51:113;1021:18;;2605:22:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2644:3;;:42;;-1:-1:-1;;;2644:42:92;;2657:7;2644:42;;;9355:25:113;;;9396:18;;;9389:34;2675:7:92;9439:18:113;;;9432:34;2633:8:92;9482:18:113;;;9475:34;;;2581:46:92;;-1:-1:-1;;;;;;2644:3:92;;;;:12;;9327:19:113;;2644:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2692:3;;:30;;-1:-1:-1;;;2692:30:92;;2633:53;;-1:-1:-1;;;;;;2692:3:92;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2768:5:92;;2784:3;;2768:30;;-1:-1:-1;;;2768:30:92;;-1:-1:-1;;;;;2768:5:92;;;;-1:-1:-1;2768:13:92;;-1:-1:-1;2768:30:92;;2784:3;;;;2790:7;;2768:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2848:3:92;;2868:4;;2805:14;;;;;;-1:-1:-1;;;;;2848:3:92;;;;:10;;2868:4;2883:5;;-1:-1:-1;;;;;2883:5:92;2897:48;;;;;;;;;2911:3;2897:48;;;;2916:7;2897:48;;;;2925:9;2897:48;;;;2936:7;2897:48;;;:12;:48::i;:::-;2953:5;2848:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2804:160;;;;;;;;2970:47;2981:9;2994:1;2981:14;2970:47;;;;;;;;;;;;;-1:-1:-1;;;2970:47:92;;;:10;:47::i;:::-;3063:3;;3023:106;;3039:16;;-1:-1:-1;;;;;3063:3:92;:13;3079:4;3077:7;3063:22;;-1:-1:-1;;;;;;3063:22:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;3063:22:92;;;1048:51:113;1021:18;;3063:22:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3023:106;;;;;;;;;;;;;;;;;:8;:106::i;:::-;3135:98;3161:4;3154:3;:11;:24;;;;-1:-1:-1;3169:9:92;;3154:24;3135:98;;;;;;;;;;;;;;;;;:10;:98::i;25060:402::-;25126:3;;:42;;-1:-1:-1;;;25126:42:92;;25139:7;25126:42;;;9355:25:113;;;9396:18;;;9389:34;25157:7:92;9439:18:113;;;9432:34;25115:8:92;9482:18:113;;;9475:34;;;25115:8:92;-1:-1:-1;;;;;25126:3:92;;:12;;9327:19:113;;25126:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25174:5;;25190:3;;25174:30;;-1:-1:-1;;;25174:30:92;;25115:53;;-1:-1:-1;;;;;;25174:5:92;;;;:13;;:30;;25190:3;;25196:7;;25174:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;25238:3:92;;25258:4;;25212:14;;-1:-1:-1;;;;;25238:3:92;;;;:10;;25258:4;25273:5;;-1:-1:-1;;;;;25273:5:92;25287:45;;;;;;;;;25301:3;25287:45;;;;25306:7;25287:45;;;;25315:7;25287:45;;;;25324:6;25287:45;;;:12;:45::i;:::-;25340:4;25238:112;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25211:139;;;;;;25356:101;25374:9;25387:1;25374:14;25356:101;;;;;;;;;;;;;;;;;:10;:101::i;10208:132:94:-;10289:4;10326:9;10330:5;10326:2;:9;:::i;:::-;10308:15;10313:1;10316:6;10308:4;:15::i;:::-;:27;;;;:::i;:::-;10301:34;10208:132;-1:-1:-1;;;;10208:132:94:o;27899:506:92:-;27962:5;;27978:3;;27962:30;;-1:-1:-1;;;27962:30:92;;-1:-1:-1;;;;;27962:5:92;;;;:13;;:30;;27978:3;;;27984:7;;27962:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;28003:6;27998:102;28019:2;28015:1;:6;27998:102;;;28036:3;;-1:-1:-1;;;;;28036:3:92;:12;28050:5;:1;28036:3;28050:5;:::i;:::-;28049:21;;28060:9;28049:21;:::i;:::-;28036:57;;-1:-1:-1;;;;;;28036:57:92;;;;;;;;;;9355:25:113;;;;28072:9:92;9396:18:113;;;9389:34;28083:6:92;9439:18:113;;;9432:34;9482:18;;;9475:34;;;9327:19;;28036:57:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28023:3:92;;;;:::i;:::-;;;;27998:102;;;-1:-1:-1;28105:3:92;;:30;;-1:-1:-1;;;28105:30:92;;-1:-1:-1;;;;;28105:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28286:3:92;;28325:4;;28202:27;;-1:-1:-1;28253:27:92;;-1:-1:-1;;;;;;28286:3:92;;;;:15;;28307:7;;28325:4;28323:7;28340:5;;-1:-1:-1;;;;;28340:5:92;28354:10;28372;28390:4;28286:114;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8321:763::-;8382:3;;:42;;-1:-1:-1;;;8382:42:92;;8395:7;8382:42;;;9355:25:113;;;9396:18;;;9389:34;8413:7:92;9439:18:113;;;9432:34;8371:8:92;9482:18:113;;;9475:34;;;8371:8:92;-1:-1:-1;;;;;8382:3:92;;:12;;9327:19:113;;8382:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8448:3;;8472:4;;8371:53;;-1:-1:-1;8430:107:92;;-1:-1:-1;;;;;8448:3:92;;;;:10;;:3;;8459:10;;8472:4;8470:7;10815:98:94;8430:107:92;8543:3;;:30;;-1:-1:-1;;;8543:30:92;;-1:-1:-1;;;;;8543:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8619:5:92;;8635:3;;8619:30;;-1:-1:-1;;;8619:30:92;;-1:-1:-1;;;;;8619:5:92;;;;-1:-1:-1;8619:13:92;;-1:-1:-1;8619:30:92;;8635:3;;;;8641:7;;8619:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8700:3:92;;8720:4;;8657:14;;;;;;-1:-1:-1;;;;;8700:3:92;;;;:10;;8720:4;8735:5;;-1:-1:-1;;;;;8735:5:92;8749:34;;;;;;;;;8763:3;8749:34;;;;8768:1;8749:34;;;;8771:1;8749:34;;;;8774:7;8749:34;;;:12;:34::i;:::-;8791:5;8700:102;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8656:146;;;;;;;;8808:51;8819:9;8832:1;8819:14;8808:51;;;;;;;;;;;;;-1:-1:-1;;;8808:51:92;;;:10;:51::i;:::-;8865:44;8874:3;8879:7;8865:44;;;;;;;;;;;;;-1:-1:-1;;;8865:44:92;;;:8;:44::i;:::-;8915:46;8924:4;8930:7;8915:46;;;;;;;;;;;;;-1:-1:-1;;;8915:46:92;;;:8;:46::i;21596:508::-;21663:3;;:41;;-1:-1:-1;;;21663:41:92;;21652:8;21663:41;;;9355:25:113;;;21685:7:92;9396:18:113;;;9389:34;21694:6:92;9439:18:113;;;9432:34;9482:18;;;9475:34;;;21652:8:92;-1:-1:-1;;;;;21663:3:92;;:12;;9327:19:113;;21663:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21710:3;;:30;;-1:-1:-1;;;21710:30:92;;21652:52;;-1:-1:-1;;;;;;21710:3:92;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21746:5:92;;21762:3;;21746:31;;-1:-1:-1;;;21746:31:92;;-1:-1:-1;;;;;21746:5:92;;;;-1:-1:-1;21746:13:92;;-1:-1:-1;21746:31:92;;21762:3;;;;21768:8;;21746:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21824:3:92;;21844:4;;21787:13;;;;-1:-1:-1;;;;;21824:3:92;;;;:10;;21844:4;21859:5;;-1:-1:-1;;;;;21859:5:92;21873:46;;;;;;;;;21887:3;21873:46;;;;21892:7;21873:46;;;;21901:7;21873:46;;;;21910:7;21873:46;;;:12;:46::i;:::-;21927:5;21824:114;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21784:154;;;;;;;21944:75;21953:9;21964:7;21944:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;22025:74;22034:8;22044:7;22025:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;21646:458;;;21596:508::o;25466:540::-;25520:3;;:42;;-1:-1:-1;;;25520:42:92;;25533:7;25520:42;;;9355:25:113;;;9396:18;;;9389:34;25551:7:92;9439:18:113;;;9432:34;25509:8:92;9482:18:113;;;9475:34;;;25509:8:92;-1:-1:-1;;;;;25520:3:92;;:12;;9327:19:113;;25520:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25568:5;;25584:3;;25568:32;;-1:-1:-1;;;25568:32:92;;25509:53;;-1:-1:-1;;;;;;25568:5:92;;;;:13;;:32;;25584:3;;25590:9;;25568:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;25684:4:92;;25607:15;;-1:-1:-1;;;25655:19:92;-1:-1:-1;;;;;25684:4:92;25699:5;;-1:-1:-1;;;;;25699:5:92;25713:46;;;;;;;;;25727:3;25713:46;;;;25732:7;25713:46;;;;25741:7;25713:46;;;;25750:7;25713:46;;;:12;:46::i;:::-;25767:4;25625:152;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;25625:152:92;;;;;;;;;;;;;;-1:-1:-1;;;;;25625:152:92;-1:-1:-1;;;;;;25625:152:92;;;;;;;;;;25823:3;;25625:152;;-1:-1:-1;;;;;25821:6:92;;-1:-1:-1;;;;;25823:3:92;10905:1:94;10815:98;25821:6:92;-1:-1:-1;;;;;25821:11:92;25838:6;25846:2;25821:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25784:65;;;;25859:8;25855:147;;;25877:39;;;;;;;;;;;;;;;;;;:4;:39::i;:::-;25855:147;;;25937:58;25946:15;25956:4;25946:9;:15::i;:::-;25937:58;;;;;;;;;;;;;;;;;:8;:58::i;27352:500::-;27394:5;;27410:3;;27394:30;;-1:-1:-1;;;27394:30:92;;-1:-1:-1;;;;;27394:5:92;;;;:13;;:30;;27410:3;;;27416:7;;27394:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27430:3:92;;:45;;-1:-1:-1;;;27430:45:92;;27443:9;27430:45;;;9355:25:113;;;9396:18;;;9389:34;27465:6:92;9439:18:113;;;9432:34;27430:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;27430:3:92;;;;:12;;9327:19:113;;27430:45:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27481:3:92;;:45;;-1:-1:-1;;;27481:45:92;;27494:9;27481:45;;;9355:25:113;;;9396:18;;;9389:34;27516:6:92;9439:18:113;;;9432:34;27481:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;27481:3:92;;;;:12;;9327:19:113;;27481:45:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27532:3:92;;:30;;-1:-1:-1;;;27532:30:92;;-1:-1:-1;;;;;27532:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27592:3:92;;27617:4;;27632:5;;27592:100;;-1:-1:-1;;;27592:100:92;;27569:13;;-1:-1:-1;;;;;;27592:3:92;;;;-1:-1:-1;27592:15:92;;:100;;27617:4;;;27632:5;;27646:10;;;;27682:4;;27592:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27568:124;;;;;27698:72;27707:8;27717:10;27698:72;;;;;;;;;;;;;;;;;:8;:72::i;:::-;27785:4;;27776:71;;-1:-1:-1;;;;;27785:4:92;:14;27802:4;27785:23;;-1:-1:-1;;;;;;27785:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;27785:23:92;;;1048:51:113;1021:18;;27785:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27810:10;27776:71;;;;;;;;;;;;;-1:-1:-1;;;27776:71:92;;;:8;:71::i;:::-;27388:464;27352:500::o;21126:466::-;21172:3;;:41;;-1:-1:-1;;;21172:41:92;;21185:7;21172:41;;;9355:25:113;;;9396:18;;;9389:34;21203:6:92;9439:18:113;;;9432:34;21172:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;21172:3:92;;;;:12;;9327:19:113;;21172:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21219:3:92;;:30;;-1:-1:-1;;;21219:30:92;;-1:-1:-1;;;;;21219:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21255:5:92;;21271:3;;21255:31;;-1:-1:-1;;;21255:31:92;;-1:-1:-1;;;;;21255:5:92;;;;-1:-1:-1;21255:13:92;;-1:-1:-1;21255:31:92;;21271:3;;;;21277:8;;21255:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21331:3:92;;21356:4;;21294:13;;;;-1:-1:-1;;;;;21331:3:92;;;;:15;;21356:4;21371:5;;-1:-1:-1;;;;;21371:5:92;21385:7;21400;21415:5;21331:95;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21293:133;;;;;;21432:75;21441:9;21452:7;21432:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;21513:74;21522:8;21532:7;21513:74;;;;;;;;;;;;;;;;;:8;:74::i;11074:551::-;11128:3;;:42;;-1:-1:-1;;;11128:42:92;;11141:7;11128:42;;;9355:25:113;;;9396:18;;;9389:34;11159:7:92;9439:18:113;;;9432:34;11128:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;11128:3:92;;;;:12;;9327:19:113;;11128:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11176:3:92;;:42;;-1:-1:-1;;;11176:42:92;;11189:7;11176:42;;;9355:25:113;;;9396:18;;;9389:34;11207:7:92;9439:18:113;;;9432:34;11176:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;11176:3:92;;;;:12;;9327:19:113;;11176:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11224:3:92;;:42;;-1:-1:-1;;;11224:42:92;;11237:7;11224:42;;;9355:25:113;;;9396:18;;;9389:34;11255:7:92;9439:18:113;;;9432:34;11224:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;11224:3:92;;;;:12;;9327:19:113;;11224:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11272:3:92;;:30;;-1:-1:-1;;;11272:30:92;;-1:-1:-1;;;;;11272:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11348:5:92;;11364:3;;11348:30;;-1:-1:-1;;;11348:30:92;;-1:-1:-1;;;;;11348:5:92;;;;-1:-1:-1;11348:13:92;;-1:-1:-1;11348:30:92;;11364:3;;;;11370:7;;11348:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11412:3:92;;11437:4;;11385:8;;;;-1:-1:-1;;;;;11412:3:92;;;;:15;;11437:4;11452:5;;-1:-1:-1;;;;;11452:5:92;11466:7;11481;11496:5;11412:95;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11384:123;;;;;;11513:50;11522:3;11527:7;11513:50;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11513:50:92;;;:8;:50::i;:::-;11569:51;11578:4;11584:7;11569:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11569:51:92;;;:8;:51::i;7570:97:94:-;7611:16;7642:20;7656:5;7642:13;:20::i;:::-;7635:27;;7570:97;:::o;6337:986:92:-;6418:3;;:36;;-1:-1:-1;;;6418:36:92;;6407:8;6418:36;;;9355:25:113;;;6434:7:92;9396:18:113;;;9389:34;6443:7:92;9439:18:113;;;9432:34;9482:18;;;9475:34;;;6407:8:92;-1:-1:-1;;;;;6418:3:92;;:12;;9327:19:113;;6418:36:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6478:3;;6502:4;;6407:47;;-1:-1:-1;6460:107:92;;-1:-1:-1;;;;;6478:3:92;;;;:10;;:3;;6489:10;;6502:4;6500:7;10815:98:94;6460:107:92;6573:3;;:30;;-1:-1:-1;;;6573:30:92;;-1:-1:-1;;;;;6573:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6649:5:92;;6665:3;;6649:30;;-1:-1:-1;;;6649:30:92;;-1:-1:-1;;;;;6649:5:92;;;;-1:-1:-1;6649:13:92;;-1:-1:-1;6649:30:92;;6665:3;;;;6671:7;;6649:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6936:3:92;;6956:4;;6893:14;;;;;;-1:-1:-1;;;;;6936:3:92;;;;:10;;6956:4;6971:5;;-1:-1:-1;;;;;6971:5:92;6985:42;;;;;;;;;6999:3;6985:42;;;;7004:9;6985:42;;;;7015:1;6985:42;;;;7018:7;6985:42;;;:12;:42::i;:::-;7035:4;6936:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6892:153;;;;;;;;7051:51;7062:9;7075:1;7062:14;7051:51;;;;;;;;;;;;;-1:-1:-1;;;7051:51:92;;;:10;:51::i;:::-;7108:43;7117:3;7122:9;7108:43;;;;;;;;;;;;;-1:-1:-1;;;7108:43:92;;;:8;:43::i;1909:606::-;2009:3;;1985:21;;-1:-1:-1;;;;;2009:3:92;:13;2025:4;2009:22;;-1:-1:-1;;;;;;2009:22:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;2009:22:92;;;1048:51:113;1021:18;;2009:22:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2048:3;;:42;;-1:-1:-1;;;2048:42:92;;2061:7;2048:42;;;9355:25:113;;;9396:18;;;9389:34;2079:7:92;9439:18:113;;;9432:34;2037:8:92;9482:18:113;;;9475:34;;;1985:46:92;;-1:-1:-1;;;;;;2048:3:92;;;;:12;;9327:19:113;;2048:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2096:3;;:30;;-1:-1:-1;;;2096:30:92;;2037:53;;-1:-1:-1;;;;;;2096:3:92;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2172:5:92;;2188:3;;2172:30;;-1:-1:-1;;;2172:30:92;;-1:-1:-1;;;;;2172:5:92;;;;-1:-1:-1;2172:13:92;;-1:-1:-1;2172:30:92;;2188:3;;;;2194:7;;2172:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2208:4:92;;-1:-1:-1;;;;;2208:4:92;:15;2226:4;2208:24;;-1:-1:-1;;;;;;2208:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;2208:24:92;;;1048:51:113;1021:18;;2208:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2239:40:92;;-1:-1:-1;;;2239:40:92;;35143:2:113;2239:40:92;;;35125:21:113;35182:2;35162:18;;;35155:30;-1:-1:-1;;;35201:18:113;;;35194:51;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;2239:15:92;;-1:-1:-1;35262:18:113;;2239:40:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2285:3:92;;2305:4;;-1:-1:-1;;;;;2285:3:92;;;;-1:-1:-1;2285:10:92;;-1:-1:-1;2305:4:92;2320:5;;-1:-1:-1;;;;;2320:5:92;2334:46;;;;;;;;;2348:3;2334:46;;;;2353:7;2334:46;;;;2362:7;2334:46;;;;2371:7;2334:46;;;:12;:46::i;:::-;2388:4;2285:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2444:3:92;;2404:106;;-1:-1:-1;2420:16:92;;-1:-1:-1;;;;;;2444:3:92;;-1:-1:-1;2444:13:92;2460:4;2458:7;10815:98:94;10144:493:92;10186:3;;:42;;-1:-1:-1;;;10186:42:92;;10199:7;10186:42;;;9355:25:113;;;9396:18;;;9389:34;10217:7:92;9439:18:113;;;9432:34;10186:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;10186:3:92;;;;:12;;9327:19:113;;10186:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10234:3:92;;:42;;-1:-1:-1;;;10234:42:92;;10247:7;10234:42;;;9355:25:113;;;9396:18;;;9389:34;10265:7:92;9439:18:113;;;9432:34;10234:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;10234:3:92;;;;:12;;9327:19:113;;10234:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10282:3:92;;:30;;-1:-1:-1;;;10282:30:92;;-1:-1:-1;;;;;10282:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10358:5:92;;10374:3;;10358:30;;-1:-1:-1;;;10358:30:92;;-1:-1:-1;;;;;10358:5:92;;;;-1:-1:-1;10358:13:92;;-1:-1:-1;10358:30:92;;10374:3;;;;10380:7;;10358:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10422:3:92;;10447:4;;10395:8;;;;-1:-1:-1;;;;;10422:3:92;;;;:15;;10447:4;10462:5;;-1:-1:-1;;;;;10462:5:92;10476:9;10493:7;10508:5;10422:97;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10394:125;;;;;;10525:50;10534:3;10539:7;10525:50;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10525:50:92;;;:8;:50::i;:::-;10581:51;10590:4;10596:7;10581:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10581:51:92;;;:8;:51::i;3242:447::-;3296:3;;3313:4;;3322:5;;3296:36;;-1:-1:-1;;;3296:36:92;;-1:-1:-1;;;;;3296:3:92;;;;:14;;:36;;3313:4;;;;3322:5;;;3330:1;;3296:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3338:5:92;;3354:3;;3338:30;;-1:-1:-1;;;3338:30:92;;-1:-1:-1;;;;;3338:5:92;;;;-1:-1:-1;3338:13:92;;-1:-1:-1;3338:30:92;;3354:3;;;;3360:7;;3338:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3385:3:92;;:31;;-1:-1:-1;;;3385:31:92;;3398:1;3385:31;;;9355:25:113;3401:2:92;9396:18:113;;;9389:34;3405:7:92;9439:18:113;;;9432:34;3374:8:92;9482:18:113;;;9475:34;;;3374:8:92;-1:-1:-1;;;;;3385:3:92;;:12;;9327:19:113;;3385:31:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3436:5;;3374:42;;-1:-1:-1;3422:11:92;;-1:-1:-1;;;;;3436:5:92;:15;3454:4;3436:24;;-1:-1:-1;;;;;;3436:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;3436:24:92;;;1048:51:113;1021:18;;3436:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3466:3;;3486:4;;3422:38;;-1:-1:-1;;;;;;3466:3:92;;;;:10;;3486:4;3501:5;;-1:-1:-1;;;;;3501:5:92;3515:41;;;;;;;;;3529:3;3515:41;;;;3534:1;3515:41;;;;3537:8;3515:41;;;;3547:7;3515:41;;;:12;:41::i;:::-;3564:4;3466:108;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3594:5:92;;3580:11;;-1:-1:-1;;;;;;3594:5:92;;-1:-1:-1;3594:15:92;;-1:-1:-1;3612:4:92;3594:24;;-1:-1:-1;;;;;;3594:24:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;3594:24:92;;;1048:51:113;1021:18;;3594:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3580:38;;3624:60;3633:6;3641;3624:60;;;;;;;;;;;;;;;;;:8;:60::i;5429:904::-;5490:3;;:42;;-1:-1:-1;;;5490:42:92;;5503:7;5490:42;;;9355:25:113;;;9396:18;;;9389:34;5521:7:92;9439:18:113;;;9432:34;5479:8:92;9482:18:113;;;9475:34;;;5479:8:92;-1:-1:-1;;;;;5490:3:92;;:12;;9327:19:113;;5490:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5556:3;;5580:4;;5479:53;;-1:-1:-1;5538:107:92;;-1:-1:-1;;;;;5556:3:92;;;;:10;;:3;;5567:10;;5580:4;5578:7;10815:98:94;5538:107:92;5651:3;;:30;;-1:-1:-1;;;5651:30:92;;-1:-1:-1;;;;;5651:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5727:5:92;;5743:3;;5727:30;;-1:-1:-1;;;5727:30:92;;-1:-1:-1;;;;;5727:5:92;;;;-1:-1:-1;5727:13:92;;-1:-1:-1;5727:30:92;;5743:3;;;;5749:7;;5727:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5777:5:92;;5764:20;;-1:-1:-1;;;;;5777:5:92;14916:10;:18::i;5764:20::-;5821:3;;-1:-1:-1;;;;;5821:3:92;5806:4;-1:-1:-1;;;;;5795:34:92;;5827:1;5795:34;;;;5705:25:113;;5693:2;5678:18;;5559:177;5795:34:92;;;;;;;;5848:5;;5835:20;;-1:-1:-1;;;;;5848:5:92;14916:10;:18::i;5835:20::-;5891:3;;5877;;-1:-1:-1;;;;;5891:3:92;;;;5877;-1:-1:-1;;;;;5866:33:92;;5897:1;5866:33;;;;5705:25:113;;5693:2;5678:18;;5559:177;5866:33:92;;;;;;;;5950:3;;5970:4;;5907:14;;;;;;-1:-1:-1;;;;;5950:3:92;;;;:10;;5970:4;5985:5;;-1:-1:-1;;;;;5985:5:92;5999:34;;;;;;;;;6013:3;5999:34;;;;6018:1;5999:34;;;;6021:1;5999:34;;;;6024:7;5999:34;;;:12;:34::i;:::-;6041:4;5950:101;;;;;;;;;;;;;;;;;;:::i;26010:807::-;26080:3;;:42;;-1:-1:-1;;;26080:42:92;;26093:7;26080:42;;;9355:25:113;;;9396:18;;;9389:34;26111:7:92;9439:18:113;;;9432:34;26069:8:92;9482:18:113;;;9475:34;;;26069:8:92;-1:-1:-1;;;;;26080:3:92;;:12;;9327:19:113;;26080:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26128:5;;26144:3;;26128:30;;-1:-1:-1;;;26128:30:92;;26069:53;;-1:-1:-1;;;;;;26128:5:92;;;;:13;;:30;;26144:3;;26150:7;;26128:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;26180:4:92;;26164:13;;-1:-1:-1;;;;;26180:4:92;:14;26197:4;26180:23;;-1:-1:-1;;;;;;26180:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;26180:23:92;;;1048:51:113;1021:18;;26180:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26225:5;;26249:3;;26225:29;;-1:-1:-1;;;26225:29:92;;-1:-1:-1;;;;;26249:3:92;;;26225:29;;;1048:51:113;26164:39:92;;-1:-1:-1;26209:13:92;;26225:5;;;:15;;1021:18:113;;26225:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26288:3;;26308:4;;26209:45;;-1:-1:-1;26262:14:92;;-1:-1:-1;;;;;26288:3:92;;;;:10;;26308:4;26323:5;;-1:-1:-1;;;;;26323:5:92;26337:46;;;;;;;;;26351:3;26337:46;;;;26356:7;26337:46;;;;26365:7;26337:46;;;;26374:7;26337:46;;;:12;:46::i;:::-;26391:4;26288:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26261:140;;;;;;26407:105;26425:9;26438:1;26425:14;26407:105;;;;;;;;;;;;;;;;;:10;:105::i;:::-;26586:4;;26570:115;;26612:8;;-1:-1:-1;;;;;26586:4:92;:14;26603:4;26601:7;26586:23;;-1:-1:-1;;;;;;26586:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;26586:23:92;;;1048:51:113;1021:18;;26586:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;26628:7;26570:115;;;;;;;;;;;;;;;;;:8;:115::i;:::-;26707:5;;26731:3;;26707:29;;-1:-1:-1;;;26707:29:92;;-1:-1:-1;;;;;26731:3:92;;;26707:29;;;1048:51:113;26691:121:92;;26739:8;;26707:5;;:15;;1021:18:113;;26707:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;26755:7;26691:121;;;;;;;;;;;;;;;;;:8;:121::i;29643:581::-;29704:5;;29720:3;;29704:30;;-1:-1:-1;;;29704:30:92;;-1:-1:-1;;;;;29704:5:92;;;;:13;;:30;;29720:3;;;29726:7;;29704:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29754:4:92;;29777:3;;29754:28;;-1:-1:-1;;;29754:28:92;;-1:-1:-1;;;;;29777:3:92;;;29754:28;;;1048:51:113;29740:11:92;;29754:4;;;;;:14;;1021:18:113;;29754:28:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29799:3;;:45;;-1:-1:-1;;;29799:45:92;;29812:9;29799:45;;;9355:25:113;;;9396:18;;;9389:34;29834:6:92;9439:18:113;;;9432:34;29788:8:92;9482:18:113;;;9475:34;;;29740:42:92;;-1:-1:-1;;;;;;29799:3:92;;;;:12;;9327:19:113;;29799:45:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29878:3;;29898:4;;29788:56;;-1:-1:-1;29852:14:92;;-1:-1:-1;;;;;29878:3:92;;;;:10;;29898:4;29913:5;;-1:-1:-1;;;;;29913:5:92;29927:39;;;;;;;;;29941:3;29927:39;;;;29946:1;29927:39;;;;29949:7;29927:39;;;;29958:6;29927:39;;;:12;:39::i;:::-;29974:4;29878:106;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29851:133;;;;;;29990:50;30001:9;30014:1;30001:14;29990:50;;;;;;;;;;;;;-1:-1:-1;;;29990:50:92;;;:10;:50::i;:::-;30055:3;;30066:4;;30046:64;;-1:-1:-1;;;;;30055:3:92;;;;:8;;30066:4;30075:5;;-1:-1:-1;;;;;30075:5:92;30055:27;;-1:-1:-1;;;;;;30055:27:92;;;;;;;-1:-1:-1;;;;;37167:15:113;;;30055:27:92;;;37149:34:113;37219:15;;37199:18;;;37192:43;37084:18;;30055:27:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30084:1;30046:64;;;;;;;;;;;;;-1:-1:-1;;;30046:64:92;;;:8;:64::i;:::-;30132:4;;30155:3;;30132:28;;-1:-1:-1;;;30132:28:92;;-1:-1:-1;;;;;30155:3:92;;;30132:28;;;1048:51:113;30116:103:92;;30132:4;;;;;:14;;1021:18:113;;30132:28:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30168:6;30116:103;;;;;;;;;;;;;;;;;:8;:103::i;29451:188::-;29529:48;;-1:-1:-1;;;29529:48:92;;37447:2:113;29529:48:92;;;37429:21:113;37486:2;37466:18;;;37459:30;37525:31;37505:18;;;37498:59;-1:-1:-1;;;;;;;;;;;237:61:1;29529:15:92;;37574:18:113;;29529:48:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29583:3:92;;29601:4;;-1:-1:-1;;;;;29583:3:92;;;;-1:-1:-1;29583:15:92;;-1:-1:-1;29601:4:92;29610:5;;-1:-1:-1;;;;;29610:5:92;-1:-1:-1;;;29626:1:92;29629:4;29583:51;;;;;;;;;;;;;;;;;;;:::i;24153:488::-;24216:3;;:41;;-1:-1:-1;;;24216:41:92;;24229:7;24216:41;;;9355:25:113;;;9396:18;;;9389:34;24247:6:92;9439:18:113;;;9432:34;24205:8:92;9482:18:113;;;9475:34;;;24205:8:92;-1:-1:-1;;;;;24216:3:92;;:12;;9327:19:113;;24216:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24263:3;;:29;;-1:-1:-1;;;24263:29:92;;-1:-1:-1;;;24263:29:92;;;38426:36:113;24205:52:92;;-1:-1:-1;;;;;;24263:3:92;;:10;;38399:18:113;;24263:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24298:3:92;;:22;;-1:-1:-1;;;;;;24298:22:92;;:3;:22;;;6776:41:113;-1:-1:-1;;;;;24298:3:92;;;;-1:-1:-1;24298:16:92;;-1:-1:-1;6749:18:113;;24298:22:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24326:5:92;;24342:3;;24326:30;;-1:-1:-1;;;24326:30:92;;-1:-1:-1;;;;;24326:5:92;;;;-1:-1:-1;24326:13:92;;-1:-1:-1;24326:30:92;;24342:3;;;;24348:7;;24326:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;24375:3:92;;24362:18;;-1:-1:-1;;;;;24375:3:92;14916:10;:18::i;24362:::-;24425:5;;-1:-1:-1;;;;;24425:5:92;24410:4;;-1:-1:-1;;;;;24391:127:92;;;;24410:4;-1:-1:-1;;;;;24391:127:92;-1:-1:-1;;;;;;;;;;;24439:3:92;24452:4;24465:7;24480;24391:127;;;;;;;;;:::i;:::-;;;;;;;;24524:3;;24544:4;;-1:-1:-1;;;;;24524:3:92;;;;:10;;24544:4;24542:7;10815:98:94;4169:282:95;4224:20;;;;;;;;;:15;:20;;;4250:176;4271:5;:12;4267:1;:16;4250:176;;;4331:8;;4316:1;;-1:-1:-1;;;;;;;;;;;237:61:1;4319:11:95;;4331:5;;4337:1;;4331:8;;;;;;:::i;:::-;;;;;;;4319:21;;;;;;;;;;;;;5705:25:113;;5693:2;5678:18;;5559:177;4319:21:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4319:21:95;;;;;;;;;;;;:::i;:::-;4302:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4298:43;;4372:1;4357:5;:12;:16;;;;:::i;:::-;4353:1;:20;4349:71;;;4403:1;4389:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;4385:26;;4349:71;4285:3;;;;:::i;:::-;;;;4250:176;;1610:472:0;1644:4;1660:7;;;;;;;1656:422;;;-1:-1:-1;1684:7:0;;;;;;;;1610:472::o;1656:422::-;1712:17;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;1745:300;;1919:43;;1780:20;;-1:-1:-1;;;;;;;;;;;1459:61:0;1870:34;;1919:43;;1459:61;;-1:-1:-1;;;1944:17:0;1919:43;;;:::i;:::-;;;;-1:-1:-1;;1919:43:0;;;;;;;;;;1833:141;;;1919:43;1833:141;;:::i;:::-;;;;-1:-1:-1;;1833:141:0;;;;;;;;;;1804:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1777:207;;;2020:7;2009:27;;;;;;;;;;;;:::i;:::-;1994:42;;1767:278;1745:300;2059:12;1610:472;-1:-1:-1;1610:472:0:o;4252:1100:92:-;4340:13;;;4351:1;4340:13;;;;;;;;;4307:6;;;;4340:13;;;;;;;;;;;-1:-1:-1;;4371:3:92;;:42;;-1:-1:-1;;;4371:42:92;;4384:7;4371:42;;;9355:25:113;;;9396:18;;;9389:34;4402:7:92;9439:18:113;;;9432:34;4371:3:92;9482:18:113;;;9475:34;4319::92;;-1:-1:-1;;;;;;4371:3:92;;:12;;9327:19:113;;4371:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4359:4;4364:3;;;;:::i;:::-;;;4359:9;;;;;;;;:::i;:::-;;;;;;;;;;:54;4431:3;;:42;;-1:-1:-1;;;4431:42:92;;4444:7;4431:42;;;9355:25:113;;;9396:18;;;9389:34;4462:7:92;9439:18:113;;;9432:34;4431:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;4431:3:92;;;;:12;;9327:19:113;;4431:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4419:4;4424:3;;;;:::i;:::-;;;4419:9;;;;;;;;:::i;:::-;;;;;;;;;;:54;4491:3;;:42;;-1:-1:-1;;;4491:42:92;;4504:7;4491:42;;;9355:25:113;;;9396:18;;;9389:34;4522:7:92;9439:18:113;;;9432:34;4491:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;4491:3:92;;;;:12;;9327:19:113;;4491:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4479:4;4484:3;;;;:::i;:::-;;;4479:9;;;;;;;;:::i;:::-;;;;;;;;;;:54;4540:3;;:30;;-1:-1:-1;;;4540:30:92;;-1:-1:-1;;;;;4540:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4616:5:92;;4632:3;;4616:30;;-1:-1:-1;;;4616:30:92;;-1:-1:-1;;;;;4616:5:92;;;;-1:-1:-1;4616:13:92;;-1:-1:-1;4616:30:92;;4632:3;;;;4638:7;;4616:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4679:16:92;;;4693:1;4679:16;;;;;;;;;4652:24;;4679:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4652:43;;4701:6;4713:51;;;;;;;;4727:4;4732:1;4727:7;;;;;;;;:::i;:::-;;;;;;;4713:51;;;;4736:9;4713:51;;;;4747:7;4713:51;;;;4756:7;4713:51;;;:7;4721:1;4713:10;;;;;;;;:::i;:::-;;;;;;:51;;;;4770:3;;;;;:::i;:::-;;;;4779:49;;;;;;;;4793:4;4798:1;4793:7;;;;;;;;:::i;:::-;;;;;;;4779:49;;;;4802:7;4779:49;;;;4811:7;4779:49;;;;4820:7;4779:49;;;:7;4787:1;4779:10;;;;;;;;:::i;:::-;;;;;;:49;;;;4834:3;;;;;:::i;:::-;;;;4843:51;;;;;;;;4857:4;4862:1;4857:7;;;;;;;;:::i;:::-;;;;;;;4843:51;;;;4866:9;4843:51;;;;4877:7;4843:51;;;;4886:7;4843:51;;;:7;4851:1;4843:10;;;;;;;;:::i;:::-;;;;;;;;;;:51;4914:3;;4901:18;;-1:-1:-1;;;;;4914:3:92;14916:10;:18::i;4901:::-;4930:12;;;;;;;4961:3;;4948:18;;-1:-1:-1;;;;;4961:3:92;14916:10;:18::i;4948:::-;5002:5;;4993:4;;4977:69;;;5019:9;9355:25:113;;;9411:2;9396:18;;9389:34;-1:-1:-1;9439:18:113;;;9432:34;;;9497:2;9482:18;;9475:34;4977:69:92;;5012:4;;-1:-1:-1;;;;;5002:5:92;;;;4993:4;;4977:69;;;;;;9342:3:113;4977:69:92;;;5097:3;;5117:4;;5132:5;;5097:74;;-1:-1:-1;;;5097:74:92;;5054:14;;;;;;-1:-1:-1;;;;;5097:3:92;;;;:10;;:74;;5117:4;;;5132:5;;5146:7;;5161:4;;5097:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5053:118;;;;;;;;5177:52;5188:9;5201:1;5188:14;5177:52;;;;;;;;;;;;;-1:-1:-1;;;5177:52:92;;;:10;:52::i;:::-;5235;5244:3;5249:9;5235:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5235:52:92;;;:8;:52::i;:::-;5293:54;5302:4;5308:9;5293:54;;;;;;;;;;;;;-1:-1:-1;;;5293:54:92;;;:8;:54::i;:::-;4301:1051;;;;;;;4252:1100::o;9442:168:94:-;9552:3;;9521:13;;9544;;-1:-1:-1;;;;;9552:3:94;9544:5;:13::i;:::-;-1:-1:-1;9589:3:94;;9571:33;;-1:-1:-1;;;;;9589:3:94;;;;9594:4;;9600:3;;9571:33;;;:::i;:::-;-1:-1:-1;;;;;22798:15:113;;;22780:34;;22850:15;;;22845:2;22830:18;;22823:43;22902:15;;;22897:2;22882:18;;22875:43;22730:2;22715:18;9571:33:94;;;;;;;;;;;;;;;;;;;;;;;9563:42;;9442:168;;;;;:::o;3693:555:92:-;3749:3;;:42;;-1:-1:-1;;;3749:42:92;;3762:7;3749:42;;;9355:25:113;;;9396:18;;;9389:34;3780:7:92;9439:18:113;;;9432:34;3738:8:92;9482:18:113;;;9475:34;;;3738:8:92;-1:-1:-1;;;;;3749:3:92;;:12;;9327:19:113;;3749:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3797:3;;:30;;-1:-1:-1;;;3797:30:92;;3738:53;;-1:-1:-1;;;;;;3797:3:92;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3873:5:92;;3889:3;;3873:30;;-1:-1:-1;;;3873:30:92;;-1:-1:-1;;;;;3873:5:92;;;;-1:-1:-1;3873:13:92;;-1:-1:-1;3873:30:92;;3889:3;;;;3895:7;;3873:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3953:3:92;;3973:4;;3910:14;;;;;;-1:-1:-1;;;;;3953:3:92;;;;:10;;3973:4;3988:5;;-1:-1:-1;;;;;3988:5:92;4002:48;;;;;;;;;4016:3;4002:48;;;;4021:9;4002:48;;;;4032:7;4002:48;;;;4041:7;4002:48;;;:12;:48::i;:::-;4058:4;3953:115;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3909:159;;;;;;;;4074:51;4085:9;4098:1;4085:14;4074:51;;;;;;;;;;;;;-1:-1:-1;;;4074:51:92;;;:10;:51::i;:::-;4131:52;4140:3;4145:9;4131:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4131:52:92;;;:8;:52::i;:::-;4189:54;4198:4;4204:9;4189:54;;;;;;;;;;;;;-1:-1:-1;;;4189:54:92;;;:8;:54::i;30750:265::-;30828:3;;30846:4;;30855:5;;30828:58;;-1:-1:-1;;;30828:58:92;;-1:-1:-1;;;;;30828:3:92;;;;:15;;:58;;30846:4;;;;30855:5;;;30863:7;;;;30881:4;;30828:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;30911:3:92;;30924:4;;30892:118;;-1:-1:-1;;;;;;30911:3:92;;;;-1:-1:-1;30911:10:92;;30924:4;30933:5;;-1:-1:-1;;;;;30933:5:92;30911:29;;-1:-1:-1;;;;;;30911:29:92;;;;;;;-1:-1:-1;;;;;37167:15:113;;;30911:29:92;;;37149:34:113;37219:15;;37199:18;;;37192:43;37084:18;;30911:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30910:30;30892:118;;;;;;;;;;;;;;;;;:10;:118::i;:::-;30750:265::o;9170:268:94:-;9270:9;9287:12;9316:3;;;;;;;;;-1:-1:-1;;;;;9316:3:94;9328:4;9342:3;9302:45;;;;;:::i;1297:608:92:-;1398:3;;1374:21;;-1:-1:-1;;;;;1398:3:92;:13;1414:4;1398:22;;-1:-1:-1;;;;;;1398:22:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;1398:22:92;;;1048:51:113;1021:18;;1398:22:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1437:3;;:42;;-1:-1:-1;;;1437:42:92;;1450:7;1437:42;;;9355:25:113;;;9396:18;;;9389:34;1468:7:92;9439:18:113;;;9432:34;1426:8:92;9482:18:113;;;9475:34;;;1374:46:92;;-1:-1:-1;;;;;;1437:3:92;;;;:12;;9327:19:113;;1437:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1485:3;;:30;;-1:-1:-1;;;1485:30:92;;1426:53;;-1:-1:-1;;;;;;1485:3:92;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1561:5:92;;1577:3;;1561:30;;-1:-1:-1;;;1561:30:92;;-1:-1:-1;;;;;1561:5:92;;;;-1:-1:-1;1561:13:92;;-1:-1:-1;1561:30:92;;1577:3;;;;1583:7;;1561:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1597:5:92;;-1:-1:-1;;;;;1597:5:92;:16;1616:4;1597:25;;-1:-1:-1;;;;;;1597:25:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;1597:25:92;;;1048:51:113;1021:18;;1597:25:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1629:40:92;;-1:-1:-1;;;1629:40:92;;-1:-1:-1;;;;;;;;;;;237:61:1;-1:-1:-1;1629:15:92;;-1:-1:-1;1629:40:92;;;;;:::i;22108:471::-;22159:3;;:41;;-1:-1:-1;;;22159:41:92;;22172:7;22159:41;;;9355:25:113;;;9396:18;;;9389:34;22190:6:92;9439:18:113;;;9432:34;22159:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;22159:3:92;;;;:12;;9327:19:113;;22159:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22206:3:92;;:30;;-1:-1:-1;;;22206:30:92;;-1:-1:-1;;;;;22206:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22242:5:92;;22258:3;;22242:31;;-1:-1:-1;;;22242:31:92;;-1:-1:-1;;;;;22242:5:92;;;;-1:-1:-1;22242:13:92;;-1:-1:-1;22242:31:92;;22258:3;;;;22264:8;;22242:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22318:3:92;;22343:4;;22281:13;;;;-1:-1:-1;;;;;22318:3:92;;;;:15;;22343:4;22358:5;;-1:-1:-1;;;;;22358:5:92;22372:7;22387;22402:5;22318:95;;;;;;;;;;;;;;;;;;;:::i;28452:495::-;28521:5;;28537:3;;28521:30;;-1:-1:-1;;;28521:30:92;;-1:-1:-1;;;;;28521:5:92;;;;:13;;:30;;28537:3;;;28543:7;;28521:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;28562:6;28557:96;28578:2;28574:1;:6;28557:96;;;28595:3;;-1:-1:-1;;;;;28595:3:92;:12;28608:15;:1;28613:9;28608:15;:::i;:::-;28595:51;;-1:-1:-1;;;;;;28595:51:92;;;;;;;;;;9355:25:113;;;;28625:9:92;9396:18:113;;;9389:34;28636:6:92;9439:18:113;;;9432:34;9482:18;;;9475:34;;;9327:19;;28595:51:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28582:3:92;;;;:::i;:::-;;;;28557:96;;;-1:-1:-1;28658:3:92;;:30;;-1:-1:-1;;;28658:30:92;;-1:-1:-1;;;;;28658:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28828:3:92;;28867:4;;28755:22;;-1:-1:-1;28801:21:92;;-1:-1:-1;;;;;;28828:3:92;;;;:15;;28849:7;;28867:4;28865:7;10815:98:94;9981:169;10034:4;10046:11;:9;:11::i;:::-;10063:13;10079:1;-1:-1:-1;;;;;10079:10:94;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10063:28;;;;10097:14;:12;:14::i;:::-;10133:12;10137:8;10133:2;:12;:::i;:::-;10124:21;;:6;:21;:::i;12850:363:92:-;12931:9;;:47;;-1:-1:-1;;;12931:47:92;;12950:7;12931:47;;;9355:25:113;;;9396:18;;;9389:34;12968:6:92;9439:18:113;;;9432:34;12920:8:92;9482:18:113;;;9475:34;;;12920:8:92;-1:-1:-1;;;;;12931:9:92;;:18;;9327:19:113;;12931:47:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12984:13;:20;;-1:-1:-1;;;;12984:20:92;-1:-1:-1;;;12984:20:92;;;13010:5;;13026:3;;12920:58;;-1:-1:-1;;;;;;13010:5:92;;;;:13;;13024:6;;13026:3;10905:1:94;10815:98;13024:6:92;13032:7;13010:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13047:42:92;;-1:-1:-1;;;13047:42:92;;41680:2:113;13047:42:92;;;41662:21:113;41719:2;41699:18;;;41692:30;41758:25;41738:18;;;41731:53;-1:-1:-1;;;;;;;;;;;237:61:1;13047:15:92;;41801:18:113;;13047:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13095:3:92;;13115:4;;-1:-1:-1;;;;;13095:3:92;;;;-1:-1:-1;13095:10:92;;-1:-1:-1;13115:4:92;13130:5;;-1:-1:-1;;;;;13130:5:92;13144:46;;;;;;;;;13158:3;13144:46;;;;13163:7;13144:46;;;;13172:7;13144:46;;;;13181:7;13144:46;;;:12;:46::i;23488:661::-;23566:3;;:44;;-1:-1:-1;;;23566:44:92;;23579:7;23566:44;;;9355:25:113;23588:9:92;9396:18:113;;;9389:34;23599:7:92;9439:18:113;;;9432:34;23555:8:92;9482:18:113;;;9475:34;;;23555:8:92;-1:-1:-1;;;;;23566:3:92;;:12;;9327:19:113;;23566:44:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23616:3;;:35;;-1:-1:-1;;;23616:35:92;;-1:-1:-1;;;23616:35:92;;;19312:42:113;23555:55:92;;-1:-1:-1;;;;;;23616:3:92;;:10;;19285:18:113;;23616:35:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23738:5:92;;23754:3;;23738:32;;-1:-1:-1;;;23738:32:92;;-1:-1:-1;;;;;23738:5:92;;;;-1:-1:-1;23738:13:92;;-1:-1:-1;23738:32:92;;23754:3;;;;23760:9;;23738:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23790:3:92;;23777:18;;-1:-1:-1;;;;;23790:3:92;14916:10;:18::i;23777:::-;23840:5;;-1:-1:-1;;;;;23840:5:92;23825:4;;-1:-1:-1;;;;;23806:136:92;;;;23825:4;-1:-1:-1;;;;;23806:136:92;-1:-1:-1;;;;;;;;;;;23854:3:92;23867:4;23880:8;23896:9;23806:136;;;;;;;;;:::i;:::-;;;;;;;;23975:3;;23995:4;;23949:14;;-1:-1:-1;;;;;23975:3:92;;;;:10;;23995:4;24010:5;;-1:-1:-1;;;;;24010:5:92;24024:49;;;;;;;;;24038:3;24024:49;;;;24043:8;24024:49;;;;24053:9;24024:49;;;;24064:7;24024:49;;;:12;:49::i;:::-;24081:4;23975:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23948:143;;;;;;24097:47;24108:9;24121:1;24108:14;24097:47;;;;;;;;;;;;;-1:-1:-1;;;24097:47:92;;;:10;:47::i;30612:134::-;30683:3;;30701:4;;30710:5;;30683:58;;-1:-1:-1;;;30683:58:92;;-1:-1:-1;;;;;30683:3:92;;;;:15;;:58;;30701:4;;;;30710:5;;;30718:7;;;;30736:4;;30683:58;;;:::i;17458:487::-;17537:3;;17550:4;;17559:5;;17537:32;;-1:-1:-1;;;17537:32:92;;-1:-1:-1;;;;;17537:3:92;;;;:10;;:32;;17550:4;;;;17559:5;;;17567:1;;17537:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17591:4:92;;17575:13;;-1:-1:-1;;;;;;17591:4:92;;-1:-1:-1;17591:14:92;17608:4;17606:7;10815:98:94;22583:470:92;22634:3;;:41;;-1:-1:-1;;;22634:41:92;;22647:7;22634:41;;;9355:25:113;;;9396:18;;;9389:34;22665:6:92;9439:18:113;;;9432:34;22634:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;22634:3:92;;;;:12;;9327:19:113;;22634:41:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22681:3:92;;:30;;-1:-1:-1;;;22681:30:92;;-1:-1:-1;;;;;22681:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22717:5:92;;22733:3;;22717:31;;-1:-1:-1;;;22717:31:92;;-1:-1:-1;;;;;22717:5:92;;;;-1:-1:-1;22717:13:92;;-1:-1:-1;22717:31:92;;22733:3;;;;22739:8;;22717:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22793:3:92;;22818:4;;22756:13;;;;-1:-1:-1;;;;;22793:3:92;;;;:15;;22818:4;22833:5;;-1:-1:-1;;;;;22833:5:92;22847:7;22862;22877:4;22793:94;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22755:132;;;;;;22893:75;22902:9;22913:7;22893:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;22974:74;22983:8;22993:7;22974:74;;;;;;;;;;;;;;;;;:8;:74::i;19726:927::-;19774:3;;:43;;-1:-1:-1;;;19774:43:92;;19787:9;19774:43;;;9355:25:113;19798:7:92;9396:18:113;;;9389:34;19807:6:92;9439:18:113;;;9432:34;19774:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;19774:3:92;;;;:12;;9327:19:113;;19774:43:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19823:3:92;;:43;;-1:-1:-1;;;19823:43:92;;19836:9;19823:43;;;9355:25:113;19847:7:92;9396:18:113;;;9389:34;19856:6:92;9439:18:113;;;9432:34;19823:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;19823:3:92;;;;:12;;9327:19:113;;19823:43:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19872:3:92;;:30;;-1:-1:-1;;;19872:30:92;;-1:-1:-1;;;;;19872:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19909:4:92;;19924:3;;19909:30;;-1:-1:-1;;;19909:30:92;;-1:-1:-1;;;;;19909:4:92;;;;-1:-1:-1;19909:12:92;;-1:-1:-1;19909:30:92;;19924:3;;;;19930:8;;19909:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19945:5:92;;19961:3;;19945:31;;-1:-1:-1;;;19945:31:92;;-1:-1:-1;;;;;19945:5:92;;;;:13;;:31;;19961:3;;;19967:8;;19945:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19998:4:92;;19982:13;;-1:-1:-1;;;;;19998:4:92;:14;20015:4;19998:23;;-1:-1:-1;;;;;;19998:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;19998:23:92;;;1048:51:113;1021:18;;19998:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20043:5;;20067:3;;20043:29;;-1:-1:-1;;;20043:29:92;;-1:-1:-1;;;;;20067:3:92;;;20043:29;;;1048:51:113;19982:39:92;;-1:-1:-1;20027:13:92;;20043:5;;;:15;;1021:18:113;;20043:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20117:3;;20142:4;;20157:5;;20117:94;;-1:-1:-1;;;20117:94:92;;20027:45;;-1:-1:-1;20080:13:92;;;;-1:-1:-1;;;;;20117:3:92;;;;:15;;:94;;20142:4;;;;20157:5;;20171:7;;20186;;20201:4;;20117:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20079:132;;;;;;20217:74;20226:8;20236:7;20217:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;20297:101;20313:9;20330;20297:101;;;;;;;;;;;;;;;;;:8;:101::i;:::-;20420:4;;20404:115;;20446:8;;-1:-1:-1;;;;;20420:4:92;:14;20437:4;20420:23;;-1:-1:-1;;;;;;20420:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;20420:23:92;;;1048:51:113;1021:18;;20420:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;20462:7;20404:115;;;;;;;;;;;;;;;;;:8;:115::i;:::-;20541:5;;20565:3;;20541:29;;-1:-1:-1;;;20541:29:92;;-1:-1:-1;;;;;20565:3:92;;;20541:29;;;1048:51:113;20525:123:92;;20573:8;;20541:5;;:15;;1021:18:113;;20541:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;20589:9;20525:123;;;;;;;;;;;;;;;;;:8;:123::i;8157:173:94:-;8245:16;8278:47;8292:12;8306:11;8319:5;8278:13;:47::i;9644:496:92:-;9686:3;;:42;;-1:-1:-1;;;9686:42:92;;9699:7;9686:42;;;9355:25:113;;;9396:18;;;9389:34;9717:7:92;9439:18:113;;;9432:34;9686:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;9686:3:92;;;;:12;;9327:19:113;;9686:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9734:3:92;;:42;;-1:-1:-1;;;9734:42:92;;9747:7;9734:42;;;9355:25:113;;;9396:18;;;9389:34;9765:7:92;9439:18:113;;;9432:34;9734:3:92;9482:18:113;;;9475:34;-1:-1:-1;;;;;9734:3:92;;;;:12;;9327:19:113;;9734:42:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9782:3:92;;:30;;-1:-1:-1;;;9782:30:92;;-1:-1:-1;;;;;9782:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9858:5:92;;9874:3;;9858:30;;-1:-1:-1;;;9858:30:92;;-1:-1:-1;;;;;9858:5:92;;;;-1:-1:-1;9858:13:92;;-1:-1:-1;9858:30:92;;9874:3;;;;9880:7;;9858:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9922:3:92;;9947:4;;9895:8;;;;-1:-1:-1;;;;;9922:3:92;;;;:15;;9947:4;9962:5;;-1:-1:-1;;;;;9962:5:92;9976:9;9993:7;10008:4;9922:96;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9894:124;;;;;;10024:52;10033:3;10038:9;10024:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10024:52:92;;;:8;:52::i;:::-;10082:53;10091:4;10097:9;10082:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10082:53:92;;;:8;:53::i;18728:994::-;18781:3;;:43;;-1:-1:-1;;;18781:43:92;;18794:9;18781:43;;;9355:25:113;18805:7:92;9396:18:113;;;9389:34;18814:6:92;9439:18:113;;;9432:34;18770:8:92;9482:18:113;;;9475:34;;;18770:8:92;-1:-1:-1;;;;;18781:3:92;;:12;;9327:19:113;;18781:43:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18830:4;;18845:3;;18830:30;;-1:-1:-1;;;18830:30:92;;18770:54;;-1:-1:-1;;;;;;18830:4:92;;;;:12;;:30;;18845:3;;18851:8;;18830:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18866:5:92;;18882:3;;18866:31;;-1:-1:-1;;;18866:31:92;;-1:-1:-1;;;;;18866:5:92;;;;:13;;:31;;18882:3;;;18888:8;;18866:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18919:4:92;;18903:13;;-1:-1:-1;;;;;18919:4:92;:14;18936:4;18919:23;;-1:-1:-1;;;;;;18919:23:92;;;;;;;-1:-1:-1;;;;;1066:32:113;;;18919:23:92;;;1048:51:113;1021:18;;18919:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18964:5;;18988:3;;18964:29;;-1:-1:-1;;;18964:29:92;;-1:-1:-1;;;;;18988:3:92;;;18964:29;;;1048:51:113;18903:39:92;;-1:-1:-1;18948:13:92;;18964:5;;;:15;;1021:18:113;;18964:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19013:3;;18948:45;;-1:-1:-1;19000:18:92;;-1:-1:-1;;;;;19013:3:92;14916:10;:18::i;19000:::-;19053:5;;19044:4;;19029:65;;;45168:25:113;;;19068:4:92;45224:2:113;45209:18;;45202:60;19075:7:92;45278:18:113;;;45271:34;19084:9:92;45336:2:113;45321:18;;45314:34;19029:65:92;;-1:-1:-1;;;;;19053:5:92;;;;19044:4;;;;;19029:65;;;;;45155:3:113;19029:65:92;;;19154:3;;19174:4;;19101:14;;;;;;-1:-1:-1;;;;;19154:3:92;;;;:10;;19174:4;19189:5;;-1:-1:-1;;;;;19189:5:92;19203:47;;;;;;;;;19217:3;19203:47;;;;19222:7;19203:47;;;;19231:9;19203:47;;;;19242:6;19203:47;;;:12;:47::i;:::-;19258:4;19154:114;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19100:168;;;;;;;;19274:50;19285:9;19298:1;19285:14;19274:50;;;;;;;;;;;;;-1:-1:-1;;;19274:50:92;;;:10;:50::i;:::-;19346:4;;19330:115;;19372:8;;-1:-1:-1;;;;;19346:4:92;:14;19363:4;19361:7;10815:98:94;19330:115:92;19467:5;;19491:3;;19467:29;;-1:-1:-1;;;19467:29:92;;-1:-1:-1;;;;;19491:3:92;;;19467:29;;;1048:51:113;19451:123:92;;19499:8;;19467:5;;:15;;1021:18:113;;19467:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;19515:9;19451:123;;;;;;;;;;;;;;;;;:8;:123::i;:::-;19580:64;19589:8;19599:7;19580:64;;;;;;;;;;;;;;;;;:8;:64::i;:::-;19650:67;19659:9;19670;19650:67;;;;;;;;;;;;;;;;;:8;:67::i;28951:496::-;29022:5;;29038:3;;29022:30;;-1:-1:-1;;;29022:30:92;;-1:-1:-1;;;;;29022:5:92;;;;:13;;:30;;29038:3;;;29044:7;;29022:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;29063:6;29058:96;29079:2;29075:1;:6;29058:96;;;29096:3;;-1:-1:-1;;;;;29096:3:92;:12;29109:15;:1;29114:9;29109:15;:::i;:::-;29096:51;;-1:-1:-1;;;;;;29096:51:92;;;;;;;;;;9355:25:113;;;;29126:9:92;9396:18:113;;;9389:34;29137:6:92;9439:18:113;;;9432:34;9482:18;;;9475:34;;;9327:19;;29096:51:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29083:3:92;;;;:::i;:::-;;;;29058:96;;;-1:-1:-1;29159:3:92;;:30;;-1:-1:-1;;;29159:30:92;;-1:-1:-1;;;;;29159:3:92;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29328:3:92;;29367:4;;29256:21;;-1:-1:-1;29301:21:92;;-1:-1:-1;;;;;;29328:3:92;;;;:15;;29349:7;;29367:4;29365:7;10815:98:94;27027:321:92;27091:6;27086:94;27107:2;27103:1;:6;27086:94;;;27124:3;;:49;;-1:-1:-1;;;27124:49:92;;27137:11;27124:49;;;9355:25:113;;;9396:18;;;9389:34;27163:6:92;9439:18:113;;;9432:34;9482:18;;;9475:34;;;-1:-1:-1;;;;;27124:3:92;;;;:12;;9327:19:113;;27124:49:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27111:3:92;;;;:::i;:::-;;;;27086:94;;;-1:-1:-1;27185:5:92;;27201:3;;27185:31;;-1:-1:-1;;;27185:31:92;;-1:-1:-1;;;;;27185:5:92;;;;:13;;:31;;27201:3;;;27207:8;;27185:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6867:277:94:-;7022:3;;:21;;-1:-1:-1;;;7022:21:94;;-1:-1:-1;;;;;37167:15:113;;;7022:21:94;;;37149:34:113;37219:15;;;37199:18;;;37192:43;6968:4:94;;;;;;7022:3;;;;:10;;37084:18:113;;7022:21:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6980:63;;-1:-1:-1;6980:63:94;-1:-1:-1;5534:62:26;;;;;;7058:32:94;5847:72:27;;;;;;7058:6:94;:32;:::i;:::-;7057:67;;;;:::i;:::-;:81;;7133:5;7057:81;:::i;:::-;7049:90;6867:277;-1:-1:-1;;;;;;6867:277:94:o;2931:97:95:-;2980:43;;-1:-1:-1;;;2980:43:95;;2994:4;2980:43;;;46653:41:113;;;46710:18;;;46703:50;;;46769:18;;;46762:50;;;46828:18;;;46821:50;-1:-1:-1;;;;;46908:32:113;;46887:19;;;46880:61;-1:-1:-1;;;;;;;;;;;237:61:1;2980:13:95;;46625:19:113;;2980:43:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2891:177:96;3015:16;;;3029:1;3015:16;;;;;;;;;2966;;2992:20;;3015:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2992:39;;3046:1;3037:3;3041:1;3037:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;3060:3;2891:177;-1:-1:-1;;2891:177:96:o;2948:169:0:-;3023:9;3018:95;;-1:-1:-1;;;;;;;;;;;3073:3:0;3047:30;;;;;;:::i;:::-;;;;;;;;3085:21;3096:9;3085:10;:21::i;4812:172::-;4905:1;4900;:6;4896:84;;-1:-1:-1;;;;;;;;;;;4947:3:0;4921:30;;;;;;:::i;:::-;;;;;;;;4959:14;4968:1;4971;4959:8;:14::i;2363:802:94:-;2510:21;;2422:115;;2445:4;;2458:12;;2483:19;;2510:21;;;2422:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2415:4:94;:122;;-1:-1:-1;;;;;;2415:122:94;-1:-1:-1;;;;;2415:122:94;;;;;;;;;;2574:4;2641:22;;2551:118;;2587:13;;2613:20;;2641:22;;;;;2551:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2543:5:94;:126;;-1:-1:-1;;;;;;2543:126:94;-1:-1:-1;;;;;2543:126:94;;;;;;;;;2718:4;;2731:7;:24;2704:52;;2718:4;;;;;2543:126;2731:24;;2704:13;:52::i;:::-;2698:3;:58;;-1:-1:-1;;;;;;2698:58:94;-1:-1:-1;;;;;2698:58:94;;;;;;;;;2977:27;;;-1:-1:-1;;;2977:27:94;;;;:8;;2993;;2977:27;;;;;-1:-1:-1;;2977:27:94;;;;;;;2993:8;2698:58;2977:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3081:4:94;;3096:3;;3081:36;;-1:-1:-1;;;3081:36:94;;-1:-1:-1;;;;;3081:4:94;;;;-1:-1:-1;3081:12:94;;-1:-1:-1;3081:36:94;;-1:-1:-1;3096:3:94;;;-1:-1:-1;;3102:14:94;3081:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3123:5:94;;3139:3;;3123:37;;-1:-1:-1;;;3123:37:94;;-1:-1:-1;;;;;3123:5:94;;;;:13;;:37;;3139:3;;;-1:-1:-1;;3145:14:94;3123:37;;;:::i;8631:337::-;8730:9;8736:2;8730:5;:9::i;:::-;;8745;8751:2;8745:5;:9::i;:::-;-1:-1:-1;8782:18:94;;8760:52;;-1:-1:-1;;;8760:52:94;;-1:-1:-1;;;;;49781:15:113;;;8760:52:94;;;49763:34:113;49833:15;;;49813:18;;;49806:43;49865:18;;;49858:34;;;;8802:1:94;49908:18:113;;;49901:34;8805:6:94;49951:19:113;;;49944:35;8760:13:94;;;;;;49697:19:113;;8760:52:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8840:18:94;;8818:52;;-1:-1:-1;;;8818:52:94;;-1:-1:-1;;;;;49781:15:113;;;8818:52:94;;;49763:34:113;49833:15;;;49813:18;;;49806:43;49865:18;;;49858:34;;;;8860:1:94;49908:18:113;;;49901:34;8863:6:94;49951:19:113;;;49944:35;8818:13:94;;;;-1:-1:-1;8818:13:94;;-1:-1:-1;49697:19:113;;8818:52:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:28:1;261:34;;245:52;;237:61;;-1:-1:-1;;;;;8891:8:94;;8900:2;8911;-1:-1:-1;;;;;8904:17:94;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8904:19:94;;;;;;;;;;;;:::i;:::-;8891:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:28:1;261:34;;245:52;;237:61;;-1:-1:-1;;;;;8930:8:94;;8939:2;8950;-1:-1:-1;;;;;8943:17:94;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8943:19:94;;;;;;;;;;;;:::i;:::-;8930:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5747:115:5;5798:59;5853:2;5814:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5814:42:5;;;;;;;;;;;;;;-1:-1:-1;;;;;5814:42:5;-1:-1:-1;;;5814:42:5;;;5798:15;:59::i;6954:108:2:-;-1:-1:-1;;;;;;;;;;;7041:3:2;7015:30;;;;;;:::i;:::-;;;;;;;;7051:6;:4;:6::i;1475:611:96:-;1554:20;1854;1902:1;1894:10;;1906;1877:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1854:63;;1923:8;1954:1;1934:10;:17;:21;;;;:::i;:::-;1993:2;1989:16;;2012:20;;;1989:16;2012:20;;-1:-1:-1;2052:29:96;;;;;;;;;;;:::i;3063:203:95:-;3167:4;3181:63;3190:13;3205:15;3181:63;;;;;;;;;;;;;-1:-1:-1;;;3181:63:95;;;:8;:63::i;:::-;-1:-1:-1;3257:4:95;3063:203;;;;:::o;6276:172:0:-;6369:1;6364;:6;6360:84;;-1:-1:-1;;;;;;;;;;;6411:3:0;6385:30;;;;;;:::i;:::-;;;;;;;;6423:14;6432:1;6435;6423:8;:14::i;3302:226:95:-;3346:4;-1:-1:-1;;;;;3362:15:95;;3358:136;;-1:-1:-1;;;;;;;;;;;3392:37:95;;;;50792:2:113;50774:21;;;50831:2;50811:18;;;50804:30;50870:32;50865:2;50850:18;;50843:60;50935:2;50920:18;;50590:354;3392:37:95;;;;;;;;3442:31;;;51161:21:113;;;51218:1;51198:18;;;51191:29;-1:-1:-1;;;51251:2:113;51236:18;;51229:37;-1:-1:-1;;;;;51340:32:113;;51333:4;51318:20;;51311:62;3442:31:95;;;;;;;51298:3:113;3442:31:95;;;3481:6;:4;:6::i;:::-;-1:-1:-1;;;;;;3507:15:95;;;;3302:226::o;1434:57::-;1470:16;1480:5;1470:9;:16::i;1517:186::-;1560:10;:15;1579:1;1560:20;1556:143;;1599:15;;1590:25;;-1:-1:-1;;;1590:25:95;;-1:-1:-1;;;;;1599:15:95;;;1590:25;;;1048:51:113;-1:-1:-1;;;;;;;;;;;237:61:1;1590:8:95;;1021:18:113;;1590:25:95;868:237:113;1556:143:95;1632:10;:15;1651:1;1632:20;1628:71;;1676:15;;1662:30;;-1:-1:-1;;;1662:30:95;;-1:-1:-1;;;;;1676:15:95;;;1662:30;;;1048:51:113;-1:-1:-1;;;;;;;;;;;237:61:1;1662:13:95;;1021:18:113;;1662:30:95;868:237:113;2809:135:0;2865:9;2860:80;;-1:-1:-1;;;;;;;;;;;2889:30:0;;;;51586:2:113;51568:21;;;51625:2;51605:18;;;51598:30;51664:25;51659:2;51644:18;;51637:53;51722:2;51707:18;;51384:347;4580:228:0;4638:1;4633;:6;4629:175;;-1:-1:-1;;;;;;;;;;;4654:41:0;;;;51938:2:113;51920:21;;;51977:2;51957:18;;;51950:30;52016:34;52011:2;51996:18;;51989:62;-1:-1:-1;;;52082:2:113;52067:18;;52060:32;52124:3;52109:19;;51736:398;4654:41:0;;;;;;;;-1:-1:-1;;;;;;;;;;;4737:1:0;4708:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;4781:1:0;4752:31;;;;;;:::i;:::-;;;;;;;;4791:6;:4;:6::i;631:356:5:-;718:14;;583:42;834:2;821:16;;697:18;;718:14;821:16;583:42;873:5;853:124;844:133;;793:190;;631:356;:::o;2086:353:0:-;-1:-1:-1;;;;;;;;;;;2564:55:0;2637:16;2117:298;;2283:64;;;-1:-1:-1;;;;;;;;;;;2283:64:0;;;13164:51:113;;;-1:-1:-1;;;13231:18:113;;;13224:34;;;;2340:4:0;13274:18:113;;;13267:34;2148:11:0;;1459:61;2227:43;;13137:18:113;;2283:64:0;;;-1:-1:-1;;2283:64:0;;;;;;;;;;2192:165;;;2283:64;2192:165;;:::i;:::-;;;;-1:-1:-1;;2192:165:0;;;;;;;;;;2165:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2117:298:0;2420:7;:14;;-1:-1:-1;;2420:14:0;;;;;2086:353::o;13777:248::-;13944:1;13927:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13917:30;;;;;;13910:1;13893:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13883:30;;;;;;:64;13879:142;;-1:-1:-1;;;;;;;;;;;13988:3:0;13962:30;;;;;;:::i;:::-;;;;;;;;14000:14;14009:1;14012;14000:8;:14::i;6047:225::-;6105:1;6100;:6;6096:172;;-1:-1:-1;;;;;;;;;;;6121:40:0;;;;54006:2:113;53988:21;;;54045:2;54025:18;;;54018:30;54084:34;54079:2;54064:18;;54057:62;-1:-1:-1;;;54150:2:113;54135:18;;54128:31;54191:3;54176:19;;53804:397;6121:40:0;;;;;;;;6174:30;;;54418:21:113;;;54475:1;54455:18;;;54448:29;-1:-1:-1;;;54508:2:113;54493:18;;54486:39;54592:4;54577:20;;54570:36;;;6174:30:0;;-1:-1:-1;;;;;;;;;;;6174:30:0;;;;54557:3:113;6174:30:0;;;6217;;;54829:21:113;;;54886:1;54866:18;;;54859:29;;;;-1:-1:-1;;;54919:2:113;54904:18;;54897:39;55003:4;54988:20;;54981:36;;;-1:-1:-1;;;;;;;;;;;6217:30:0;54968:3:113;54953:19;6217:30:0;54617:406:113;959:444:95;1025:1;1007:10;:19;1050:17;;;-1:-1:-1;;;1050:17:95;;;;:4;;:15;;:17;;;;;;;;;;;;;;:4;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1032:15;:35;;-1:-1:-1;;;;;;1032:35:95;-1:-1:-1;;;;;1032:35:95;;;;;;;;;1104:4;1077:32;1073:326;;1180:4;-1:-1:-1;;;;;1180:15:95;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:15;;-1:-1:-1;;;;;1161:15:95;;;:36;;;1157:236;;1260:1;1242:10;:19;27388:464:92;27352:500::o;1157:236:95:-;1280:7;1276:117;;;1359:1;1341:10;:19;1370:14;;;-1:-1:-1;;;1370:14:95;;;;-1:-1:-1;;;;;;;;;;;237:61:1;1370:12:95;;:14;;;;;1341:15;;1370:14;;;;;;;1341:15;237:61:1;1370:14:95;;;;;;;;;;13463:310:0;13595:1;13578:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13568:30;;;;;;13561:1;13544:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;13534:30;;;;;;:64;13530:239;;-1:-1:-1;;;;;;;;;;;13613:43:0;;;;55494:2:113;55476:21;;;55533:2;55513:18;;;55506:30;55572:34;55567:2;55552:18;;55545:62;-1:-1:-1;;;55638:2:113;55623:18;;55616:34;55682:3;55667:19;;55292:400;13613:43:0;;;;;;;;-1:-1:-1;;;;;;;;;;;13700:1:0;13669:33;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;13746:1:0;13715:33;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;499:118:113:-;585:5;578:13;571:21;564:5;561:32;551:60;;607:1;604;597:12;622:241;678:6;731:2;719:9;710:7;706:23;702:32;699:52;;;747:1;744;737:12;699:52;786:9;773:23;805:28;827:5;805:28;:::i;1110:139::-;-1:-1:-1;;;;;1193:31:113;;1183:42;;1173:70;;1239:1;1236;1229:12;1254:571;1360:6;1368;1376;1429:2;1417:9;1408:7;1404:23;1400:32;1397:52;;;1445:1;1442;1435:12;1397:52;1484:9;1471:23;1503:39;1536:5;1503:39;:::i;:::-;1561:5;-1:-1:-1;1618:2:113;1603:18;;1590:32;1631:41;1590:32;1631:41;:::i;:::-;1691:7;-1:-1:-1;1750:2:113;1735:18;;1722:32;1763:30;1722:32;1763:30;:::i;:::-;1812:7;1802:17;;;1254:571;;;;;:::o;2038:127::-;2099:10;2094:3;2090:20;2087:1;2080:31;2130:4;2127:1;2120:15;2154:4;2151:1;2144:15;2170:275;2241:2;2235:9;2306:2;2287:13;;-1:-1:-1;;2283:27:113;2271:40;;2341:18;2326:34;;2362:22;;;2323:62;2320:88;;;2388:18;;:::i;:::-;2424:2;2417:22;2170:275;;-1:-1:-1;2170:275:113:o;2450:187::-;2499:4;2532:18;2524:6;2521:30;2518:56;;;2554:18;;:::i;:::-;-1:-1:-1;2620:2:113;2599:15;-1:-1:-1;;2595:29:113;2626:4;2591:40;;2450:187::o;2642:965::-;2729:6;2737;2745;2798:2;2786:9;2777:7;2773:23;2769:32;2766:52;;;2814:1;2811;2804:12;2766:52;2853:9;2840:23;2872:39;2905:5;2872:39;:::i;:::-;2930:5;-1:-1:-1;2987:2:113;2972:18;;2959:32;3000:41;2959:32;3000:41;:::i;:::-;3060:7;-1:-1:-1;3118:2:113;3103:18;;3090:32;3145:18;3134:30;;3131:50;;;3177:1;3174;3167:12;3131:50;3200:22;;3253:4;3245:13;;3241:27;-1:-1:-1;3231:55:113;;3282:1;3279;3272:12;3231:55;3318:2;3305:16;3343:49;3359:32;3388:2;3359:32;:::i;:::-;3343:49;:::i;:::-;3415:2;3408:5;3401:17;3455:7;3450:2;3445;3441;3437:11;3433:20;3430:33;3427:53;;;3476:1;3473;3466:12;3427:53;3531:2;3526;3522;3518:11;3513:2;3506:5;3502:14;3489:45;3575:1;3570:2;3565;3558:5;3554:14;3550:23;3543:34;3596:5;3586:15;;;;;2642:965;;;;;:::o;4066:182::-;4125:4;4158:18;4150:6;4147:30;4144:56;;;4180:18;;:::i;:::-;-1:-1:-1;4225:1:113;4221:14;4237:4;4217:25;;4066:182::o;4253:889::-;4336:6;4367:2;4410;4398:9;4389:7;4385:23;4381:32;4378:52;;;4426:1;4423;4416:12;4378:52;4466:9;4453:23;4499:18;4491:6;4488:30;4485:50;;;4531:1;4528;4521:12;4485:50;4554:22;;4607:4;4599:13;;4595:27;-1:-1:-1;4585:55:113;;4636:1;4633;4626:12;4585:55;4672:2;4659:16;4695:59;4711:42;4750:2;4711:42;:::i;4695:59::-;4788:15;;;4870:1;4866:10;;;;4858:19;;4854:28;;;4819:12;;;;4894:19;;;4891:39;;;4926:1;4923;4916:12;4891:39;4950:11;;;;4970:142;4986:6;4981:3;4978:15;4970:142;;;5052:17;;5040:30;;5003:12;;;;5090;;;;4970:142;;;5131:5;4253:889;-1:-1:-1;;;;;;;4253:889:113:o;5147:407::-;5240:6;5248;5256;5309:2;5297:9;5288:7;5284:23;5280:32;5277:52;;;5325:1;5322;5315:12;5277:52;5364:9;5351:23;5383:39;5416:5;5383:39;:::i;:::-;5441:5;5493:2;5478:18;;5465:32;;-1:-1:-1;5544:2:113;5529:18;;;5516:32;;5147:407;-1:-1:-1;;;5147:407:113:o;6828:404::-;6896:6;6904;6957:2;6945:9;6936:7;6932:23;6928:32;6925:52;;;6973:1;6970;6963:12;6925:52;7012:9;6999:23;7031:39;7064:5;7031:39;:::i;:::-;7089:5;-1:-1:-1;7146:2:113;7131:18;;7118:32;7159:41;7118:32;7159:41;:::i;:::-;7219:7;7209:17;;;6828:404;;;;;:::o;7703:339::-;7787:6;7795;7848:2;7836:9;7827:7;7823:23;7819:32;7816:52;;;7864:1;7861;7854:12;7816:52;7903:9;7890:23;7922:39;7955:5;7922:39;:::i;:::-;7980:5;8032:2;8017:18;;;;8004:32;;-1:-1:-1;;;7703:339:113:o;8488:308::-;-1:-1:-1;;;;;8714:32:113;;;;8696:51;;8778:2;8763:18;;8756:34;8684:2;8669:18;;8488:308::o;8801:245::-;8868:6;8921:2;8909:9;8900:7;8896:23;8892:32;8889:52;;;8937:1;8934;8927:12;8889:52;8969:9;8963:16;8988:28;9010:5;8988:28;:::i;9520:184::-;9590:6;9643:2;9631:9;9622:7;9618:23;9614:32;9611:52;;;9659:1;9656;9649:12;9611:52;-1:-1:-1;9682:16:113;;9520:184;-1:-1:-1;9520:184:113:o;10819:795::-;10878:3;10916:5;10910:12;10943:6;10938:3;10931:19;10969:4;10998:2;10993:3;10989:12;10982:19;;11035:2;11028:5;11024:14;11056:1;11077;11087:502;11103:6;11098:3;11095:15;11087:502;;;11166:13;;11205:3;11288:1;11302:205;11318:4;11313:3;11310:13;11302:205;;;11391:15;;11377:30;;11476:17;;;;11433:14;;;;11342:1;11333:11;11302:205;;;-1:-1:-1;;;11536:4:113;11527:14;;;;;11564:15;;;;11129:1;11120:11;11087:502;;;-1:-1:-1;11605:3:113;;10819:795;-1:-1:-1;;;;;;10819:795:113:o;11619:610::-;-1:-1:-1;;;;;11976:15:113;;;11958:34;;12028:15;;12023:2;12008:18;;12001:43;12080:3;12075:2;12060:18;;12053:31;;;11901:4;;12101:63;;12144:19;;12136:6;12101:63;:::i;:::-;12093:71;;12214:6;12207:14;12200:22;12195:2;12184:9;12180:18;12173:50;11619:610;;;;;;;:::o;12234:430::-;12340:6;12348;12356;12364;12372;12425:3;12413:9;12404:7;12400:23;12396:33;12393:53;;;12442:1;12439;12432:12;12393:53;-1:-1:-1;;12465:16:113;;12521:2;12506:18;;12500:25;12565:2;12550:18;;12544:25;12609:2;12594:18;;12588:25;12653:3;12638:19;;;12632:26;12465:16;;12500:25;;-1:-1:-1;12544:25:113;12588;-1:-1:-1;12632:26:113;;-1:-1:-1;12234:430:113;-1:-1:-1;12234:430:113:o;12669:127::-;12730:10;12725:3;12721:20;12718:1;12711:31;12761:4;12758:1;12751:15;12785:4;12782:1;12775:15;12801:125;12841:4;12869:1;12866;12863:8;12860:34;;;12874:18;;:::i;:::-;-1:-1:-1;12911:9:113;;12801:125::o;15877:579::-;-1:-1:-1;;;;;16236:15:113;;;16218:34;;16288:15;;;;16283:2;16268:18;;16261:43;16335:2;16320:18;;16313:34;;;;16378:2;16363:18;;16356:34;16434:14;;16427:22;16421:3;16406:19;;16399:51;16167:3;16152:19;;15877:579::o;16461:368::-;16558:6;16566;16574;16582;16635:3;16623:9;16614:7;16610:23;16606:33;16603:53;;;16652:1;16649;16642:12;16603:53;-1:-1:-1;;16675:16:113;;16731:2;16716:18;;16710:25;16775:2;16760:18;;16754:25;16819:2;16804:18;;;16798:25;16675:16;;16710:25;;-1:-1:-1;16798:25:113;;-1:-1:-1;16461:368:113;-1:-1:-1;16461:368:113:o;17302:252::-;-1:-1:-1;;;17511:37:113;;17499:2;17484:18;;17302:252::o;18475:623::-;18857:25;;;-1:-1:-1;;;;;18918:32:113;;;;18913:2;18898:18;;18891:60;18982:2;18967:18;;18960:34;19025:2;19010:18;;19003:34;-1:-1:-1;;;19068:3:113;19053:19;;19046:46;18844:3;18829:19;;18475:623::o;19365:629::-;19747:25;;;-1:-1:-1;;;;;19808:32:113;;;;19803:2;19788:18;;19781:60;19872:2;19857:18;;19850:34;19915:2;19900:18;;19893:34;-1:-1:-1;;;19958:3:113;19943:19;;19936:52;19734:3;19719:19;;19365:629::o;19999:344::-;20200:2;20182:21;;;20239:2;20219:18;;;20212:30;-1:-1:-1;;;20273:2:113;20258:18;;20251:51;20334:2;20319:18;;19999:344::o;20932:399::-;-1:-1:-1;;;;;21214:15:113;;;21196:34;;21266:15;;;;21261:2;21246:18;;21239:43;21313:2;21298:18;;21291:34;;;;21146:2;21131:18;;20932:399::o;23236:258::-;23308:1;23318:113;23332:6;23329:1;23326:13;23318:113;;;23408:11;;;23402:18;23389:11;;;23382:39;23354:2;23347:10;23318:113;;;23449:6;23446:1;23443:13;23440:48;;;-1:-1:-1;;23484:1:113;23466:16;;23459:27;23236:258::o;23499:::-;23541:3;23579:5;23573:12;23606:6;23601:3;23594:19;23622:63;23678:6;23671:4;23666:3;23662:14;23655:4;23648:5;23644:16;23622:63;:::i;:::-;23739:2;23718:15;-1:-1:-1;;23714:29:113;23705:39;;;;23746:4;23701:50;;23499:258;-1:-1:-1;;23499:258:113:o;23762:317::-;-1:-1:-1;;;;;23939:32:113;;23921:51;;24008:2;24003;23988:18;;23981:30;;;-1:-1:-1;;24028:45:113;;24054:18;;24046:6;24028:45;:::i;26245:127::-;26306:10;26301:3;26297:20;26294:1;26287:31;26337:4;26334:1;26327:15;26361:4;26358:1;26351:15;26377:636;26457:6;26510:2;26498:9;26489:7;26485:23;26481:32;26478:52;;;26526:1;26523;26516:12;26478:52;26559:9;26553:16;26592:18;26584:6;26581:30;26578:50;;;26624:1;26621;26614:12;26578:50;26647:22;;26700:4;26692:13;;26688:27;-1:-1:-1;26678:55:113;;26729:1;26726;26719:12;26678:55;26758:2;26752:9;26783:49;26799:32;26828:2;26799:32;:::i;26783:49::-;26855:2;26848:5;26841:17;26895:7;26890:2;26885;26881;26877:11;26873:20;26870:33;26867:53;;;26916:1;26913;26906:12;26867:53;26929:54;26980:2;26975;26968:5;26964:14;26959:2;26955;26951:11;26929:54;:::i;:::-;27002:5;26377:636;-1:-1:-1;;;;;26377:636:113:o;27018:470::-;27197:3;27235:6;27229:13;27251:53;27297:6;27292:3;27285:4;27277:6;27273:17;27251:53;:::i;:::-;27367:13;;27326:16;;;;27389:57;27367:13;27326:16;27423:4;27411:17;;27389:57;:::i;:::-;27462:20;;27018:470;-1:-1:-1;;;;27018:470:113:o;27493:429::-;27714:3;27752:6;27746:13;27768:53;27814:6;27809:3;27802:4;27794:6;27790:17;27768:53;:::i;:::-;-1:-1:-1;;;27843:16:113;;27868:19;;;-1:-1:-1;27914:1:113;27903:13;;27493:429;-1:-1:-1;27493:429:113:o;27927:135::-;27966:3;27987:17;;;27984:43;;28007:18;;:::i;:::-;-1:-1:-1;28054:1:113;28043:13;;27927:135::o;28852:422::-;28941:1;28984:5;28941:1;28998:270;29019:7;29009:8;29006:21;28998:270;;;29078:4;29074:1;29070:6;29066:17;29060:4;29057:27;29054:53;;;29087:18;;:::i;:::-;29137:7;29127:8;29123:22;29120:55;;;29157:16;;;;29120:55;29236:22;;;;29196:15;;;;28998:270;;;29002:3;28852:422;;;;;:::o;29279:806::-;29328:5;29358:8;29348:80;;-1:-1:-1;29399:1:113;29413:5;;29348:80;29447:4;29437:76;;-1:-1:-1;29484:1:113;29498:5;;29437:76;29529:4;29547:1;29542:59;;;;29615:1;29610:130;;;;29522:218;;29542:59;29572:1;29563:10;;29586:5;;;29610:130;29647:3;29637:8;29634:17;29631:43;;;29654:18;;:::i;:::-;-1:-1:-1;;29710:1:113;29696:16;;29725:5;;29522:218;;29824:2;29814:8;29811:16;29805:3;29799:4;29796:13;29792:36;29786:2;29776:8;29773:16;29768:2;29762:4;29759:12;29755:35;29752:77;29749:159;;;-1:-1:-1;29861:19:113;;;29893:5;;29749:159;29940:34;29965:8;29959:4;29940:34;:::i;:::-;30010:6;30006:1;30002:6;29998:19;29989:7;29986:32;29983:58;;;30021:18;;:::i;:::-;30059:20;;29279:806;-1:-1:-1;;;29279:806:113:o;30090:131::-;30150:5;30179:36;30206:8;30200:4;30179:36;:::i;30226:217::-;30266:1;30292;30282:132;;30336:10;30331:3;30327:20;30324:1;30317:31;30371:4;30368:1;30361:15;30399:4;30396:1;30389:15;30282:132;-1:-1:-1;30428:9:113;;30226:217::o;30448:128::-;30488:3;30519:1;30515:6;30512:1;30509:13;30506:39;;;30525:18;;:::i;:::-;-1:-1:-1;30561:9:113;;30448:128::o;30581:168::-;30621:7;30687:1;30683;30679:6;30675:14;30672:1;30669:21;30664:1;30657:9;30650:17;30646:45;30643:71;;;30694:18;;:::i;:::-;-1:-1:-1;30734:9:113;;30581:168::o;32818:274::-;32947:3;32985:6;32979:13;33001:53;33047:6;33042:3;33035:4;33027:6;33023:17;33001:53;:::i;:::-;33070:16;;;;;32818:274;-1:-1:-1;;32818:274:113:o;38752:371::-;-1:-1:-1;;;;;;38937:33:113;;38925:46;;38994:13;;38907:3;;39016:61;38994:13;39066:1;39057:11;;39050:4;39038:17;;39016:61;:::i;:::-;39097:16;;;;39115:1;39093:24;;38752:371;-1:-1:-1;;;38752:371:113:o;41201:273::-;41269:6;41322:2;41310:9;41301:7;41297:23;41293:32;41290:52;;;41338:1;41335;41328:12;41290:52;41370:9;41364:16;41420:4;41413:5;41409:16;41402:5;41399:27;41389:55;;41440:1;41437;41430:12;46122:291;46247:6;46255;46308:2;46296:9;46287:7;46283:23;46279:32;46276:52;;;46324:1;46321;46314:12;46276:52;-1:-1:-1;;46347:16:113;;46403:2;46388:18;;;46382:25;46347:16;;46382:25;;-1:-1:-1;46122:291:113:o;46952:446::-;47202:2;47191:9;47184:21;47241:1;47236:2;47225:9;47221:18;47214:29;-1:-1:-1;;;47274:2:113;47263:9;47259:18;47252:35;47325:3;47318:4;47307:9;47303:20;47296:33;47165:4;47346:46;47387:3;47376:9;47372:19;47364:6;47346:46;:::i;47529:1042::-;47614:12;;47579:3;;47669:1;47689:18;;;;47742;;;;47769:61;;47823:4;47815:6;47811:17;47801:27;;47769:61;47849:2;47897;47889:6;47886:14;47866:18;47863:38;47860:161;;47943:10;47938:3;47934:20;47931:1;47924:31;47978:4;47975:1;47968:15;48006:4;48003:1;47996:15;47860:161;101:19;;;153:4;144:14;;48107:18;48134:104;;;;48252:1;48247:318;;;;48100:465;;48134:104;-1:-1:-1;;48169:24:113;;48155:39;;48214:14;;;;-1:-1:-1;48134:104:113;;48247:318;47476:1;47469:14;;;47513:4;47500:18;;48341:1;48355:167;48369:6;48366:1;48363:13;48355:167;;;48449:14;;48434:13;;;48427:37;48492:16;;;;48384:10;;48355:167;;;48542:13;;;-1:-1:-1;;48100:465:113;;;;;;;;47529:1042;;;;:::o;48576:578::-;-1:-1:-1;;;;;48827:32:113;;48809:51;;48896:3;48891:2;48876:18;;48869:31;;;-1:-1:-1;;48923:54:113;;48957:19;;48949:6;48923:54;:::i;:::-;49025:9;49017:6;49013:22;49008:2;48997:9;48993:18;48986:50;49053:41;49087:6;49079;49053:41;:::i;:::-;49045:49;;;49142:4;49134:6;49130:17;49125:2;49114:9;49110:18;49103:45;48576:578;;;;;;;:::o;49990:220::-;50139:2;50128:9;50121:21;50102:4;50159:45;50200:2;50189:9;50185:18;50177:6;50159:45;:::i;50215:370::-;50418:10;50414:15;50406:6;50402:28;50397:3;50390:41;50372:3;50460:6;50454:13;50476:62;50531:6;50526:2;50521:3;50517:12;50510:4;50502:6;50498:17;50476:62;:::i;:::-;50558:16;;;;50576:2;50554:25;;50215:370;-1:-1:-1;;;50215:370:113:o;52303:348::-;52533:2;52522:9;52515:21;52496:4;52553:49;52598:2;52587:9;52583:18;52216:2;52204:15;;-1:-1:-1;;;52244:4:113;52235:14;;52228:36;52289:2;52280:12;;52139:159;52553:49;52545:57;;52638:6;52633:2;52622:9;52618:18;52611:34;52303:348;;;;:::o;52820:::-;53050:2;53039:9;53032:21;53013:4;53070:49;53115:2;53104:9;53100:18;52733:2;52721:15;;-1:-1:-1;;;52761:4:113;52752:14;;52745:36;52806:2;52797:12;;52656:159;55028:259;55098:6;55151:2;55139:9;55130:7;55126:23;55122:32;55119:52;;;55167:1;55164;55157:12;55119:52;55199:9;55193:16;55218:39;55251:5;55218:39;:::i;55697:440::-;55947:2;55936:9;55929:21;55910:4;55973:49;56018:2;56007:9;56003:18;52216:2;52204:15;;-1:-1:-1;;;52244:4:113;52235:14;;52228:36;52289:2;52280:12;;52139:159;55973:49;56070:9;56062:6;56058:22;56053:2;56042:9;56038:18;56031:50;56098:33;56124:6;56116;56098:33;:::i;56142:440::-;56392:2;56381:9;56374:21;56355:4;56418:49;56463:2;56452:9;56448:18;52733:2;52721:15;;-1:-1:-1;;;52761:4:113;52752:14;;52745:36;52806:2;52797:12;;52656:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "echoSender()": "1e91f8cb",
    "failed()": "ba414fa6",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "test_detect_lowgas()": "7d4258d1",
    "test_empty_wants_fillGives()": "ce980d16",
    "test_empty_wants_fillWants()": "e8205853",
    "test_fillGives_at_0_wants_works()": "73e33e1b",
    "test_maker_has_not_enough_base_fails_order()": "dc46f1de",
    "test_maker_revert_is_logged()": "b67fc16e",
    "test_marketOrder_on_empty_book_does_not_leave_lock_on()": "bec2e7d3",
    "test_marketOrder_on_empty_book_does_not_revert()": "e0c77339",
    "test_market_order_stops_for_filled_after_offer()": "f4635d04",
    "test_market_order_stops_for_filled_mid_offer()": "d080b629",
    "test_market_order_stops_for_high_price()": "6e980fa9",
    "test_mo_fillGives()": "9364ce1c",
    "test_mo_fillGivesAll_no_approved_fails()": "4cd73ad6",
    "test_mo_fillGivesAll_succeeds()": "8a0dc9e8",
    "test_mo_fillWants()": "ef8febf6",
    "test_multiple_snipes_fillWants()": "bad9a473",
    "test_partial_fill()": "835f7cde",
    "test_recursion_depth_is_acceptable()": "ff762768",
    "test_simple_fillGives()": "856a63d1",
    "test_simple_fillWants()": "0e16461e",
    "test_simple_marketOrder()": "e9172577",
    "test_simple_snipe()": "efd59015",
    "test_snipe_fails_if_price_has_changed()": "6060908a",
    "test_snipe_fillGives()": "3b629aed",
    "test_snipe_fillGives_zero()": "71b980ed",
    "test_snipe_fillWants()": "bdb48ac3",
    "test_snipe_fillWants_zero()": "959d9fb7",
    "test_snipe_free_offer_fillGives_respects_spec()": "339e7171",
    "test_snipe_free_offer_fillWants_respects_spec()": "8d6efbcb",
    "test_snipe_on_higher_gas_fails()": "64a0bf40",
    "test_snipe_on_higher_price_fails()": "2f4ebf8e",
    "test_snipe_on_lower_price_succeeds()": "9737b577",
    "test_snipe_reverts_if_taker_is_blacklisted_for_base()": "8f3237ee",
    "test_snipe_reverts_if_taker_is_blacklisted_for_quote()": "cb228e2a",
    "test_snipe_with_0_wants_ejects_offer()": "a1b78bc8",
    "test_takerGives_is_zero_succeeds()": "0b851352",
    "test_takerWants_is_zero_succeeds()": "2c4e73cd",
    "test_takerWants_wider_than_160_bits_fails_marketOrder()": "a218492e",
    "test_taker_cannot_drain_maker()": "93e54d9b",
    "test_taker_collects_failing_offer()": "0c4ba05d",
    "test_taker_has_no_quote_fails_order()": "53cc12bd",
    "test_taker_hasnt_approved_base_succeeds_order_with_fee()": "e55e2f6f",
    "test_taker_hasnt_approved_base_succeeds_order_wo_fee()": "0941ba78",
    "test_taker_hasnt_approved_quote_fails_order()": "1dd051c2",
    "test_taker_reimbursed_if_maker_doesnt_pay()": "13599121",
    "test_taker_reimbursed_if_maker_is_blacklisted_for_base()": "374b46f5",
    "test_taker_reimbursed_if_maker_is_blacklisted_for_quote()": "00c4655e",
    "test_taker_reimbursed_if_maker_reverts()": "0f8cadb3",
    "test_taker_reverts_on_penalty_triggers_revert()": "d9a725cf",
    "test_unsafe_gas_left_fails_order()": "2e7ed0dd",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/test/core/TakerOperations.t.sol",
    "id": 68542,
    "exportedSymbols": {
      "AbstractMangrove": [22211],
      "AccessControlled": [42692],
      "DSTest": [1786],
      "HasMgvEvents": [24088],
      "IERC20": [24224],
      "IMaker": [24106],
      "IMgvMonitor": [24146],
      "ITaker": [24118],
      "InvertedMangrove": [22954],
      "MakerDeployer": [71682],
      "Mangrove": [23080],
      "MangroveTest": [69891],
      "MgvLib": [23913],
      "P": [23884],
      "Script": [2022],
      "StdStorage": [3553],
      "TakerOperationsTest": [68541],
      "Test": [3455],
      "Test2": [70380],
      "TestMaker": [72397],
      "TestMoriartyMaker": [72646],
      "TestTaker": [72989],
      "TestToken": [75210],
      "TrivialTestMaker": [71717],
      "Utilities": [71483],
      "Vm": [5425],
      "console": [13489],
      "console2": [21553],
      "csl": [21553],
      "stdError": [3525],
      "stdMath": [4796],
      "stdStorage": [4655]
    },
    "nodeType": "SourceUnit",
    "src": "38:31536:92",
    "nodes": [
      {
        "id": 64304,
        "nodeType": "PragmaDirective",
        "src": "38:24:92",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 64305,
        "nodeType": "ImportDirective",
        "src": "64:39:92",
        "absolutePath": "packages/mangrove-solidity/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68542,
        "sourceUnit": 69892,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 68541,
        "nodeType": "ContractDefinition",
        "src": "266:31307:92",
        "nodes": [
          {
            "id": 64310,
            "nodeType": "VariableDeclaration",
            "src": "315:13:92",
            "constant": false,
            "mutability": "mutable",
            "name": "mkr",
            "nameLocation": "325:3:92",
            "scope": 68541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$72397",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 64309,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64308,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72397,
                "src": "315:9:92"
              },
              "referencedDeclaration": 72397,
              "src": "315:9:92",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$72397",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 64313,
            "nodeType": "VariableDeclaration",
            "src": "332:19:92",
            "constant": false,
            "mutability": "mutable",
            "name": "refusemkr",
            "nameLocation": "342:9:92",
            "scope": 68541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$72397",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 64312,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64311,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72397,
                "src": "332:9:92"
              },
              "referencedDeclaration": 72397,
              "src": "332:9:92",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$72397",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 64316,
            "nodeType": "VariableDeclaration",
            "src": "355:17:92",
            "constant": false,
            "mutability": "mutable",
            "name": "failmkr",
            "nameLocation": "365:7:92",
            "scope": 68541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$72397",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 64315,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64314,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72397,
                "src": "355:9:92"
              },
              "referencedDeclaration": 72397,
              "src": "355:9:92",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$72397",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 64319,
            "nodeType": "VariableDeclaration",
            "src": "377:26:92",
            "constant": false,
            "mutability": "mutable",
            "name": "refuseReceive",
            "nameLocation": "382:13:92",
            "scope": 68541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 64317,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "377:4:92",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 64318,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "398:5:92",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "id": 64330,
            "nodeType": "FunctionDefinition",
            "src": "408:83:92",
            "body": {
              "id": 64329,
              "nodeType": "Block",
              "src": "435:56:92",
              "statements": [
                {
                  "condition": {
                    "id": 64322,
                    "name": "refuseReceive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64319,
                    "src": "445:13:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64328,
                  "nodeType": "IfStatement",
                  "src": "441:46:92",
                  "trueBody": {
                    "id": 64327,
                    "nodeType": "Block",
                    "src": "460:27:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6e6f",
                              "id": 64324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "475:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
                                "typeString": "literal_string \"no\""
                              },
                              "value": "no"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
                                "typeString": "literal_string \"no\""
                              }
                            ],
                            "id": 64323,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-19, -19],
                            "referencedDeclaration": -19,
                            "src": "468:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 64325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "468:12:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 64326,
                        "nodeType": "ExpressionStatement",
                        "src": "468:12:92"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 64320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:92"
            },
            "returnParameters": {
              "id": 64321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:92"
            },
            "scope": 68541,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64493,
            "nodeType": "FunctionDefinition",
            "src": "495:798:92",
            "body": {
              "id": 64492,
              "nodeType": "Block",
              "src": "528:765:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64334,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "534:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TakerOperationsTest_$68541_$",
                          "typeString": "type(contract super TakerOperationsTest)"
                        }
                      },
                      "id": 64336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68801,
                      "src": "534:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 64337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:13:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64338,
                  "nodeType": "ExpressionStatement",
                  "src": "534:13:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64343,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "592:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64342,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "590:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "590:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 64345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "598:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64339,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "577:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "577:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "577:23:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64347,
                  "nodeType": "ExpressionStatement",
                  "src": "577:23:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64352,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "622:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64351,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "620:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "620:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 64354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "628:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64348,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "606:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "606:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64356,
                  "nodeType": "ExpressionStatement",
                  "src": "606:24:92"
                },
                {
                  "expression": {
                    "id": 64367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64357,
                      "name": "mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64310,
                      "src": "637:3:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64360,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "656:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64359,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "654:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "654:7:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 64363,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "665:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64362,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "663:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "663:8:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6d616b6572",
                          "id": 64365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          },
                          "value": "maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          }
                        ],
                        "id": 64358,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69643,
                        "src": "643:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$72397_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 64366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "643:38:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "637:44:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 64368,
                  "nodeType": "ExpressionStatement",
                  "src": "637:44:92"
                },
                {
                  "expression": {
                    "id": 64379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64369,
                      "name": "refusemkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64313,
                      "src": "687:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64372,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "712:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64371,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "710:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "710:7:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 64375,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "721:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64374,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "719:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "719:8:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "7265667573696e67206d6b72",
                          "id": 64377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "729:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8d7f3588cf8e59dac649ba47fd63952b0fdff8a808cb7f1c899757df755d340",
                            "typeString": "literal_string \"refusing mkr\""
                          },
                          "value": "refusing mkr"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b8d7f3588cf8e59dac649ba47fd63952b0fdff8a808cb7f1c899757df755d340",
                            "typeString": "literal_string \"refusing mkr\""
                          }
                        ],
                        "id": 64370,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69643,
                        "src": "699:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$72397_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 64378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "699:45:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "687:57:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 64380,
                  "nodeType": "ExpressionStatement",
                  "src": "687:57:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 64384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "771:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64381,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64313,
                        "src": "750:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldFail",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71830,
                      "src": "750:20:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 64385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "750:26:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64386,
                  "nodeType": "ExpressionStatement",
                  "src": "750:26:92"
                },
                {
                  "expression": {
                    "id": 64397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64387,
                      "name": "failmkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64316,
                      "src": "782:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64390,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "805:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64389,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "803:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "803:7:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 64393,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "814:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 64392,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69855,
                            "src": "812:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 64394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "812:8:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "726576657274696e67206d6b72",
                          "id": 64395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "822:15:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f9c2ce2eccd176d50f75887ec5e311af95a677bfe1c60742a7c5c72aab895b4e",
                            "typeString": "literal_string \"reverting mkr\""
                          },
                          "value": "reverting mkr"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f9c2ce2eccd176d50f75887ec5e311af95a677bfe1c60742a7c5c72aab895b4e",
                            "typeString": "literal_string \"reverting mkr\""
                          }
                        ],
                        "id": 64388,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69643,
                        "src": "792:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$72397_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 64396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "792:46:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$72397",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "782:56:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$72397",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 64398,
                  "nodeType": "ExpressionStatement",
                  "src": "782:56:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 64402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "865:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64399,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64316,
                        "src": "844:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71820,
                      "src": "844:20:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 64403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:26:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64404,
                  "nodeType": "ExpressionStatement",
                  "src": "844:26:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 64408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "894:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64405,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "877:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72313,
                      "src": "877:16:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 64409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:26:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64410,
                  "nodeType": "ExpressionStatement",
                  "src": "877:26:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64414,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "924:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 64415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "930:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64411,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "909:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71869,
                      "src": "909:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 64416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64417,
                  "nodeType": "ExpressionStatement",
                  "src": "909:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 64421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "969:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64418,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64313,
                        "src": "946:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72313,
                      "src": "946:22:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 64422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64423,
                  "nodeType": "ExpressionStatement",
                  "src": "946:31:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64427,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "1004:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 64428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64424,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64313,
                        "src": "983:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71869,
                      "src": "983:20:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 64429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:36:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64430,
                  "nodeType": "ExpressionStatement",
                  "src": "983:36:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 64434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1046:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64431,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64316,
                        "src": "1025:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72313,
                      "src": "1025:20:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 64435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64436,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:29:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64440,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "1079:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 64441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64437,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64316,
                        "src": "1060:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71869,
                      "src": "1060:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$24224_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 64442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:34:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64443,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:34:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64449,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "1119:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 64448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1111:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64447,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1111:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1111:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1125:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64444,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "1101:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75167,
                      "src": "1101:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 64452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:32:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64453,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:32:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64459,
                            "name": "failmkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64316,
                            "src": "1157:7:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 64458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1149:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64457,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1149:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1149:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1167:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64454,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "1139:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75167,
                      "src": "1139:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 64462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:36:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64463,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:36:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64469,
                            "name": "refusemkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64313,
                            "src": "1199:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 64468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1191:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1191:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1191:18:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1211:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64464,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "1181:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75167,
                      "src": "1181:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 64472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:38:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64473,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:38:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64478,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1239:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64477,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "1237:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1237:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64474,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "1226:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75167,
                      "src": "1226:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 64481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:28:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64482,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:28:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64487,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1273:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64486,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "1271:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1271:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 64489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1280:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64483,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "1260:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75167,
                      "src": "1260:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 64490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:28:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64491,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:28:92"
                }
              ]
            },
            "baseFunctions": [68801],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "504:5:92",
            "overrides": {
              "id": 64332,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "519:8:92"
            },
            "parameters": {
              "id": 64331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:2:92"
            },
            "returnParameters": {
              "id": 64333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64575,
            "nodeType": "FunctionDefinition",
            "src": "1297:608:92",
            "body": {
              "id": 64574,
              "nodeType": "Block",
              "src": "1368:537:92",
              "statements": [
                {
                  "assignments": [64497],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64497,
                      "mutability": "mutable",
                      "name": "weiBalanceBefore",
                      "nameLocation": "1379:16:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64574,
                      "src": "1374:21:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64496,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1374:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64504,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64501,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1414:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64500,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "1412:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1412:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 64498,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "1398:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23591,
                      "src": "1398:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 64503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:22:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1374:46:92"
                },
                {
                  "assignments": [64506],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64506,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "1431:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64574,
                      "src": "1426:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64505,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1426:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64514,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 64509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1450:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 64510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1459:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 64511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1468:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 64512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64507,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "1437:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "1437:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 64513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1426:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 64518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1496:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 64515,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "1485:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "1485:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 64519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64520,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64525,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "1577:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64524,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "1575:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1575:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 64527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1583:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64521,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "1561:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "1561:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64529,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64534,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1616:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64533,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "1614:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1614:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 64530,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "1597:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75196,
                      "src": "1597:16:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 64536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:25:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64537,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:25:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 64541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 64538,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1629:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 64540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "1629:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 64542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64543,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64548,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "1695:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64547,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "1693:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1693:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64551,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "1710:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64550,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "1708:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1708:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 64554,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64506,
                                "src": "1738:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 64555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1743:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 64556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1752:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 64557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1761:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 64558,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1737:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 64553,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "1724:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 64559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1724:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1778:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64544,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "1675:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "1675:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 64561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 64562,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:113:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64564,
                        "name": "weiBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64497,
                        "src": "1810:16:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64568,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1850:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 64567,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69838,
                              "src": "1848:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 64569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1848:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 64565,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "1834:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 64566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23591,
                          "src": "1834:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 64570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1834:22:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742074616b6520626f756e7479",
                        "id": 64571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1864:30:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        },
                        "value": "Taker should not take bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        }
                      ],
                      "id": 64563,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "1794:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64573,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:106:92"
                }
              ]
            },
            "functionSelector": "cb228e2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_reverts_if_taker_is_blacklisted_for_quote",
            "nameLocation": "1306:52:92",
            "parameters": {
              "id": 64494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:2:92"
            },
            "returnParameters": {
              "id": 64495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64657,
            "nodeType": "FunctionDefinition",
            "src": "1909:606:92",
            "body": {
              "id": 64656,
              "nodeType": "Block",
              "src": "1979:536:92",
              "statements": [
                {
                  "assignments": [64579],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64579,
                      "mutability": "mutable",
                      "name": "weiBalanceBefore",
                      "nameLocation": "1990:16:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64656,
                      "src": "1985:21:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64578,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1985:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64586,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64583,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2025:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64582,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "2023:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2023:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 64580,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "2009:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23591,
                      "src": "2009:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 64585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:22:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1985:46:92"
                },
                {
                  "assignments": [64588],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64588,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "2042:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64656,
                      "src": "2037:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64587,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2037:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64596,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 64591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2061:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 64592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 64593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2079:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 64594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64589,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "2048:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "2048:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 64595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2037:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 64600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2107:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 64597,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "2096:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "2096:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 64601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64602,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64607,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "2188:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64606,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "2186:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2186:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 64609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2194:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64603,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "2172:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "2172:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64611,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64616,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2226:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64615,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "2224:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2224:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 64612,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "2208:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75196,
                      "src": "2208:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 64618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64619,
                  "nodeType": "ExpressionStatement",
                  "src": "2208:24:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f4d67764661696c546f50617954616b6572",
                        "id": 64623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2255:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6313ea6e740c0f0fd75f8a76ca28951aa8b0c06736132ac41079d4861fb8a868",
                          "typeString": "literal_string \"mgv/MgvFailToPayTaker\""
                        },
                        "value": "mgv/MgvFailToPayTaker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6313ea6e740c0f0fd75f8a76ca28951aa8b0c06736132ac41079d4861fb8a868",
                          "typeString": "literal_string \"mgv/MgvFailToPayTaker\""
                        }
                      ],
                      "expression": {
                        "id": 64620,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2239:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 64622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "2239:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 64624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2239:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64625,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64630,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "2305:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64629,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2303:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2303:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64633,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "2320:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64632,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2318:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2318:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 64636,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64588,
                                "src": "2348:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 64637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2353:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 64638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2362:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 64639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2371:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 64640,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2347:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 64635,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "2334:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 64641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2334:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2388:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64626,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "2285:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "2285:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 64643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2285:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 64644,
                  "nodeType": "ExpressionStatement",
                  "src": "2285:113:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64646,
                        "name": "weiBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64579,
                        "src": "2420:16:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64650,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2460:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 64649,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69838,
                              "src": "2458:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 64651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2458:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 64647,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "2444:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 64648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23591,
                          "src": "2444:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 64652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2444:22:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742074616b6520626f756e7479",
                        "id": 64653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:30:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        },
                        "value": "Taker should not take bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        }
                      ],
                      "id": 64645,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "2404:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64655,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:106:92"
                }
              ]
            },
            "functionSelector": "8f3237ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_reverts_if_taker_is_blacklisted_for_base",
            "nameLocation": "1918:51:92",
            "parameters": {
              "id": 64576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:2:92"
            },
            "returnParameters": {
              "id": 64577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64749,
            "nodeType": "FunctionDefinition",
            "src": "2519:719:92",
            "body": {
              "id": 64748,
              "nodeType": "Block",
              "src": "2575:663:92",
              "statements": [
                {
                  "assignments": [64661],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64661,
                      "mutability": "mutable",
                      "name": "weiBalanceBefore",
                      "nameLocation": "2586:16:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64748,
                      "src": "2581:21:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64660,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2581:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64668,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64665,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2621:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64664,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "2619:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2619:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 64662,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "2605:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23591,
                      "src": "2605:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 64667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:22:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2581:46:92"
                },
                {
                  "assignments": [64670],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64670,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "2638:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64748,
                      "src": "2633:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64669,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2633:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64678,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 64673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2657:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 64674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2666:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 64675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2675:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 64676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2684:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64671,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "2644:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "2644:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 64677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2633:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 64682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2703:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 64679,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "2692:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "2692:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 64683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64684,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64689,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "2784:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64688,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "2782:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2782:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 64691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2790:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64685,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "2768:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "2768:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64693,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:30:92"
                },
                {
                  "assignments": [64695, 64697, 64699, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64695,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "2810:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64748,
                      "src": "2805:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64694,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2805:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 64697,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "2826:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64748,
                      "src": "2821:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64696,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2821:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 64699,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "2836:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64748,
                      "src": "2831:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64698,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2831:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 64717,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64703,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "2868:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64702,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2866:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2866:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64706,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "2883:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64705,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "2881:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2881:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 64709,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64670,
                                "src": "2911:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 64710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2916:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "302e35",
                                "id": 64711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2925:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 64712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2936:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 64713,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2910:34:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 64708,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "2897:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 64714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2897:48:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 64715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64700,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "2848:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "2848:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 64716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:116:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2804:160:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64719,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64695,
                          "src": "2981:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 64720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2994:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2981:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 64722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 64718,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "2970:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 64723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2970:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64724,
                  "nodeType": "ExpressionStatement",
                  "src": "2970:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64726,
                        "name": "weiBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64661,
                        "src": "3039:16:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64730,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3079:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 64729,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69838,
                              "src": "3077:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 64731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3077:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 64727,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "3063:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 64728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23591,
                          "src": "3063:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 64732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3063:22:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742074616b6520626f756e7479",
                        "id": 64733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3093:30:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        },
                        "value": "Taker should not take bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        }
                      ],
                      "id": 64725,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "3023:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64735,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:106:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 64743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 64739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 64737,
                                "name": "got",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64697,
                                "src": "3154:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 64738,
                                "name": "gave",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64699,
                                "src": "3161:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3154:11:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 64742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 64740,
                                "name": "gave",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64699,
                                "src": "3169:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 64741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3177:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3169:9:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3154:24:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 64744,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3153:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742067697665206f722074616b6520616e797468696e67",
                        "id": 64745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3187:40:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e9c9661a21c47f4d23df0a818c31b0529491b5b1ab139e165c7794f6111ad55",
                          "typeString": "literal_string \"Taker should not give or take anything\""
                        },
                        "value": "Taker should not give or take anything"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e9c9661a21c47f4d23df0a818c31b0529491b5b1ab139e165c7794f6111ad55",
                          "typeString": "literal_string \"Taker should not give or take anything\""
                        }
                      ],
                      "id": 64736,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "3135:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 64746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3135:98:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64747,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:98:92"
                }
              ]
            },
            "functionSelector": "6060908a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fails_if_price_has_changed",
            "nameLocation": "2528:37:92",
            "parameters": {
              "id": 64658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2565:2:92"
            },
            "returnParameters": {
              "id": 64659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64827,
            "nodeType": "FunctionDefinition",
            "src": "3242:447:92",
            "body": {
              "id": 64826,
              "nodeType": "Block",
              "src": "3290:399:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64756,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "3313:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64755,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3311:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3311:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64759,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "3322:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64758,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3320:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3320:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 64761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3330:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64752,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "3296:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23325,
                      "src": "3296:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 64762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:36:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64763,
                  "nodeType": "ExpressionStatement",
                  "src": "3296:36:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64768,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "3354:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64767,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "3352:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3352:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 64770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3360:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64764,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "3338:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "3338:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64772,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:30:92"
                },
                {
                  "assignments": [64774],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64774,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "3379:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64826,
                      "src": "3374:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64773,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3374:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64782,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "39",
                        "id": 64777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3398:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      {
                        "hexValue": "3130",
                        "id": 64778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3401:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 64779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3405:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 64780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3414:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64775,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "3385:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "3385:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 64781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3374:42:92"
                },
                {
                  "assignments": [64784],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64784,
                      "mutability": "mutable",
                      "name": "oldBal",
                      "nameLocation": "3427:6:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64826,
                      "src": "3422:11:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64783,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3422:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64791,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64788,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3454:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64787,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "3452:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3452:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 64785,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "3436:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "3436:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 64790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3436:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3422:38:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64796,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "3486:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64795,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3484:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3484:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64799,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "3501:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64798,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3499:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3499:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 64802,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64774,
                                "src": "3529:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 64803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3534:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3135",
                                "id": 64804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3537:8:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15000000000000000000_by_1",
                                  "typeString": "int_const 15000000000000000000"
                                },
                                "value": "15"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 64805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3547:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 64806,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3528:27:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 64801,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "3515:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 64807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3515:41:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3564:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64792,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "3466:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "3466:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 64809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3466:108:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 64810,
                  "nodeType": "ExpressionStatement",
                  "src": "3466:108:92"
                },
                {
                  "assignments": [64812],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64812,
                      "mutability": "mutable",
                      "name": "newBal",
                      "nameLocation": "3585:6:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64826,
                      "src": "3580:11:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64811,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3580:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64819,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64816,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3612:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 64815,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "3610:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 64817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3610:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 64813,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "3594:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "3594:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 64818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3580:38:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64821,
                        "name": "oldBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64784,
                        "src": "3633:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64822,
                        "name": "newBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64812,
                        "src": "3641:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6f6c6442616c2073686f756c64206265207374726963746c7920686967686572",
                        "id": 64823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3649:34:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb4d114dd13bb66ae910373095cc5ab0c739d67ae0691bdc0e797cf9f65ec78d",
                          "typeString": "literal_string \"oldBal should be strictly higher\""
                        },
                        "value": "oldBal should be strictly higher"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb4d114dd13bb66ae910373095cc5ab0c739d67ae0691bdc0e797cf9f65ec78d",
                          "typeString": "literal_string \"oldBal should be strictly higher\""
                        }
                      ],
                      "id": 64820,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [693, 718, 748, 773],
                      "referencedDeclaration": 718,
                      "src": "3624:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:60:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64825,
                  "nodeType": "ExpressionStatement",
                  "src": "3624:60:92"
                }
              ]
            },
            "functionSelector": "93e54d9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_cannot_drain_maker",
            "nameLocation": "3251:29:92",
            "parameters": {
              "id": 64750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3280:2:92"
            },
            "returnParameters": {
              "id": 64751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3290:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64899,
            "nodeType": "FunctionDefinition",
            "src": "3693:555:92",
            "body": {
              "id": 64898,
              "nodeType": "Block",
              "src": "3732:516:92",
              "statements": [
                {
                  "assignments": [64831],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64831,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "3743:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64898,
                      "src": "3738:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64830,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3738:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64839,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 64834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 64835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 64836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3780:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 64837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3789:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 64832,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "3749:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "3749:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 64838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3738:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 64843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3808:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 64840,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "3797:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "3797:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 64844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64845,
                  "nodeType": "ExpressionStatement",
                  "src": "3797:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64850,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "3889:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64849,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "3887:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3887:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 64852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64846,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "3873:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "3873:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64854,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:30:92"
                },
                {
                  "assignments": [64856, 64858, 64860, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64856,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "3915:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64898,
                      "src": "3910:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64855,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3910:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 64858,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "3931:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64898,
                      "src": "3926:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64857,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3926:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 64860,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "3941:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 64898,
                      "src": "3936:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64859,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3936:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 64878,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64864,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "3973:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64863,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3971:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3971:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64867,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "3988:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 64866,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "3986:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 64868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3986:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 64870,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64831,
                                "src": "4016:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e35",
                                "id": 64871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4021:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "31",
                                "id": 64872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4032:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 64873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4041:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 64874,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4015:34:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 64869,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "4002:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 64875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4002:48:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 64876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4058:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64861,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "3953:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 64862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "3953:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 64877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3953:115:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3909:159:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64880,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64856,
                          "src": "4085:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 64881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4098:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4085:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 64883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4101:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 64879,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "4074:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 64884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4074:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64885,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:51:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64887,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64858,
                        "src": "4140:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 64888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 64889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4156:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 64886,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4131:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:52:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64891,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64893,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64860,
                        "src": "4198:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 64894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4204:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f74206769766520656e6f756768",
                        "id": 64895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4215:27:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        },
                        "value": "Taker did not give enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        }
                      ],
                      "id": 64892,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "4189:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 64896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4189:54:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64897,
                  "nodeType": "ExpressionStatement",
                  "src": "4189:54:92"
                }
              ]
            },
            "functionSelector": "bdb48ac3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillWants",
            "nameLocation": "3702:20:92",
            "parameters": {
              "id": 64828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3722:2:92"
            },
            "returnParameters": {
              "id": 64829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3732:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65099,
            "nodeType": "FunctionDefinition",
            "src": "4252:1100:92",
            "body": {
              "id": 65098,
              "nodeType": "Block",
              "src": "4301:1051:92",
              "statements": [
                {
                  "assignments": [64903],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64903,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "4312:1:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65098,
                      "src": "4307:6:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64902,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4307:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64904,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4307:6:92"
                },
                {
                  "assignments": [64909],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64909,
                      "mutability": "mutable",
                      "name": "ofrs",
                      "nameLocation": "4333:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65098,
                      "src": "4319:18:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 64907,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4319:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 64908,
                        "nodeType": "ArrayTypeName",
                        "src": "4319:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64915,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 64913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4351:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 64912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4340:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 64910,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4344:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 64911,
                        "nodeType": "ArrayTypeName",
                        "src": "4344:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 64914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:13:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4319:34:92"
                },
                {
                  "expression": {
                    "id": 64927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 64916,
                        "name": "ofrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64909,
                        "src": "4359:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 64919,
                      "indexExpression": {
                        "id": 64918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4364:3:92",
                        "subExpression": {
                          "id": 64917,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64903,
                          "src": "4364:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4359:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 64922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4384:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 64923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4393:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 64924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4402:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 64925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4411:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 64920,
                          "name": "mkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64310,
                          "src": "4371:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 64921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72052,
                        "src": "4371:12:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 64926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4371:42:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4359:54:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64928,
                  "nodeType": "ExpressionStatement",
                  "src": "4359:54:92"
                },
                {
                  "expression": {
                    "id": 64940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 64929,
                        "name": "ofrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64909,
                        "src": "4419:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 64932,
                      "indexExpression": {
                        "id": 64931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4424:3:92",
                        "subExpression": {
                          "id": 64930,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64903,
                          "src": "4424:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4419:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 64935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4444:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 64936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4453:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 64937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4462:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 64938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4471:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 64933,
                          "name": "mkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64310,
                          "src": "4431:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 64934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72052,
                        "src": "4431:12:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 64939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4431:42:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4419:54:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64941,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:54:92"
                },
                {
                  "expression": {
                    "id": 64953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 64942,
                        "name": "ofrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64909,
                        "src": "4479:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 64945,
                      "indexExpression": {
                        "id": 64944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4484:3:92",
                        "subExpression": {
                          "id": 64943,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64903,
                          "src": "4484:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4479:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 64948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4504:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 64949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4513:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 64950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4522:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 64951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4531:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 64946,
                          "name": "mkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64310,
                          "src": "4491:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$72397",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 64947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72052,
                        "src": "4491:12:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 64952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4491:42:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4479:54:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64954,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:54:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 64958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4551:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 64955,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "4540:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 64957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "4540:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 64959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4540:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64960,
                  "nodeType": "ExpressionStatement",
                  "src": "4540:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64965,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "4632:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 64964,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "4630:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 64966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4630:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 64967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 64961,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "4616:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 64963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "4616:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 64968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4616:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64969,
                  "nodeType": "ExpressionStatement",
                  "src": "4616:30:92"
                },
                {
                  "assignments": [64976],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64976,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "4669:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65098,
                      "src": "4652:24:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 64973,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4652:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 64974,
                          "length": {
                            "hexValue": "34",
                            "id": 64972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4657:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "4652:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 64975,
                        "nodeType": "ArrayTypeName",
                        "src": "4652:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64984,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 64982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4693:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 64981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4679:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[4] memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 64977,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4683:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 64979,
                          "length": {
                            "hexValue": "34",
                            "id": 64978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4688:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "4683:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 64980,
                        "nodeType": "ArrayTypeName",
                        "src": "4683:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      }
                    },
                    "id": 64983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:16:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4652:43:92"
                },
                {
                  "assignments": [64986],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64986,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "4706:1:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65098,
                      "src": "4701:6:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64985,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4701:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64987,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4701:6:92"
                },
                {
                  "expression": {
                    "id": 64998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 64988,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64976,
                        "src": "4713:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      "id": 64990,
                      "indexExpression": {
                        "id": 64989,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64986,
                        "src": "4721:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4713:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 64991,
                            "name": "ofrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64909,
                            "src": "4727:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 64993,
                          "indexExpression": {
                            "id": 64992,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64986,
                            "src": "4732:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4727:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "302e35",
                          "id": 64994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4736:9:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        {
                          "hexValue": "31",
                          "id": 64995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4747:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 64996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4756:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        }
                      ],
                      "id": 64997,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4726:38:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "src": "4713:51:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "id": 64999,
                  "nodeType": "ExpressionStatement",
                  "src": "4713:51:92"
                },
                {
                  "expression": {
                    "id": 65001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4770:3:92",
                    "subExpression": {
                      "id": 65000,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64986,
                      "src": "4770:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65002,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:3:92"
                },
                {
                  "expression": {
                    "id": 65013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 65003,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64976,
                        "src": "4779:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      "id": 65005,
                      "indexExpression": {
                        "id": 65004,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64986,
                        "src": "4787:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4779:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 65006,
                            "name": "ofrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64909,
                            "src": "4793:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 65008,
                          "indexExpression": {
                            "id": 65007,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64986,
                            "src": "4798:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4793:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 65009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4802:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 65010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4811:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 65011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4820:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        }
                      ],
                      "id": 65012,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4792:36:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "src": "4779:49:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "id": 65014,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:49:92"
                },
                {
                  "expression": {
                    "id": 65016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4834:3:92",
                    "subExpression": {
                      "id": 65015,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64986,
                      "src": "4834:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65017,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:3:92"
                },
                {
                  "expression": {
                    "id": 65028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 65018,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64976,
                        "src": "4843:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      "id": 65020,
                      "indexExpression": {
                        "id": 65019,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64986,
                        "src": "4851:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4843:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 65021,
                            "name": "ofrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64909,
                            "src": "4857:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 65023,
                          "indexExpression": {
                            "id": 65022,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64986,
                            "src": "4862:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4857:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "302e38",
                          "id": 65024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4866:9:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          "value": "0.8"
                        },
                        {
                          "hexValue": "31",
                          "id": 65025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4877:7:92",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 65026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4886:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        }
                      ],
                      "id": 65027,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4856:38:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "src": "4843:51:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "id": 65029,
                  "nodeType": "ExpressionStatement",
                  "src": "4843:51:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65032,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "4914:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65031,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "4912:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4912:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 65030,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "4901:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 65034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65035,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 65036,
                      "name": "OrderStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23989,
                      "src": "4930:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 65037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4930:12:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65038,
                  "nodeType": "EmitStatement",
                  "src": "4925:17:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65041,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "4961:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65040,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "4959:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4959:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 65039,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "4948:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 65043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4948:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65044,
                  "nodeType": "ExpressionStatement",
                  "src": "4948:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65047,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "4993:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65046,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "4991:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4991:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65050,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "5002:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65049,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5000:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5000:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65053,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5012:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 65052,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "5010:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 65054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5010:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 65055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5019:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "322e33",
                        "id": 65056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5030:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "30",
                        "id": 65057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5041:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 65058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5044:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 65045,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24005,
                      "src": "4977:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4977:69:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65060,
                  "nodeType": "EmitStatement",
                  "src": "4972:74:92"
                },
                {
                  "assignments": [65062, 65064, 65066, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65062,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "5059:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65098,
                      "src": "5054:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65061,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5054:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65064,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "5075:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65098,
                      "src": "5070:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65063,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5070:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65066,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "5085:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65098,
                      "src": "5080:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65065,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5080:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65078,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65070,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "5117:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65069,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5115:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5115:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65073,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "5132:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65072,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5130:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5130:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 65075,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64976,
                        "src": "5146:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 65076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5161:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65067,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "5097:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "5097:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5097:74:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5053:118:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65080,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65062,
                          "src": "5188:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 65081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5201:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "5188:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e697065732073686f756c64206e6f74206661696c",
                        "id": 65083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5204:24:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2efc2c1caf1049d86e8f15f82f388b5557938a91cf39b17abd1532a646d6b0be",
                          "typeString": "literal_string \"Snipes should not fail\""
                        },
                        "value": "Snipes should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2efc2c1caf1049d86e8f15f82f388b5557938a91cf39b17abd1532a646d6b0be",
                          "typeString": "literal_string \"Snipes should not fail\""
                        }
                      ],
                      "id": 65079,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "5177:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:52:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65085,
                  "nodeType": "ExpressionStatement",
                  "src": "5177:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65087,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65064,
                        "src": "5244:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 65088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5249:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5260:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65086,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "5235:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5235:52:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65091,
                  "nodeType": "ExpressionStatement",
                  "src": "5235:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65093,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65066,
                        "src": "5302:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 65094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5308:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f74206769766520656e6f756768",
                        "id": 65095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5319:27:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        },
                        "value": "Taker did not give enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        }
                      ],
                      "id": 65092,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "5293:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5293:54:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65097,
                  "nodeType": "ExpressionStatement",
                  "src": "5293:54:92"
                }
              ]
            },
            "functionSelector": "bad9a473",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_multiple_snipes_fillWants",
            "nameLocation": "4261:30:92",
            "parameters": {
              "id": 64900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4291:2:92"
            },
            "returnParameters": {
              "id": 64901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4301:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65107,
            "nodeType": "EventDefinition",
            "src": "5356:69:92",
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "5362:8:92",
            "parameters": {
              "id": 65106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65101,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5387:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 65107,
                  "src": "5371:20:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5371:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5409:2:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 65107,
                  "src": "5393:18:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5393:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5418:5:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 65107,
                  "src": "5413:10:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5413:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5370:54:92"
            }
          },
          {
            "id": 65248,
            "nodeType": "FunctionDefinition",
            "src": "5429:904:92",
            "body": {
              "id": 65247,
              "nodeType": "Block",
              "src": "5473:860:92",
              "statements": [
                {
                  "assignments": [65111],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65111,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "5484:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65247,
                      "src": "5479:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65110,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5479:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65119,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5503:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5512:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5521:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5530:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65112,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "5490:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "5490:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5490:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5479:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 65126,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68676,
                                    "src": "5580:4:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65125,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "5578:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5578:7:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 65129,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68679,
                                    "src": "5589:5:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65128,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "5587:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5587:8:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 65131,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65111,
                                "src": "5597:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 65123,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "5567:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 65124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23578,
                              "src": "5567:10:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 65132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5567:34:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 65121,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "5556:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 65122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23879,
                          "src": "5556:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 65133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5556:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 65134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5610:29:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 65120,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "5538:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5538:107:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65136,
                  "nodeType": "ExpressionStatement",
                  "src": "5538:107:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5662:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65137,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "5651:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "5651:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5651:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65142,
                  "nodeType": "ExpressionStatement",
                  "src": "5651:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65147,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "5743:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65146,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "5741:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5741:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5749:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65143,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "5727:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "5727:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5727:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65151,
                  "nodeType": "ExpressionStatement",
                  "src": "5727:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65154,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "5777:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65153,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5775:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5775:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 65152,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "5764:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 65156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5764:20:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65157,
                  "nodeType": "ExpressionStatement",
                  "src": "5764:20:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65160,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5806:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 65159,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "5804:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 65161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5804:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65164,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "5821:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5813:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5813:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5813:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5827:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 65158,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65107,
                      "src": "5795:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 65167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5795:34:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65168,
                  "nodeType": "EmitStatement",
                  "src": "5790:39:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65171,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "5848:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65170,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5846:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5846:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 65169,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "5835:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 65173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5835:20:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65174,
                  "nodeType": "ExpressionStatement",
                  "src": "5835:20:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65177,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "5877:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65176,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "5875:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5875:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65181,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "5891:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 65180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5883:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 65179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5883:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 65182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5883:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5897:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 65175,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65107,
                      "src": "5866:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 65184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5866:33:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65185,
                  "nodeType": "EmitStatement",
                  "src": "5861:38:92"
                },
                {
                  "assignments": [65187, 65189, 65191, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65187,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "5912:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65247,
                      "src": "5907:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65186,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5907:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65189,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "5928:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65247,
                      "src": "5923:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65188,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5923:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65191,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "5938:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65247,
                      "src": "5933:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65190,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5933:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65209,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65195,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "5970:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65194,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5968:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5968:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65198,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "5985:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65197,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "5983:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5983:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 65201,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65111,
                                "src": "6013:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 65202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6018:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 65203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6021:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 65204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6024:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 65205,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6012:20:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 65200,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "5999:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 65206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5999:34:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 65207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6041:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65192,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "5950:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "5950:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5950:101:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5906:145:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65211,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65187,
                          "src": "6068:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 65212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6081:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6068:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 65214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6084:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 65210,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6057:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6057:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65216,
                  "nodeType": "ExpressionStatement",
                  "src": "6057:51:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65218,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65189,
                        "src": "6123:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6128:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b65722068616420746f6f206d756368",
                        "id": 65220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6137:20:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        },
                        "value": "Taker had too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        }
                      ],
                      "id": 65217,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6114:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6114:44:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65222,
                  "nodeType": "ExpressionStatement",
                  "src": "6114:44:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65224,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65191,
                        "src": "6173:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6179:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 65226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6188:21:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 65223,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "6164:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6164:46:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65228,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:46:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6234:47:92",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 65235,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68676,
                                      "src": "6259:4:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65234,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "6257:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6257:7:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 65238,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68679,
                                      "src": "6268:5:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65237,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "6266:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6266:8:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 65240,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65111,
                                  "src": "6276:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 65232,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68673,
                                  "src": "6246:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 65233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23578,
                                "src": "6246:10:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 65241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6246:34:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 65230,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "6235:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 65231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23879,
                            "src": "6235:10:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 65242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6235:46:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 65244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6289:33:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 65229,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6216:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6216:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65246,
                  "nodeType": "ExpressionStatement",
                  "src": "6216:112:92"
                }
              ]
            },
            "functionSelector": "959d9fb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillWants_zero",
            "nameLocation": "5438:25:92",
            "parameters": {
              "id": 65108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5463:2:92"
            },
            "returnParameters": {
              "id": 65109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5473:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65355,
            "nodeType": "FunctionDefinition",
            "src": "6337:986:92",
            "body": {
              "id": 65354,
              "nodeType": "Block",
              "src": "6401:922:92",
              "statements": [
                {
                  "assignments": [65252],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65252,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "6412:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65354,
                      "src": "6407:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65251,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6407:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65260,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 65255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6431:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 65256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6434:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6443:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6452:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65253,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "6418:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "6418:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:36:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6407:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 65267,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68676,
                                    "src": "6502:4:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65266,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "6500:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6500:7:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 65270,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68679,
                                    "src": "6511:5:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65269,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "6509:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6509:8:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 65272,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65252,
                                "src": "6519:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 65264,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "6489:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 65265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23578,
                              "src": "6489:10:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 65273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6489:34:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 65262,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "6478:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 65263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23879,
                          "src": "6478:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 65274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6478:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 65275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6532:29:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 65261,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "6460:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6460:107:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65277,
                  "nodeType": "ExpressionStatement",
                  "src": "6460:107:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6584:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65278,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "6573:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "6573:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6573:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65283,
                  "nodeType": "ExpressionStatement",
                  "src": "6573:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65288,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "6665:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65287,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "6663:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6663:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6671:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65284,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "6649:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "6649:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65292,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:30:92"
                },
                {
                  "assignments": [65294, 65296, 65298, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65294,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "6898:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65354,
                      "src": "6893:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65293,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6893:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65296,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "6914:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65354,
                      "src": "6909:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65295,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6909:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65298,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "6924:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65354,
                      "src": "6919:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65297,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6919:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65316,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65302,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "6956:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65301,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "6954:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6954:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65305,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "6971:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65304,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "6969:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6969:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 65308,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65252,
                                "src": "6999:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e31",
                                "id": 65309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7004:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                "value": "0.1"
                              },
                              {
                                "hexValue": "30",
                                "id": 65310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7015:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 65311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7018:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 65312,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6998:28:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 65307,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "6985:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 65313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6985:42:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 65314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7035:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65299,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "6936:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "6936:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6936:109:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6892:153:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65318,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65294,
                          "src": "7062:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 65319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7075:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7062:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 65321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7078:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 65317,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "7051:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7051:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65323,
                  "nodeType": "ExpressionStatement",
                  "src": "7051:51:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65325,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65296,
                        "src": "7117:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 65326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7122:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "57726f6e6720676f742076616c7565",
                        "id": 65327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7133:17:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        },
                        "value": "Wrong got value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        }
                      ],
                      "id": 65324,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7108:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7108:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65329,
                  "nodeType": "ExpressionStatement",
                  "src": "7108:43:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65331,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65298,
                        "src": "7166:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7172:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720676176652076616c7565",
                        "id": 65333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7181:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        },
                        "value": "Wrong gave value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        }
                      ],
                      "id": 65330,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "7157:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7157:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65335,
                  "nodeType": "ExpressionStatement",
                  "src": "7157:43:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7224:47:92",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 65342,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68676,
                                      "src": "7249:4:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65341,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "7247:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7247:7:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 65345,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68679,
                                      "src": "7258:5:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65344,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "7256:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7256:8:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 65347,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65252,
                                  "src": "7266:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 65339,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68673,
                                  "src": "7236:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 65340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23578,
                                "src": "7236:10:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 65348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7236:34:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 65337,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "7225:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 65338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23879,
                            "src": "7225:10:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 65349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7225:46:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 65351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7279:33:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 65336,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "7206:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65353,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:112:92"
                }
              ]
            },
            "functionSelector": "8d6efbcb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_free_offer_fillWants_respects_spec",
            "nameLocation": "6346:45:92",
            "parameters": {
              "id": 65249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6391:2:92"
            },
            "returnParameters": {
              "id": 65250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6401:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65462,
            "nodeType": "FunctionDefinition",
            "src": "7327:990:92",
            "body": {
              "id": 65461,
              "nodeType": "Block",
              "src": "7391:926:92",
              "statements": [
                {
                  "assignments": [65359],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65359,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "7402:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65461,
                      "src": "7397:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65358,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7397:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65367,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 65362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7421:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 65363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7424:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7433:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7442:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65360,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "7408:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "7408:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7408:36:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7397:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 65374,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68676,
                                    "src": "7492:4:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65373,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "7490:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7490:7:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 65377,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68679,
                                    "src": "7501:5:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65376,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "7499:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7499:8:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 65379,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65359,
                                "src": "7509:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 65371,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "7479:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 65372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23578,
                              "src": "7479:10:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 65380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7479:34:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 65369,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "7468:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 65370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23879,
                          "src": "7468:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 65381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7468:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 65382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7522:29:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 65368,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "7450:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7450:107:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65384,
                  "nodeType": "ExpressionStatement",
                  "src": "7450:107:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7574:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65385,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "7563:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "7563:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7563:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65390,
                  "nodeType": "ExpressionStatement",
                  "src": "7563:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65395,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "7655:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65394,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "7653:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7653:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7661:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65391,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "7639:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "7639:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7639:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65399,
                  "nodeType": "ExpressionStatement",
                  "src": "7639:30:92"
                },
                {
                  "assignments": [65401, 65403, 65405, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65401,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "7893:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65461,
                      "src": "7888:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65400,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7888:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65403,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "7909:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65461,
                      "src": "7904:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65402,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7904:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65405,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "7919:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65461,
                      "src": "7914:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65404,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7914:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65423,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65409,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "7951:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65408,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "7949:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7949:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65412,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "7966:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65411,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "7964:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7964:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 65415,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65359,
                                "src": "7994:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e31",
                                "id": 65416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7999:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                "value": "0.1"
                              },
                              {
                                "hexValue": "30",
                                "id": 65417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8010:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 65418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8013:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 65419,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7993:28:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 65414,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "7980:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 65420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7980:42:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 65421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8030:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65406,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "7931:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "7931:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7931:110:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7887:154:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65425,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65401,
                          "src": "8058:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 65426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8071:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8058:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 65428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8074:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 65424,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "8047:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8047:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65430,
                  "nodeType": "ExpressionStatement",
                  "src": "8047:51:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65432,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65403,
                        "src": "8113:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8118:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "57726f6e6720676f742076616c7565",
                        "id": 65434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8127:17:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        },
                        "value": "Wrong got value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        }
                      ],
                      "id": 65431,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8104:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8104:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65436,
                  "nodeType": "ExpressionStatement",
                  "src": "8104:41:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65438,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65405,
                        "src": "8160:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8166:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720676176652076616c7565",
                        "id": 65440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8175:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        },
                        "value": "Wrong gave value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        }
                      ],
                      "id": 65437,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8151:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8151:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65442,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:43:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8218:47:92",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 65449,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68676,
                                      "src": "8243:4:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65448,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "8241:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8241:7:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 65452,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68679,
                                      "src": "8252:5:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65451,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "8250:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8250:8:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 65454,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65359,
                                  "src": "8260:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 65446,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68673,
                                  "src": "8230:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 65447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23578,
                                "src": "8230:10:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 65455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8230:34:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 65444,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "8219:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 65445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23879,
                            "src": "8219:10:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 65456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8219:46:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 65458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8273:33:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 65443,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "8200:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65460,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:112:92"
                }
              ]
            },
            "functionSelector": "339e7171",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_free_offer_fillGives_respects_spec",
            "nameLocation": "7336:45:92",
            "parameters": {
              "id": 65356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7381:2:92"
            },
            "returnParameters": {
              "id": 65357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7391:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65569,
            "nodeType": "FunctionDefinition",
            "src": "8321:763:92",
            "body": {
              "id": 65568,
              "nodeType": "Block",
              "src": "8365:719:92",
              "statements": [
                {
                  "assignments": [65466],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65466,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "8376:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65568,
                      "src": "8371:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65465,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8371:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65474,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8395:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8404:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8413:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8422:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65467,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "8382:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "8382:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8371:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 65481,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68676,
                                    "src": "8472:4:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65480,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "8470:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8470:7:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 65484,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68679,
                                    "src": "8481:5:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$75210",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 65483,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    69787, 69804, 69821, 69838, 69855
                                  ],
                                  "referencedDeclaration": 69855,
                                  "src": "8479:1:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 65485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8479:8:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 65486,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65466,
                                "src": "8489:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 65478,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68673,
                                "src": "8459:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 65479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23578,
                              "src": "8459:10:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 65487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8459:34:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 65476,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "8448:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 65477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23879,
                          "src": "8448:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 65488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8448:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 65489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8502:29:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 65475,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "8430:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8430:107:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65491,
                  "nodeType": "ExpressionStatement",
                  "src": "8430:107:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8554:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65492,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "8543:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "8543:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8543:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65497,
                  "nodeType": "ExpressionStatement",
                  "src": "8543:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65502,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "8635:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65501,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "8633:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8633:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8641:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65498,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "8619:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "8619:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8619:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65506,
                  "nodeType": "ExpressionStatement",
                  "src": "8619:30:92"
                },
                {
                  "assignments": [65508, 65510, 65512, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65508,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "8662:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65568,
                      "src": "8657:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65507,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8657:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65510,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "8678:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65568,
                      "src": "8673:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65509,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8673:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65512,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "8688:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65568,
                      "src": "8683:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65511,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8683:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65530,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65516,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "8720:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65515,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "8718:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8718:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65519,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "8735:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65518,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "8733:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8733:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 65522,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65466,
                                "src": "8763:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 65523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8768:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 65524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8771:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 65525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8774:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 65526,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8762:20:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 65521,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "8749:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 65527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8749:34:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 65528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8791:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65513,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "8700:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "8700:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8700:102:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8656:146:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65532,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65508,
                          "src": "8819:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 65533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8832:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8819:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 65535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8835:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 65531,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "8808:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8808:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65537,
                  "nodeType": "ExpressionStatement",
                  "src": "8808:51:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65539,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65510,
                        "src": "8874:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8879:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b65722068616420746f6f206d756368",
                        "id": 65541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8888:20:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        },
                        "value": "Taker had too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        }
                      ],
                      "id": 65538,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8865:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8865:44:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65543,
                  "nodeType": "ExpressionStatement",
                  "src": "8865:44:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65545,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65512,
                        "src": "8924:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8930:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 65547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8939:21:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 65544,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "8915:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8915:46:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65549,
                  "nodeType": "ExpressionStatement",
                  "src": "8915:46:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8985:47:92",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 65556,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68676,
                                      "src": "9010:4:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65555,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "9008:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9008:7:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 65559,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68679,
                                      "src": "9019:5:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$75210",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 65558,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      69787, 69804, 69821, 69838, 69855
                                    ],
                                    "referencedDeclaration": 69855,
                                    "src": "9017:1:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 65560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9017:8:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 65561,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65466,
                                  "src": "9027:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 65553,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68673,
                                  "src": "8997:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 65554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23578,
                                "src": "8997:10:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$31540_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 65562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8997:34:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$31540",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 65551,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "8986:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 65552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23879,
                            "src": "8986:10:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$31540_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 65563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8986:46:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 65565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9040:33:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 65550,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "8967:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8967:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65567,
                  "nodeType": "ExpressionStatement",
                  "src": "8967:112:92"
                }
              ]
            },
            "functionSelector": "71b980ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillGives_zero",
            "nameLocation": "8330:25:92",
            "parameters": {
              "id": 65463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8355:2:92"
            },
            "returnParameters": {
              "id": 65464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8365:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65641,
            "nodeType": "FunctionDefinition",
            "src": "9088:552:92",
            "body": {
              "id": 65640,
              "nodeType": "Block",
              "src": "9127:513:92",
              "statements": [
                {
                  "assignments": [65573],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65573,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "9138:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65640,
                      "src": "9133:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65572,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9133:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65581,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9157:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9166:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9175:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9184:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65574,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "9144:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "9144:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9144:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9133:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9203:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65582,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "9192:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "9192:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9192:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65587,
                  "nodeType": "ExpressionStatement",
                  "src": "9192:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65592,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "9284:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65591,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "9282:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9282:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9290:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65588,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "9268:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "9268:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9268:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65596,
                  "nodeType": "ExpressionStatement",
                  "src": "9268:30:92"
                },
                {
                  "assignments": [65598, 65600, 65602, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65598,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "9311:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65640,
                      "src": "9306:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65597,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9306:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65600,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "9327:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65640,
                      "src": "9322:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65599,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9322:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65602,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "9337:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65640,
                      "src": "9332:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65601,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9332:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65620,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65606,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "9369:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65605,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "9367:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9367:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65609,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "9384:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65608,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "9382:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9382:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 65612,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65573,
                                "src": "9412:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e35",
                                "id": 65613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9417:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "31",
                                "id": 65614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9428:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 65615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9437:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 65616,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9411:34:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 65611,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "9398:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 65617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9398:48:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 65618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9454:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65603,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "9349:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "9349:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9349:116:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9305:160:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 65624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 65622,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65598,
                          "src": "9482:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 65623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9495:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9482:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 65625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9498:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 65621,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "9471:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 65626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9471:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65627,
                  "nodeType": "ExpressionStatement",
                  "src": "9471:51:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65629,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65600,
                        "src": "9537:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9542:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9551:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65628,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9528:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9528:50:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65633,
                  "nodeType": "ExpressionStatement",
                  "src": "9528:50:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65635,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65602,
                        "src": "9593:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9599:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9608:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65634,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "9584:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9584:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65639,
                  "nodeType": "ExpressionStatement",
                  "src": "9584:51:92"
                }
              ]
            },
            "functionSelector": "3b629aed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillGives",
            "nameLocation": "9097:20:92",
            "parameters": {
              "id": 65570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9117:2:92"
            },
            "returnParameters": {
              "id": 65571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9127:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65707,
            "nodeType": "FunctionDefinition",
            "src": "9644:496:92",
            "body": {
              "id": 65706,
              "nodeType": "Block",
              "src": "9680:460:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9699:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9708:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9717:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9726:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65644,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "9686:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "9686:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9686:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65652,
                  "nodeType": "ExpressionStatement",
                  "src": "9686:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9747:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9756:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9765:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9774:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65653,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "9734:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "9734:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9734:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65661,
                  "nodeType": "ExpressionStatement",
                  "src": "9734:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9793:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65662,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "9782:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "9782:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9782:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65667,
                  "nodeType": "ExpressionStatement",
                  "src": "9782:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65672,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "9874:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65671,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "9872:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9872:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 65674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9880:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65668,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "9858:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "9858:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9858:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65676,
                  "nodeType": "ExpressionStatement",
                  "src": "9858:30:92"
                },
                {
                  "assignments": [65678, 65680, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65678,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "9900:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65706,
                      "src": "9895:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65677,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9895:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65680,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "9910:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65706,
                      "src": "9905:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65679,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9905:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65693,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65684,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "9947:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65683,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "9945:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9945:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65687,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "9962:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65686,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "9960:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9960:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 65689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9976:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "32",
                        "id": 65690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9993:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 65691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10008:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65681,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "9922:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "9922:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9922:96:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9894:124:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65695,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65678,
                        "src": "10033:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 65696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10038:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10049:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65694,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10024:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10024:52:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65699,
                  "nodeType": "ExpressionStatement",
                  "src": "10024:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65701,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65680,
                        "src": "10091:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 65702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10097:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10108:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65700,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10082:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10082:53:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65705,
                  "nodeType": "ExpressionStatement",
                  "src": "10082:53:92"
                }
              ]
            },
            "functionSelector": "ef8febf6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillWants",
            "nameLocation": "9653:17:92",
            "parameters": {
              "id": 65642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9670:2:92"
            },
            "returnParameters": {
              "id": 65643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9680:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65773,
            "nodeType": "FunctionDefinition",
            "src": "10144:493:92",
            "body": {
              "id": 65772,
              "nodeType": "Block",
              "src": "10180:457:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10199:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10208:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10217:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10226:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65710,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "10186:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "10186:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65718,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10247:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10256:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10265:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10274:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65719,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "10234:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "10234:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10234:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65727,
                  "nodeType": "ExpressionStatement",
                  "src": "10234:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10293:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65728,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "10282:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "10282:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10282:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65733,
                  "nodeType": "ExpressionStatement",
                  "src": "10282:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65738,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "10374:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65737,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "10372:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10372:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 65740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10380:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65734,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "10358:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "10358:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10358:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65742,
                  "nodeType": "ExpressionStatement",
                  "src": "10358:30:92"
                },
                {
                  "assignments": [65744, 65746, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65744,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "10400:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65772,
                      "src": "10395:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65743,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10395:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65746,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "10410:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65772,
                      "src": "10405:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65745,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10405:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65759,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65750,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "10447:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65749,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "10445:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10445:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65753,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "10462:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65752,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "10460:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10460:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 65755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10476:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "32",
                        "id": 65756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10493:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 65757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10508:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65747,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "10422:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "10422:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10422:97:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10394:125:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65761,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65744,
                        "src": "10534:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 65762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10539:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10548:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65760,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10525:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10525:50:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65765,
                  "nodeType": "ExpressionStatement",
                  "src": "10525:50:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65767,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65746,
                        "src": "10590:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 65768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10596:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10605:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65766,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "10581:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10581:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65771,
                  "nodeType": "ExpressionStatement",
                  "src": "10581:51:92"
                }
              ]
            },
            "functionSelector": "9364ce1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillGives",
            "nameLocation": "10153:17:92",
            "parameters": {
              "id": 65708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10170:2:92"
            },
            "returnParameters": {
              "id": 65709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10180:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65839,
            "nodeType": "FunctionDefinition",
            "src": "10641:429:92",
            "body": {
              "id": 65838,
              "nodeType": "Block",
              "src": "10698:372:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10717:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10726:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10735:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10744:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65776,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "10704:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "10704:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10704:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65784,
                  "nodeType": "ExpressionStatement",
                  "src": "10704:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10765:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10774:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10783:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10792:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65785,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "10752:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "10752:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10752:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65793,
                  "nodeType": "ExpressionStatement",
                  "src": "10752:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10813:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10822:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10831:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10840:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65794,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "10800:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "10800:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10800:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65802,
                  "nodeType": "ExpressionStatement",
                  "src": "10800:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10859:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65803,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "10848:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "10848:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10848:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65808,
                  "nodeType": "ExpressionStatement",
                  "src": "10848:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65813,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "10940:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65812,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "10938:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10938:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 65815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10946:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65809,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "10924:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "10924:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10924:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65817,
                  "nodeType": "ExpressionStatement",
                  "src": "10924:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 65821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10976:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 65818,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "10960:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 65820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "10960:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 65822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10960:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65823,
                  "nodeType": "ExpressionStatement",
                  "src": "10960:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65828,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "11024:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65827,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11022:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11022:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65831,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "11033:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65830,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11031:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11031:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11041:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "33",
                        "id": 65834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11050:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 65835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11059:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65824,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "11006:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "11006:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11006:59:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 65837,
                  "nodeType": "ExpressionStatement",
                  "src": "11006:59:92"
                }
              ]
            },
            "functionSelector": "4cd73ad6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillGivesAll_no_approved_fails",
            "nameLocation": "10650:38:92",
            "parameters": {
              "id": 65774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10688:2:92"
            },
            "returnParameters": {
              "id": 65775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10698:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 65914,
            "nodeType": "FunctionDefinition",
            "src": "11074:551:92",
            "body": {
              "id": 65913,
              "nodeType": "Block",
              "src": "11122:503:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11141:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11150:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11159:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11168:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65842,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "11128:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "11128:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11128:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65850,
                  "nodeType": "ExpressionStatement",
                  "src": "11128:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11189:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11198:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11207:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11216:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65851,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "11176:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "11176:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11176:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65859,
                  "nodeType": "ExpressionStatement",
                  "src": "11176:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11237:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11246:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11255:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11264:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65860,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "11224:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "11224:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11224:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65868,
                  "nodeType": "ExpressionStatement",
                  "src": "11224:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 65872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11283:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 65869,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "11272:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "11272:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11272:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65874,
                  "nodeType": "ExpressionStatement",
                  "src": "11272:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65879,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "11364:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65878,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "11362:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11362:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 65881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11370:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65875,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "11348:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "11348:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11348:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65883,
                  "nodeType": "ExpressionStatement",
                  "src": "11348:30:92"
                },
                {
                  "assignments": [65885, 65887, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65885,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "11390:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65913,
                      "src": "11385:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65884,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11385:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65887,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "11400:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 65913,
                      "src": "11395:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65886,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11395:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 65900,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65891,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "11437:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65890,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11435:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11435:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65894,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "11452:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65893,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11450:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11450:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 65896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11466:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "33",
                        "id": 65897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11481:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 65898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11496:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65888,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "11412:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "11412:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 65899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11412:95:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11384:123:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65902,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65885,
                        "src": "11522:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 65903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11527:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11536:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65901,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11513:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11513:50:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65906,
                  "nodeType": "ExpressionStatement",
                  "src": "11513:50:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 65908,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65887,
                        "src": "11578:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 65909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11584:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 65910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11593:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 65907,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "11569:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 65911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11569:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65912,
                  "nodeType": "ExpressionStatement",
                  "src": "11569:51:92"
                }
              ]
            },
            "functionSelector": "8a0dc9e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillGivesAll_succeeds",
            "nameLocation": "11083:29:92",
            "parameters": {
              "id": 65840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11112:2:92"
            },
            "returnParameters": {
              "id": 65841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11122:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66073,
            "nodeType": "FunctionDefinition",
            "src": "11629:1217:92",
            "body": {
              "id": 66072,
              "nodeType": "Block",
              "src": "11689:1157:92",
              "statements": [
                {
                  "assignments": [65918],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65918,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "11700:13:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "11695:18:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65917,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11695:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65928,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65921,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "11731:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65920,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11729:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11729:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65924,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "11740:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65923,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "11738:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11738:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11748:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 65919,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69316, 69383],
                      "referencedDeclaration": 69316,
                      "src": "11716:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 65927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11716:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11695:61:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65933,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "11778:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65932,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "11776:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11776:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11784:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 65929,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "11762:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "11762:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 65936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11762:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 65937,
                  "nodeType": "ExpressionStatement",
                  "src": "11762:30:92"
                },
                {
                  "assignments": [65939],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65939,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "11803:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "11798:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65938,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11798:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65947,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 65942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11828:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11837:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 65944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11846:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 65945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11855:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 65940,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64313,
                        "src": "11809:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "11809:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 65946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11809:48:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11798:59:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 65951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11874:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 65948,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "11863:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 65950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "11863:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 65952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11863:35:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65953,
                  "nodeType": "ExpressionStatement",
                  "src": "11863:35:92"
                },
                {
                  "assignments": [65955],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65955,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "11943:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "11938:16:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65954,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11938:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65962,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65959,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11975:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 65958,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "11973:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 65960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11973:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 65956,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "11957:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 65957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "11957:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 65961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11957:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11938:43:92"
                },
                {
                  "assignments": [65964],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65964,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "11992:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "11987:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65963,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11987:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65969,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 65966,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12006:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 65965,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          69787, 69804, 69821, 69838, 69855
                        ],
                        "referencedDeclaration": 69838,
                        "src": "12004:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 65967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12004:7:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 65968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12004:15:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11987:32:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65972,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "12039:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 65971,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "12037:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 65973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12037:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 65970,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "12026:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 65974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12026:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65975,
                  "nodeType": "ExpressionStatement",
                  "src": "12026:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 65978,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "12074:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65977,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "12072:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12072:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65981,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "12089:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 65980,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "12087:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 65982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12087:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 65983,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65939,
                        "src": "12103:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 65985,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12116:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 65984,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "12114:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 65986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12114:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 65987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12129:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 65988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12144:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 65989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12159:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "id": 65976,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24035,
                      "src": "12055:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 65990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12055:133:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65991,
                  "nodeType": "EmitStatement",
                  "src": "12050:138:92"
                },
                {
                  "assignments": [65993, 65995, 65997, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65993,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "12200:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "12195:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65992,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12195:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65995,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "12216:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "12211:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65994,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12211:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65997,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "12231:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "12226:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65996,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12226:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 66015,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66001,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "12268:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66000,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "12266:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12266:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66004,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "12283:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66003,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "12281:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12281:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66007,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65939,
                                "src": "12311:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12316:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12325:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 66010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12334:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 66011,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12310:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66006,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "12297:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12297:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12351:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 65998,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "12248:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 65999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "12248:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12248:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12194:167:92"
                },
                {
                  "assignments": [66017],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66017,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "12372:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66072,
                      "src": "12367:12:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66016,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12367:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66024,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 66019,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12384:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66018,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "12382:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12382:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 66021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "12382:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 66022,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65964,
                      "src": "12400:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12382:27:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12367:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66026,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66017,
                          "src": "12426:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12436:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12426:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 66029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12439:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 66025,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12415:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12415:61:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66031,
                  "nodeType": "ExpressionStatement",
                  "src": "12415:61:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66033,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65993,
                          "src": "12493:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12506:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12493:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 66036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12509:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 66032,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12482:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12482:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66038,
                  "nodeType": "ExpressionStatement",
                  "src": "12482:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66040,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65995,
                            "src": "12553:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 66041,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65997,
                            "src": "12565:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12553:21:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66043,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65997,
                            "src": "12578:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 66044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12591:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12578:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12553:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 66047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12600:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 66039,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12535:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12535:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66049,
                  "nodeType": "ExpressionStatement",
                  "src": "12535:106:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66051,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65955,
                          "src": "12665:11:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66055,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12698:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 66054,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "12696:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 66056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12696:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66052,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "12680:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 66053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "12680:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12680:24:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12665:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 66059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12712:61:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 66050,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "12647:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12647:132:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66061,
                  "nodeType": "ExpressionStatement",
                  "src": "12647:132:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66065,
                            "name": "refusemkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64313,
                            "src": "12805:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 66064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12797:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12797:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12797:18:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66067,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65918,
                          "src": "12817:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 66068,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66017,
                          "src": "12833:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12817:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66062,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23921,
                      "src": "12790:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 66070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12790:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66071,
                  "nodeType": "EmitStatement",
                  "src": "12785:56:92"
                }
              ]
            },
            "functionSelector": "13599121",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_doesnt_pay",
            "nameLocation": "11638:41:92",
            "parameters": {
              "id": 65915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11679:2:92"
            },
            "returnParameters": {
              "id": 65916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11689:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66125,
            "nodeType": "FunctionDefinition",
            "src": "12850:363:92",
            "body": {
              "id": 66124,
              "nodeType": "Block",
              "src": "12914:299:92",
              "statements": [
                {
                  "assignments": [66077],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66077,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "12925:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66124,
                      "src": "12920:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66076,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12920:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66085,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12950:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12959:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12968:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12976:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66078,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64313,
                        "src": "12931:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "12931:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12931:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12920:58:92"
                },
                {
                  "expression": {
                    "id": 66088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66086,
                      "name": "refuseReceive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64319,
                      "src": "12984:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 66087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13000:4:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12984:20:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66089,
                  "nodeType": "ExpressionStatement",
                  "src": "12984:20:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66094,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "13026:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66093,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "13024:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13024:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13032:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66090,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "13010:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "13010:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13010:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66098,
                  "nodeType": "ExpressionStatement",
                  "src": "13010:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f73656e6450656e616c74795265766572746564",
                        "id": 66102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13063:25:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f2bb42971393486c52b28276890a994f320f2a5bc1decd05db9533332c8bd7b",
                          "typeString": "literal_string \"mgv/sendPenaltyReverted\""
                        },
                        "value": "mgv/sendPenaltyReverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f2bb42971393486c52b28276890a994f320f2a5bc1decd05db9533332c8bd7b",
                          "typeString": "literal_string \"mgv/sendPenaltyReverted\""
                        }
                      ],
                      "expression": {
                        "id": 66099,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "13047:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "13047:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 66103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13047:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66104,
                  "nodeType": "ExpressionStatement",
                  "src": "13047:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66109,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "13115:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66108,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13113:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13113:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66112,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "13130:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66111,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13128:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13128:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66115,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66077,
                                "src": "13158:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13163:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13172:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 66118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13181:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 66119,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13157:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66114,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "13144:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13144:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13198:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66105,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "13095:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "13095:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13095:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 66123,
                  "nodeType": "ExpressionStatement",
                  "src": "13095:113:92"
                }
              ]
            },
            "functionSelector": "d9a725cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reverts_on_penalty_triggers_revert",
            "nameLocation": "12859:45:92",
            "parameters": {
              "id": 66074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12904:2:92"
            },
            "returnParameters": {
              "id": 66075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12914:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66293,
            "nodeType": "FunctionDefinition",
            "src": "13217:1254:92",
            "body": {
              "id": 66292,
              "nodeType": "Block",
              "src": "13290:1181:92",
              "statements": [
                {
                  "assignments": [66129],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66129,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "13301:13:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13296:18:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66128,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13296:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66139,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66132,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "13332:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66131,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13330:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13330:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66135,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "13341:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66134,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13339:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13339:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 66137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13349:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 66130,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69316, 69383],
                      "referencedDeclaration": 69316,
                      "src": "13317:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 66138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13317:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13296:61:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66144,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "13379:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66143,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "13377:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13377:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13385:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66140,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "13363:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "13363:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13363:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66148,
                  "nodeType": "ExpressionStatement",
                  "src": "13363:30:92"
                },
                {
                  "assignments": [66150],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66150,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "13404:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13399:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66149,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13399:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66158,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13423:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13432:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 66155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13441:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13450:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66151,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "13410:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "13410:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13410:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13399:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 66162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13469:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 66159,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "13458:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "13458:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 66163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13458:35:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66164,
                  "nodeType": "ExpressionStatement",
                  "src": "13458:35:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66170,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "13558:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 66169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13550:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13550:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13550:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66165,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "13534:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75196,
                      "src": "13534:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 66172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13534:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66173,
                  "nodeType": "ExpressionStatement",
                  "src": "13534:29:92"
                },
                {
                  "assignments": [66175],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66175,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "13574:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13569:16:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66174,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13569:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66182,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66179,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13606:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66178,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "13604:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13604:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66176,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "13588:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "13588:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13588:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13569:43:92"
                },
                {
                  "assignments": [66184],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66184,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "13623:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13618:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66183,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13618:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66189,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 66186,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13637:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 66185,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          69787, 69804, 69821, 69838, 69855
                        ],
                        "referencedDeclaration": 69838,
                        "src": "13635:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 66187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13635:7:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 66188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13635:15:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13618:32:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66192,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "13670:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66191,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "13668:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13668:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 66190,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "13657:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13657:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66195,
                  "nodeType": "ExpressionStatement",
                  "src": "13657:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66198,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "13705:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66197,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13703:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13703:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66201,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "13720:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66200,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13718:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13718:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 66203,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66150,
                        "src": "13734:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66205,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13747:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66204,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "13745:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13745:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13760:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13775:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 66209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13790:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "id": 66196,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24035,
                      "src": "13686:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 66210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13686:133:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66211,
                  "nodeType": "EmitStatement",
                  "src": "13681:138:92"
                },
                {
                  "assignments": [66213, 66215, 66217, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66213,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "13831:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13826:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66212,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13826:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66215,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "13847:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13842:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66214,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13842:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66217,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "13862:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13857:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66216,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13857:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 66235,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66221,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "13899:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66220,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13897:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13897:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66224,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "13914:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66223,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "13912:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13912:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66227,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66150,
                                "src": "13942:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13947:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13956:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 66230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13965:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 66231,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13941:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66226,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "13928:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13928:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13982:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66218,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "13879:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "13879:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13879:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13825:167:92"
                },
                {
                  "assignments": [66237],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66237,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "14003:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66292,
                      "src": "13998:12:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66236,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13998:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66244,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 66239,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14015:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66238,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "14013:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14013:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 66241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "14013:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 66242,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66184,
                      "src": "14031:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14013:27:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13998:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66246,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66237,
                          "src": "14057:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14067:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14057:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 66249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14070:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 66245,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14046:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14046:61:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66251,
                  "nodeType": "ExpressionStatement",
                  "src": "14046:61:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66253,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66213,
                          "src": "14124:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14137:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14124:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 66256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14140:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 66252,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14113:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14113:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66258,
                  "nodeType": "ExpressionStatement",
                  "src": "14113:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66260,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66215,
                            "src": "14184:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 66261,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66217,
                            "src": "14196:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14184:21:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66263,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66217,
                            "src": "14209:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 66264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14222:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14209:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14184:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 66267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14231:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 66259,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14166:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14166:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66269,
                  "nodeType": "ExpressionStatement",
                  "src": "14166:106:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66271,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66175,
                          "src": "14296:11:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66275,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14329:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 66274,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "14327:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 66276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14327:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66272,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "14311:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 66273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "14311:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14311:24:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14296:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 66279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14343:61:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 66270,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "14278:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14278:132:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66281,
                  "nodeType": "ExpressionStatement",
                  "src": "14278:132:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66285,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "14436:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 66284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14428:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14428:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14428:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66287,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66129,
                          "src": "14442:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 66288,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66237,
                          "src": "14458:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14442:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66282,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23921,
                      "src": "14421:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 66290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14421:45:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66291,
                  "nodeType": "EmitStatement",
                  "src": "14416:50:92"
                }
              ]
            },
            "functionSelector": "374b46f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_base",
            "nameLocation": "13226:54:92",
            "parameters": {
              "id": 66126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13280:2:92"
            },
            "returnParameters": {
              "id": 66127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13290:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66461,
            "nodeType": "FunctionDefinition",
            "src": "14475:1255:92",
            "body": {
              "id": 66460,
              "nodeType": "Block",
              "src": "14549:1181:92",
              "statements": [
                {
                  "assignments": [66297],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66297,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "14560:13:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "14555:18:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66296,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14555:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66307,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66300,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "14591:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66299,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "14589:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14589:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66303,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "14600:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66302,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "14598:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14598:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 66305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14608:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 66298,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69316, 69383],
                      "referencedDeclaration": 69316,
                      "src": "14576:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 66306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14576:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14555:61:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66312,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "14638:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66311,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "14636:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14636:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14644:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66308,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "14622:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "14622:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14622:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66316,
                  "nodeType": "ExpressionStatement",
                  "src": "14622:30:92"
                },
                {
                  "assignments": [66318],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66318,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "14663:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "14658:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66317,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14658:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66326,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14682:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14691:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 66323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14700:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14709:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66319,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "14669:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "14669:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14669:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14658:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b6572526563656976654661696c",
                        "id": 66330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14728:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        },
                        "value": "mgv/makerReceiveFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        }
                      ],
                      "expression": {
                        "id": 66327,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "14717:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "14717:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 66331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14717:34:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66332,
                  "nodeType": "ExpressionStatement",
                  "src": "14717:34:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66338,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "14817:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 66337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14809:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14809:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14809:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66333,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "14792:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75196,
                      "src": "14792:16:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 66340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14792:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66341,
                  "nodeType": "ExpressionStatement",
                  "src": "14792:30:92"
                },
                {
                  "assignments": [66343],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66343,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "14833:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "14828:16:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66342,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14828:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66350,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66347,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14865:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66346,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "14863:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14863:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66344,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "14847:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "14847:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14847:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14828:43:92"
                },
                {
                  "assignments": [66352],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66352,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "14882:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "14877:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66351,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14877:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66357,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 66354,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "14896:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 66353,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          69787, 69804, 69821, 69838, 69855
                        ],
                        "referencedDeclaration": 69838,
                        "src": "14894:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 66355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14894:7:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 66356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14894:15:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14877:32:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66360,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "14929:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66359,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "14927:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14927:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 66358,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "14916:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14916:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66363,
                  "nodeType": "ExpressionStatement",
                  "src": "14916:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66366,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "14965:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66365,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "14963:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14963:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66369,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "14980:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66368,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "14978:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14978:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 66371,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66318,
                        "src": "14994:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66373,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15007:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66372,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "15005:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15005:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15020:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15035:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526563656976654661696c",
                        "id": 66377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15050:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        },
                        "value": "mgv/makerReceiveFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        }
                      ],
                      "id": 66364,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24035,
                      "src": "14946:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 66378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14946:132:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66379,
                  "nodeType": "EmitStatement",
                  "src": "14941:137:92"
                },
                {
                  "assignments": [66381, 66383, 66385, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66381,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "15090:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "15085:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66380,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15085:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66383,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "15106:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "15101:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66382,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15101:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66385,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "15121:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "15116:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66384,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15116:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 66403,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66389,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "15158:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66388,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "15156:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15156:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66392,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "15173:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66391,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "15171:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15171:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66395,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66318,
                                "src": "15201:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15206:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15215:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 66398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15224:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 66399,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15200:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66394,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "15187:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15187:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15241:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66386,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "15138:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "15138:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15138:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15084:167:92"
                },
                {
                  "assignments": [66405],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66405,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "15262:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66460,
                      "src": "15257:12:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66404,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15257:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66412,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 66407,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15274:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66406,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "15272:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15272:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 66409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "15272:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 66410,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66352,
                      "src": "15290:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15272:27:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15257:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66414,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66405,
                          "src": "15316:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15326:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15316:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 66417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15329:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 66413,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15305:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15305:61:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66419,
                  "nodeType": "ExpressionStatement",
                  "src": "15305:61:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66421,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66381,
                          "src": "15383:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15396:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15383:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 66424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15399:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 66420,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15372:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15372:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66426,
                  "nodeType": "ExpressionStatement",
                  "src": "15372:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66428,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66383,
                            "src": "15443:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 66429,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66385,
                            "src": "15455:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15443:21:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66431,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66385,
                            "src": "15468:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 66432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15481:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15468:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15443:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 66435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15490:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 66427,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15425:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15425:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66437,
                  "nodeType": "ExpressionStatement",
                  "src": "15425:106:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66439,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66343,
                          "src": "15555:11:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66443,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15588:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 66442,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "15586:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 66444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15586:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66440,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "15570:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 66441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "15570:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15570:24:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15555:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 66447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15602:61:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 66438,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "15537:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15537:132:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66449,
                  "nodeType": "ExpressionStatement",
                  "src": "15537:132:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66453,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "15695:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 66452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15687:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15687:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15687:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66455,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66297,
                          "src": "15701:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 66456,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66405,
                          "src": "15717:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15701:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66450,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23921,
                      "src": "15680:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 66458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15680:45:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66459,
                  "nodeType": "EmitStatement",
                  "src": "15675:50:92"
                }
              ]
            },
            "functionSelector": "00c4655e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_quote",
            "nameLocation": "14484:55:92",
            "parameters": {
              "id": 66294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14539:2:92"
            },
            "returnParameters": {
              "id": 66295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14549:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66543,
            "nodeType": "FunctionDefinition",
            "src": "15734:589:92",
            "body": {
              "id": 66542,
              "nodeType": "Block",
              "src": "15786:537:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66468,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "15808:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66467,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "15806:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15806:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15814:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66464,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "15792:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "15792:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15792:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66472,
                  "nodeType": "ExpressionStatement",
                  "src": "15792:30:92"
                },
                {
                  "assignments": [66474],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66474,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "15833:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66542,
                      "src": "15828:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66473,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15828:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66482,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15856:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15865:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15874:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15882:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66475,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64316,
                        "src": "15839:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "15839:16:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15839:45:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15828:56:92"
                },
                {
                  "assignments": [66484],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66484,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "15895:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66542,
                      "src": "15890:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66483,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15890:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66489,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 66486,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "15909:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 66485,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          69787, 69804, 69821, 69838, 69855
                        ],
                        "referencedDeclaration": 69838,
                        "src": "15907:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 66487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15907:7:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 66488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "15907:15:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15890:32:92"
                },
                {
                  "assignments": [66491, 66493, 66495, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66491,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "15935:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66542,
                      "src": "15930:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66490,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15930:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66493,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "15951:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66542,
                      "src": "15946:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66492,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15946:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66495,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "15966:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66542,
                      "src": "15961:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66494,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15961:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 66513,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66499,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "16003:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66498,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16001:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16001:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66502,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "16018:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66501,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16016:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16016:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66505,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66474,
                                "src": "16046:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 66506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16051:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 66507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16054:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 66508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16057:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 66509,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16045:20:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66504,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "16032:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16032:34:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16074:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66496,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "15983:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "15983:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15983:101:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15929:155:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66515,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66491,
                          "src": "16101:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16114:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16101:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 66518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16117:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 66514,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16090:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16090:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66520,
                  "nodeType": "ExpressionStatement",
                  "src": "16090:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66522,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66493,
                            "src": "16161:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 66523,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66495,
                            "src": "16173:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16161:21:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66525,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66495,
                            "src": "16186:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 66526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16199:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16186:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16161:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e20646174612073686f756c642062652030",
                        "id": 66529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16208:30:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebea677f683c112cd33ce150b101e5ecf23c7ef5ba7712b21634b874bfccb6f2",
                          "typeString": "literal_string \"Transaction data should be 0\""
                        },
                        "value": "Transaction data should be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebea677f683c112cd33ce150b101e5ecf23c7ef5ba7712b21634b874bfccb6f2",
                          "typeString": "literal_string \"Transaction data should be 0\""
                        }
                      ],
                      "id": 66521,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16143:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16143:101:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66531,
                  "nodeType": "ExpressionStatement",
                  "src": "16143:101:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 66534,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16263:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 66533,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69838,
                              "src": "16261:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 66535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16261:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 66536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "16261:15:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 66537,
                          "name": "beforeWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66484,
                          "src": "16279:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16261:27:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b657220776173206e6f7420636f6d70656e7361746564",
                        "id": 66539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16290:27:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d19a967d895334427570b71d3b2bb77740bb189de93e5f39abb8e700d1a476f",
                          "typeString": "literal_string \"Taker was not compensated\""
                        },
                        "value": "Taker was not compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d19a967d895334427570b71d3b2bb77740bb189de93e5f39abb8e700d1a476f",
                          "typeString": "literal_string \"Taker was not compensated\""
                        }
                      ],
                      "id": 66532,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "16250:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16250:68:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66541,
                  "nodeType": "ExpressionStatement",
                  "src": "16250:68:92"
                }
              ]
            },
            "functionSelector": "0c4ba05d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_collects_failing_offer",
            "nameLocation": "15743:33:92",
            "parameters": {
              "id": 66462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15776:2:92"
            },
            "returnParameters": {
              "id": 66463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15786:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66696,
            "nodeType": "FunctionDefinition",
            "src": "16327:1127:92",
            "body": {
              "id": 66695,
              "nodeType": "Block",
              "src": "16384:1070:92",
              "statements": [
                {
                  "assignments": [66547],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66547,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "16395:13:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16390:18:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66546,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16390:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66557,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66550,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "16426:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66549,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16424:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16424:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66553,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "16435:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66552,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16433:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16433:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16443:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 66548,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [69316, 69383],
                      "referencedDeclaration": 69316,
                      "src": "16411:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 66556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16411:39:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16390:60:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66562,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "16472:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66561,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "16470:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16470:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16478:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66558,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "16456:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "16456:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16456:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66566,
                  "nodeType": "ExpressionStatement",
                  "src": "16456:30:92"
                },
                {
                  "assignments": [66568],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66568,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "16497:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16492:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66567,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16492:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66576,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16520:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16529:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16538:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16546:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66569,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64316,
                        "src": "16503:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "16503:16:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16503:45:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16492:56:92"
                },
                {
                  "assignments": [66578],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66578,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "16559:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16554:16:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66577,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16554:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66585,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66582,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16591:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66581,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "16589:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16589:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66579,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "16573:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "16573:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16573:24:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16554:43:92"
                },
                {
                  "assignments": [66587],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66587,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "16608:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16603:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66586,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16603:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66592,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 66589,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "16622:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 66588,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          69787, 69804, 69821, 69838, 69855
                        ],
                        "referencedDeclaration": 69838,
                        "src": "16620:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 66590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16620:7:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 66591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "16620:15:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16603:32:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66595,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "16655:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66594,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "16653:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16653:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 66593,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "16642:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16642:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66598,
                  "nodeType": "ExpressionStatement",
                  "src": "16642:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66601,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "16690:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66600,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16688:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16688:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66604,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "16705:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66603,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16703:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16703:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 66606,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66568,
                        "src": "16719:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66608,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16732:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66607,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "16730:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16730:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16745:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16760:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 66612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16775:17:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 66599,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24035,
                      "src": "16671:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 66613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16671:127:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66614,
                  "nodeType": "EmitStatement",
                  "src": "16666:132:92"
                },
                {
                  "assignments": [66616, 66618, 66620, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66616,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "16810:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16805:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66615,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16805:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66618,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "16826:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16821:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66617,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16821:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66620,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "16841:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16836:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66619,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16836:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 66638,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66624,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "16878:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66623,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16876:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16876:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66627,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "16893:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66626,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "16891:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16891:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66630,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66568,
                                "src": "16921:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16926:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16935:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 66633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16944:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 66634,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16920:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66629,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "16907:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16907:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16961:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66621,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "16858:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "16858:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16858:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16804:167:92"
                },
                {
                  "assignments": [66640],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66640,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "16982:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66695,
                      "src": "16977:12:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66639,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16977:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66647,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 66642,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16994:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66641,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "16992:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16992:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 66644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "16992:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 66645,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66587,
                      "src": "17010:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16992:27:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16977:42:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66649,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66640,
                          "src": "17036:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17046:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17036:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 66652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17049:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 66648,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17025:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17025:61:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66654,
                  "nodeType": "ExpressionStatement",
                  "src": "17025:61:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66656,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66616,
                          "src": "17103:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 66657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17116:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17103:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 66659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17119:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 66655,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17092:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17092:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66661,
                  "nodeType": "ExpressionStatement",
                  "src": "17092:47:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66663,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66618,
                            "src": "17163:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 66664,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66620,
                            "src": "17175:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17163:21:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 66668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66666,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66620,
                            "src": "17188:9:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 66667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17201:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17188:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17163:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 66670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17210:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 66662,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17145:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17145:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66672,
                  "nodeType": "ExpressionStatement",
                  "src": "17145:106:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66674,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66578,
                          "src": "17275:11:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66678,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17308:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 66677,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "17306:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 66679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17306:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66675,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "17290:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 66676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "17290:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17290:24:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17275:39:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 66682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17322:61:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 66673,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "17257:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17257:132:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66684,
                  "nodeType": "ExpressionStatement",
                  "src": "17257:132:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66688,
                            "name": "failmkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64316,
                            "src": "17415:7:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 66687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17407:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66686,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17407:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17407:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66690,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66547,
                          "src": "17425:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 66691,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66640,
                          "src": "17441:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17425:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66685,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23921,
                      "src": "17400:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 66693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17400:49:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66694,
                  "nodeType": "EmitStatement",
                  "src": "17395:54:92"
                }
              ]
            },
            "functionSelector": "0f8cadb3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_reverts",
            "nameLocation": "16336:38:92",
            "parameters": {
              "id": 66544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16374:2:92"
            },
            "returnParameters": {
              "id": 66545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16384:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66772,
            "nodeType": "FunctionDefinition",
            "src": "17458:487:92",
            "body": {
              "id": 66771,
              "nodeType": "Block",
              "src": "17531:414:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66703,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "17550:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66702,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "17548:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17548:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66706,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "17559:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66705,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "17557:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17557:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 66708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17567:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 66699,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "17537:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23283,
                      "src": "17537:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 66709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17537:32:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66710,
                  "nodeType": "ExpressionStatement",
                  "src": "17537:32:92"
                },
                {
                  "assignments": [66712],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66712,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "17580:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66771,
                      "src": "17575:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66711,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17575:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66719,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66716,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17608:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66715,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "17606:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17606:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66713,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "17591:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "17591:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17591:23:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17575:39:92"
                },
                {
                  "assignments": [66721],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66721,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "17625:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66771,
                      "src": "17620:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66720,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17620:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66729,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17644:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17653:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17662:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17670:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66722,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "17631:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "17631:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17631:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17620:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66734,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "17694:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66733,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "17692:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17692:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17700:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66730,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "17678:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "17678:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17678:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66738,
                  "nodeType": "ExpressionStatement",
                  "src": "17678:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66743,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "17735:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66742,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "17733:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17733:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66746,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "17750:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66745,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "17748:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17748:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66749,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66721,
                                "src": "17778:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17783:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17792:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 66752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17801:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 66753,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "17777:31:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66748,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "17764:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17764:45:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17817:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66739,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "17715:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "17715:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17715:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 66757,
                  "nodeType": "ExpressionStatement",
                  "src": "17715:112:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66762,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17866:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 66761,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "17864:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 66763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17864:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66759,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "17849:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 66760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "17849:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17849:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 66765,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66712,
                          "src": "17875:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17849:34:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17891:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74",
                        "id": 66768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17906:28:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        },
                        "value": "Incorrect delivered amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        }
                      ],
                      "id": 66758,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "17833:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 66769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17833:107:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66770,
                  "nodeType": "ExpressionStatement",
                  "src": "17833:107:92"
                }
              ]
            },
            "functionSelector": "e55e2f6f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_hasnt_approved_base_succeeds_order_with_fee",
            "nameLocation": "17467:54:92",
            "parameters": {
              "id": 66697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17521:2:92"
            },
            "returnParameters": {
              "id": 66698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17531:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66836,
            "nodeType": "FunctionDefinition",
            "src": "17949:446:92",
            "body": {
              "id": 66835,
              "nodeType": "Block",
              "src": "18020:375:92",
              "statements": [
                {
                  "assignments": [66776],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66776,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "18031:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66835,
                      "src": "18026:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66775,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18026:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66783,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66780,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18059:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66779,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "18057:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18057:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66777,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "18042:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "18042:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18042:23:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18026:39:92"
                },
                {
                  "assignments": [66785],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66785,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18076:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66835,
                      "src": "18071:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66784,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18071:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66793,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18095:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18104:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18113:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18121:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66786,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "18082:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "18082:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18082:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18071:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66798,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "18145:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66797,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "18143:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18143:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18151:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66794,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "18129:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "18129:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18129:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66802,
                  "nodeType": "ExpressionStatement",
                  "src": "18129:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66807,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "18185:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66806,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "18183:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18183:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66810,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "18200:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66809,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "18198:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18198:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66813,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66785,
                                "src": "18228:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18233:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18242:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 66816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18251:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 66817,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18227:31:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66812,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "18214:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18214:45:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18267:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66803,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "18165:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "18165:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18165:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 66821,
                  "nodeType": "ExpressionStatement",
                  "src": "18165:112:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66826,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "18316:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 66825,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "18314:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 66827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18314:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66823,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "18299:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 66824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "18299:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18299:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 66829,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66776,
                          "src": "18325:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18299:34:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18341:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74",
                        "id": 66832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18356:28:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        },
                        "value": "Incorrect delivered amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        }
                      ],
                      "id": 66822,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "18283:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 66833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18283:107:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66834,
                  "nodeType": "ExpressionStatement",
                  "src": "18283:107:92"
                }
              ]
            },
            "functionSelector": "0941ba78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_hasnt_approved_base_succeeds_order_wo_fee",
            "nameLocation": "17958:52:92",
            "parameters": {
              "id": 66773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18010:2:92"
            },
            "returnParameters": {
              "id": 66774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18020:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66884,
            "nodeType": "FunctionDefinition",
            "src": "18399:325:92",
            "body": {
              "id": 66883,
              "nodeType": "Block",
              "src": "18461:263:92",
              "statements": [
                {
                  "assignments": [66840],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66840,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18472:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 66883,
                      "src": "18467:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66839,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18467:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66848,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 66843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18491:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18500:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18509:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18517:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66841,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "18478:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "18478:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18478:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18467:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66853,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "18540:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66852,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "18538:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18538:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18546:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66849,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "18525:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "18525:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18525:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66857,
                  "nodeType": "ExpressionStatement",
                  "src": "18525:29:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 66861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18577:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 66858,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "18561:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 66860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "18561:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 66862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18561:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66863,
                  "nodeType": "ExpressionStatement",
                  "src": "18561:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66868,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "18627:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66867,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "18625:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18625:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66871,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "18642:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66870,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "18640:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18640:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66874,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66840,
                                "src": "18670:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18675:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 66876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18684:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 66877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18693:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 66878,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18669:31:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66873,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "18656:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18656:45:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18709:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66864,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "18607:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "18607:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18607:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 66882,
                  "nodeType": "ExpressionStatement",
                  "src": "18607:112:92"
                }
              ]
            },
            "functionSelector": "1dd051c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_hasnt_approved_quote_fails_order",
            "nameLocation": "18408:43:92",
            "parameters": {
              "id": 66837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18451:2:92"
            },
            "returnParameters": {
              "id": 66838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18461:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67026,
            "nodeType": "FunctionDefinition",
            "src": "18728:994:92",
            "body": {
              "id": 67025,
              "nodeType": "Block",
              "src": "18764:958:92",
              "statements": [
                {
                  "assignments": [66888],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66888,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18775:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67025,
                      "src": "18770:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66887,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18770:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66896,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "312e31",
                        "id": 66891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18794:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "31",
                        "id": 66892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18805:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 66893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18814:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 66894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18822:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 66889,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "18781:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 66890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "18781:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 66895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18781:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18770:54:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66901,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "18845:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66900,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "18843:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18843:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 66903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18851:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66897,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "18830:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "18830:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18830:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66905,
                  "nodeType": "ExpressionStatement",
                  "src": "18830:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66910,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "18882:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66909,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "18880:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18880:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 66912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18888:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 66906,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "18866:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "18866:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18866:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66914,
                  "nodeType": "ExpressionStatement",
                  "src": "18866:31:92"
                },
                {
                  "assignments": [66916],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66916,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "18908:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67025,
                      "src": "18903:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66915,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18903:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66923,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66920,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18936:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66919,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "18934:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18934:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66917,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "18919:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "18919:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18919:23:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18903:39:92"
                },
                {
                  "assignments": [66925],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66925,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "18953:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67025,
                      "src": "18948:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66924,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18948:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66933,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66930,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "18988:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 66929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18980:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66928,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18980:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18980:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66926,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "18964:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 66927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "18964:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18964:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18948:45:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66936,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "19013:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 66935,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "19011:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 66937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19011:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 66934,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "19000:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19000:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66939,
                  "nodeType": "ExpressionStatement",
                  "src": "19000:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66942,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "19044:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66941,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "19042:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19042:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66945,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "19053:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66944,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "19051:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19051:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 66947,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66888,
                        "src": "19061:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66949,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19068:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 66948,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "19066:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 66950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19066:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19075:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "312e31",
                        "id": 66952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19084:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        }
                      ],
                      "id": 66940,
                      "name": "OfferSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24019,
                      "src": "19029:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 66953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19029:65:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66954,
                  "nodeType": "EmitStatement",
                  "src": "19024:70:92"
                },
                {
                  "assignments": [66956, 66958, 66960, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66956,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "19106:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67025,
                      "src": "19101:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66955,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19101:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66958,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "19122:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67025,
                      "src": "19117:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66957,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19117:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66960,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "19137:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67025,
                      "src": "19132:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66959,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19132:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 66978,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66964,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "19174:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66963,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "19172:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19172:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 66967,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "19189:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 66966,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "19187:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 66968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19187:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 66970,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66888,
                                "src": "19217:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 66971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19222:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "312e31",
                                "id": 66972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19231:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1100000000000000000_by_1",
                                  "typeString": "int_const 1100000000000000000"
                                },
                                "value": "1.1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 66973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19242:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 66974,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19216:33:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 66969,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "19203:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 66975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19203:47:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 66976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19258:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 66961,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "19154:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 66962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "19154:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 66977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19154:114:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19100:168:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66980,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66956,
                          "src": "19285:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 66981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19298:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19285:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 66983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19301:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 66979,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "19274:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 66984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19274:50:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66985,
                  "nodeType": "ExpressionStatement",
                  "src": "19274:50:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66990,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "19363:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 66989,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "19361:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 66991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19361:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66987,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "19346:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 66988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "19346:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19346:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 66993,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66916,
                          "src": "19372:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19346:34:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 66995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19388:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74202874616b657229",
                        "id": 66996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19403:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        },
                        "value": "Incorrect delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        }
                      ],
                      "id": 66986,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "19330:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 66997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19330:115:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66998,
                  "nodeType": "ExpressionStatement",
                  "src": "19330:115:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67004,
                                  "name": "mkr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64310,
                                  "src": "19491:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 67003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19483:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 67002,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19483:7:92",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19483:12:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 67000,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "19467:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 67001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "19467:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 67006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19467:29:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 67007,
                          "name": "balMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66925,
                          "src": "19499:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19467:40:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 67009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19515:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19532:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        },
                        "value": "Incorrect delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        }
                      ],
                      "id": 66999,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "19451:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19451:123:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67012,
                  "nodeType": "ExpressionStatement",
                  "src": "19451:123:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67014,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66958,
                        "src": "19589:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19599:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 67016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19608:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 67013,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "19580:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19580:64:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67018,
                  "nodeType": "ExpressionStatement",
                  "src": "19580:64:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67020,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66960,
                        "src": "19659:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 67021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19670:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 67022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19681:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 67019,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "19650:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19650:67:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67024,
                  "nodeType": "ExpressionStatement",
                  "src": "19650:67:92"
                }
              ]
            },
            "functionSelector": "efd59015",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_snipe",
            "nameLocation": "18737:17:92",
            "parameters": {
              "id": 66885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18754:2:92"
            },
            "returnParameters": {
              "id": 66886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18764:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67147,
            "nodeType": "FunctionDefinition",
            "src": "19726:927:92",
            "body": {
              "id": 67146,
              "nodeType": "Block",
              "src": "19768:885:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e31",
                        "id": 67032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19787:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19798:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19807:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19815:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67029,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "19774:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "19774:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19774:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67037,
                  "nodeType": "ExpressionStatement",
                  "src": "19774:43:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e32",
                        "id": 67041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19836:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        "value": "1.2"
                      },
                      {
                        "hexValue": "31",
                        "id": 67042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19847:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19856:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19864:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67038,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "19823:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "19823:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19823:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67046,
                  "nodeType": "ExpressionStatement",
                  "src": "19823:43:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19883:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67047,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "19872:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "19872:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19872:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67052,
                  "nodeType": "ExpressionStatement",
                  "src": "19872:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67057,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "19924:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67056,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "19922:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19922:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19930:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67053,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "19909:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "19909:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19909:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67061,
                  "nodeType": "ExpressionStatement",
                  "src": "19909:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67066,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "19961:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67065,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "19959:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19959:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19967:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67062,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "19945:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "19945:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19945:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67070,
                  "nodeType": "ExpressionStatement",
                  "src": "19945:31:92"
                },
                {
                  "assignments": [67072],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67072,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "19987:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67146,
                      "src": "19982:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67071,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19982:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67079,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67076,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20015:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 67075,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "20013:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 67077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20013:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 67073,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "19998:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "19998:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 67078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19998:23:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19982:39:92"
                },
                {
                  "assignments": [67081],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67081,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "20032:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67146,
                      "src": "20027:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67080,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20027:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67089,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67086,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "20067:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 67085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20059:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67084,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20059:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20059:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 67082,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "20043:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "20043:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 67088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20043:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20027:45:92"
                },
                {
                  "assignments": [67091, 67093, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67091,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "20085:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67146,
                      "src": "20080:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67090,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20080:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67093,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "20100:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67146,
                      "src": "20095:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67092,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20095:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 67106,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67097,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "20142:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67096,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "20140:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20140:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67100,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "20157:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67099,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "20155:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20155:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20171:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "34",
                        "id": 67103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20186:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000000000000000000_by_1",
                          "typeString": "int_const 4000000000000000000"
                        },
                        "value": "4"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20201:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_4000000000000000000_by_1",
                          "typeString": "int_const 4000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67094,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "20117:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "20117:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20117:94:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20079:132:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67108,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67091,
                        "src": "20226:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20236:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20245:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 67107,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "20217:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20217:74:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67112,
                  "nodeType": "ExpressionStatement",
                  "src": "20217:74:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67114,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67093,
                        "src": "20313:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 67115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20330:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20347:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 67113,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "20297:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20297:101:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67118,
                  "nodeType": "ExpressionStatement",
                  "src": "20297:101:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67123,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "20437:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 67122,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "20435:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 67124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20435:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 67120,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "20420:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 67121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "20420:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 67125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20420:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 67126,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67072,
                          "src": "20446:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20420:34:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20462:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20477:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        },
                        "value": "Incorrect delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        }
                      ],
                      "id": 67119,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "20404:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20404:115:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67131,
                  "nodeType": "ExpressionStatement",
                  "src": "20404:115:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67137,
                                  "name": "mkr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64310,
                                  "src": "20565:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 67136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20557:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 67135,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20557:7:92",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20557:12:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 67133,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "20541:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 67134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "20541:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 67139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20541:29:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 67140,
                          "name": "balMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67081,
                          "src": "20573:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20541:40:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 67142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20589:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20606:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        },
                        "value": "Incorrect delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        }
                      ],
                      "id": 67132,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "20525:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20525:123:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67145,
                  "nodeType": "ExpressionStatement",
                  "src": "20525:123:92"
                }
              ]
            },
            "functionSelector": "e9172577",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_marketOrder",
            "nameLocation": "19735:23:92",
            "parameters": {
              "id": 67027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19758:2:92"
            },
            "returnParameters": {
              "id": 67028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19768:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67204,
            "nodeType": "FunctionDefinition",
            "src": "20657:465:92",
            "body": {
              "id": 67203,
              "nodeType": "Block",
              "src": "20697:425:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 67153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20716:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 67154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20725:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20734:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20742:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67150,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "20703:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "20703:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20703:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67158,
                  "nodeType": "ExpressionStatement",
                  "src": "20703:41:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20761:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67159,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "20750:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "20750:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20750:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67164,
                  "nodeType": "ExpressionStatement",
                  "src": "20750:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67169,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "20802:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67168,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "20800:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20800:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20808:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67165,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "20786:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "20786:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20786:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67173,
                  "nodeType": "ExpressionStatement",
                  "src": "20786:31:92"
                },
                {
                  "assignments": [67175, 67177, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67175,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "20830:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67203,
                      "src": "20825:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67174,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20825:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67177,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "20845:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67203,
                      "src": "20840:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67176,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20840:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 67190,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67181,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "20887:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67180,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "20885:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20885:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67184,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "20902:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67183,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "20900:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20900:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20916:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 67187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20931:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20946:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67178,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "20862:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "20862:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20862:94:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20824:132:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67192,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67175,
                        "src": "20971:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20981:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20990:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 67191,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "20962:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20962:74:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67196,
                  "nodeType": "ExpressionStatement",
                  "src": "20962:74:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67198,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67177,
                        "src": "21051:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21062:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21071:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 67197,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "21042:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21042:75:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67202,
                  "nodeType": "ExpressionStatement",
                  "src": "21042:75:92"
                }
              ]
            },
            "functionSelector": "0e16461e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_fillWants",
            "nameLocation": "20666:21:92",
            "parameters": {
              "id": 67148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20687:2:92"
            },
            "returnParameters": {
              "id": 67149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20697:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67261,
            "nodeType": "FunctionDefinition",
            "src": "21126:466:92",
            "body": {
              "id": 67260,
              "nodeType": "Block",
              "src": "21166:426:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 67210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21185:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 67211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21194:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21203:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21211:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67207,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "21172:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "21172:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21172:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67215,
                  "nodeType": "ExpressionStatement",
                  "src": "21172:41:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21230:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67216,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "21219:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "21219:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21219:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67221,
                  "nodeType": "ExpressionStatement",
                  "src": "21219:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67226,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "21271:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67225,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "21269:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21269:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21277:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67222,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "21255:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "21255:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21255:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67230,
                  "nodeType": "ExpressionStatement",
                  "src": "21255:31:92"
                },
                {
                  "assignments": [67232, 67234, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67232,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "21299:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67260,
                      "src": "21294:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67231,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21294:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67234,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "21314:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67260,
                      "src": "21309:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67233,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21309:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 67247,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67238,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "21356:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67237,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "21354:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21354:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67241,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "21371:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67240,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "21369:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21369:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21385:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 67244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21400:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 67245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21415:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67235,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "21331:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "21331:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21331:95:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21293:133:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67249,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67234,
                        "src": "21441:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21452:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21461:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 67248,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "21432:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21432:75:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67253,
                  "nodeType": "ExpressionStatement",
                  "src": "21432:75:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67255,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67232,
                        "src": "21522:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21532:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21541:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 67254,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "21513:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21513:74:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67259,
                  "nodeType": "ExpressionStatement",
                  "src": "21513:74:92"
                }
              ]
            },
            "functionSelector": "856a63d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_fillGives",
            "nameLocation": "21135:21:92",
            "parameters": {
              "id": 67205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21156:2:92"
            },
            "returnParameters": {
              "id": 67206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21166:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67324,
            "nodeType": "FunctionDefinition",
            "src": "21596:508:92",
            "body": {
              "id": 67323,
              "nodeType": "Block",
              "src": "21646:458:92",
              "statements": [
                {
                  "assignments": [67265],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67265,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21657:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67323,
                      "src": "21652:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67264,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21652:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67273,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 67268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21676:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 67269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21685:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21694:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21702:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67266,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "21663:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "21663:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21663:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21652:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21721:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67274,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "21710:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "21710:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21710:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67279,
                  "nodeType": "ExpressionStatement",
                  "src": "21710:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67284,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "21762:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67283,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "21760:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21760:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21768:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67280,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "21746:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "21746:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21746:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67288,
                  "nodeType": "ExpressionStatement",
                  "src": "21746:31:92"
                },
                {
                  "assignments": [null, 67290, 67292, null, null],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 67290,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "21792:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67323,
                      "src": "21787:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67289,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21787:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67292,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "21807:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67323,
                      "src": "21802:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67291,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21802:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 67310,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67296,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "21844:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67295,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "21842:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21842:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67299,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "21859:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67298,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "21857:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21857:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67302,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67265,
                                "src": "21887:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 67303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21892:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                  "typeString": "int_const 2000000000000000000"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "30",
                                "id": 67304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21901:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3330305f303030",
                                "id": 67305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21910:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000_by_1",
                                  "typeString": "int_const 300000"
                                },
                                "value": "300_000"
                              }
                            ],
                            "id": 67306,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "21886:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67301,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "21873:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21873:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 67308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21927:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67293,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "21824:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "21824:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21824:114:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21784:154:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67312,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67292,
                        "src": "21953:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 67313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21964:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21973:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 67311,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "21944:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21944:75:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67316,
                  "nodeType": "ExpressionStatement",
                  "src": "21944:75:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67318,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67290,
                        "src": "22034:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22044:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22053:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 67317,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "22025:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22025:74:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67322,
                  "nodeType": "ExpressionStatement",
                  "src": "22025:74:92"
                }
              ]
            },
            "functionSelector": "73e33e1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_fillGives_at_0_wants_works",
            "nameLocation": "21605:31:92",
            "parameters": {
              "id": 67262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21636:2:92"
            },
            "returnParameters": {
              "id": 67263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21646:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67381,
            "nodeType": "FunctionDefinition",
            "src": "22108:471:92",
            "body": {
              "id": 67380,
              "nodeType": "Block",
              "src": "22153:426:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 67330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22172:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 67331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22181:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22190:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22198:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67327,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "22159:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "22159:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22159:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67335,
                  "nodeType": "ExpressionStatement",
                  "src": "22159:41:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22217:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67336,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "22206:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "22206:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22206:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67341,
                  "nodeType": "ExpressionStatement",
                  "src": "22206:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67346,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "22258:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67345,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "22256:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22256:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22264:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67342,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "22242:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "22242:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22242:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67350,
                  "nodeType": "ExpressionStatement",
                  "src": "22242:31:92"
                },
                {
                  "assignments": [67352, 67354, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67352,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "22286:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67380,
                      "src": "22281:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67351,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22281:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67354,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "22301:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67380,
                      "src": "22296:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67353,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22296:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 67367,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67358,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "22343:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67357,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "22341:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22341:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67361,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "22358:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67360,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "22356:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22356:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 67363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22372:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 67364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22387:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 67365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22402:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67355,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "22318:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "22318:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22318:95:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22280:133:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67369,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67354,
                        "src": "22428:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22439:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22448:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 67368,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "22419:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22419:75:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67373,
                  "nodeType": "ExpressionStatement",
                  "src": "22419:75:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67375,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67352,
                        "src": "22509:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22519:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22528:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 67374,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "22500:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22500:74:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67379,
                  "nodeType": "ExpressionStatement",
                  "src": "22500:74:92"
                }
              ]
            },
            "functionSelector": "ce980d16",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_empty_wants_fillGives",
            "nameLocation": "22117:26:92",
            "parameters": {
              "id": 67325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22143:2:92"
            },
            "returnParameters": {
              "id": 67326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22153:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67438,
            "nodeType": "FunctionDefinition",
            "src": "22583:470:92",
            "body": {
              "id": 67437,
              "nodeType": "Block",
              "src": "22628:425:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 67387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22647:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 67388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22656:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22665:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22673:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67384,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "22634:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "22634:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22634:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67392,
                  "nodeType": "ExpressionStatement",
                  "src": "22634:41:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22692:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67393,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "22681:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "22681:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22681:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67398,
                  "nodeType": "ExpressionStatement",
                  "src": "22681:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67403,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "22733:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67402,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "22731:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22731:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22739:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67399,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "22717:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "22717:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22717:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67407,
                  "nodeType": "ExpressionStatement",
                  "src": "22717:31:92"
                },
                {
                  "assignments": [67409, 67411, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67409,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "22761:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67437,
                      "src": "22756:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67408,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22756:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67411,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "22776:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67437,
                      "src": "22771:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67410,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22771:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 67424,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67415,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "22818:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67414,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "22816:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22816:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67418,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "22833:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67417,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "22831:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22831:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 67420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22847:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 67421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22862:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22877:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67412,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "22793:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "22793:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22793:94:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22755:132:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67426,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67411,
                        "src": "22902:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 67427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22913:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22922:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 67425,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "22893:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22893:75:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67430,
                  "nodeType": "ExpressionStatement",
                  "src": "22893:75:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67432,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67409,
                        "src": "22983:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 67433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22993:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23002:45:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 67431,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "22974:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22974:74:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67436,
                  "nodeType": "ExpressionStatement",
                  "src": "22974:74:92"
                }
              ]
            },
            "functionSelector": "e8205853",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_empty_wants_fillWants",
            "nameLocation": "22592:26:92",
            "parameters": {
              "id": 67382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22618:2:92"
            },
            "returnParameters": {
              "id": 67383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22628:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67501,
            "nodeType": "FunctionDefinition",
            "src": "23057:427:92",
            "body": {
              "id": 67500,
              "nodeType": "Block",
              "src": "23111:373:92",
              "statements": [
                {
                  "assignments": [67442],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67442,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "23122:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67500,
                      "src": "23117:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67441,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23117:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67450,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 67445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23141:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "32",
                        "id": 67446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23152:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23161:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23169:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67443,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "23128:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "23128:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23128:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23117:54:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23188:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67451,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "23177:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "23177:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23177:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67456,
                  "nodeType": "ExpressionStatement",
                  "src": "23177:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67461,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "23230:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67460,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "23228:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23228:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 67463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23236:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67457,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "23214:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "23214:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23214:32:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67465,
                  "nodeType": "ExpressionStatement",
                  "src": "23214:32:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67470,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "23267:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67469,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "23265:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23265:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23273:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67466,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "23252:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "23252:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23252:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67474,
                  "nodeType": "ExpressionStatement",
                  "src": "23252:29:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 67478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23334:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 67475,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "23318:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 67477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "23318:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 67479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23318:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67480,
                  "nodeType": "ExpressionStatement",
                  "src": "23318:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67485,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "23384:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67484,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "23382:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23382:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67488,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "23399:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67487,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "23397:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23397:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67491,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67442,
                                "src": "23427:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 67492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23432:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                  "typeString": "int_const 2000000000000000000"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "313030",
                                "id": 67493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23441:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000000"
                                },
                                "value": "100"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 67494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23452:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 67495,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "23426:34:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67490,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "23413:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23413:48:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23469:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67481,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "23364:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "23364:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23364:115:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 67499,
                  "nodeType": "ExpressionStatement",
                  "src": "23364:115:92"
                }
              ]
            },
            "functionSelector": "53cc12bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_has_no_quote_fails_order",
            "nameLocation": "23066:35:92",
            "parameters": {
              "id": 67439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23101:2:92"
            },
            "returnParameters": {
              "id": 67440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23111:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67579,
            "nodeType": "FunctionDefinition",
            "src": "23488:661:92",
            "body": {
              "id": 67578,
              "nodeType": "Block",
              "src": "23549:600:92",
              "statements": [
                {
                  "assignments": [67505],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67505,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "23560:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67578,
                      "src": "23555:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67504,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23555:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67513,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 67508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23579:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "313030",
                        "id": 67509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23588:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 67510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23599:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23608:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67506,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "23566:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "23566:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23566:44:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23555:55:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 67517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23627:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 67514,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "23616:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "23616:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23616:35:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67519,
                  "nodeType": "ExpressionStatement",
                  "src": "23616:35:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67524,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "23754:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67523,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "23752:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23752:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 67526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23760:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67520,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "23738:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "23738:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23738:32:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67528,
                  "nodeType": "ExpressionStatement",
                  "src": "23738:32:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67531,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "23790:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67530,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "23788:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23788:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 67529,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "23777:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23777:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67534,
                  "nodeType": "ExpressionStatement",
                  "src": "23777:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67537,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "23825:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67536,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "23823:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23823:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67540,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "23840:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67539,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "23838:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23838:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 67542,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67505,
                        "src": "23854:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67544,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "23867:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 67543,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "23865:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 67545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23865:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 67546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23880:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 67547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23896:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 67548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23913:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "id": 67535,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24035,
                      "src": "23806:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 67549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23806:136:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67550,
                  "nodeType": "EmitStatement",
                  "src": "23801:141:92"
                },
                {
                  "assignments": [67552, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67552,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "23954:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67578,
                      "src": "23949:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67551,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23949:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 67570,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67556,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "23995:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67555,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "23993:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23993:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67559,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "24010:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67558,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "24008:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24008:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67562,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67505,
                                "src": "24038:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "3530",
                                "id": 67563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24043:8:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000000000000000000_by_1",
                                  "typeString": "int_const 50000000000000000000"
                                },
                                "value": "50"
                              },
                              {
                                "hexValue": "302e35",
                                "id": 67564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24053:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 67565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24064:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 67566,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "24037:35:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67561,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "24024:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24024:49:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24081:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67553,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "23975:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "23975:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23975:116:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23948:143:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 67572,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67552,
                          "src": "24108:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 67573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24121:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24108:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f726465722073686f756c64206661696c",
                        "id": 67575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24124:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727f3cfc347473ca117a58e0c620e4c6f52fabc3af967183361800b43d50c9db",
                          "typeString": "literal_string \"order should fail\""
                        },
                        "value": "order should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727f3cfc347473ca117a58e0c620e4c6f52fabc3af967183361800b43d50c9db",
                          "typeString": "literal_string \"order should fail\""
                        }
                      ],
                      "id": 67571,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "24097:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 67576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24097:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67577,
                  "nodeType": "ExpressionStatement",
                  "src": "24097:47:92"
                }
              ]
            },
            "functionSelector": "dc46f1de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maker_has_not_enough_base_fails_order",
            "nameLocation": "23497:42:92",
            "parameters": {
              "id": 67502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23539:2:92"
            },
            "returnParameters": {
              "id": 67503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23549:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67655,
            "nodeType": "FunctionDefinition",
            "src": "24153:488:92",
            "body": {
              "id": 67654,
              "nodeType": "Block",
              "src": "24199:442:92",
              "statements": [
                {
                  "assignments": [67583],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67583,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "24210:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67654,
                      "src": "24205:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67582,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "24205:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67591,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 67586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24229:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24238:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24247:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24255:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67584,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "24216:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "24216:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24216:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24205:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 67595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24274:17:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "expression": {
                        "id": 67592,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "24263:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "24263:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24263:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67597,
                  "nodeType": "ExpressionStatement",
                  "src": "24263:29:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 67601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24315:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67598,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "24298:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71820,
                      "src": "24298:16:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 67602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24298:22:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67603,
                  "nodeType": "ExpressionStatement",
                  "src": "24298:22:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67608,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "24342:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67607,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "24340:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24340:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24348:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67604,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "24326:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "24326:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24326:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67612,
                  "nodeType": "ExpressionStatement",
                  "src": "24326:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67615,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "24375:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67614,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "24373:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24373:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 67613,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70164,
                      "src": "24362:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 67617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24362:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67618,
                  "nodeType": "ExpressionStatement",
                  "src": "24362:18:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67621,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "24410:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67620,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "24408:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24408:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67624,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "24425:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67623,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "24423:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24423:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 67626,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67583,
                        "src": "24439:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67628,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24452:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 67627,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "24450:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 67629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24450:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24465:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24480:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 67632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24495:17:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 67619,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24035,
                      "src": "24391:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 67633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24391:127:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67634,
                  "nodeType": "EmitStatement",
                  "src": "24386:132:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67639,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "24544:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67638,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "24542:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24542:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67642,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "24559:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67641,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "24557:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24557:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67645,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67583,
                                "src": "24587:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 67646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24592:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 67647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24601:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 67648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24610:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 67649,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "24586:31:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67644,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "24573:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24573:45:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24626:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67635,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "24524:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "24524:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24524:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 67653,
                  "nodeType": "ExpressionStatement",
                  "src": "24524:112:92"
                }
              ]
            },
            "functionSelector": "b67fc16e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maker_revert_is_logged",
            "nameLocation": "24162:27:92",
            "parameters": {
              "id": 67580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24189:2:92"
            },
            "returnParameters": {
              "id": 67581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24199:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67705,
            "nodeType": "FunctionDefinition",
            "src": "24645:411:92",
            "body": {
              "id": 67704,
              "nodeType": "Block",
              "src": "24696:360:92",
              "statements": [
                {
                  "assignments": [67659],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67659,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "24707:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67704,
                      "src": "24702:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67658,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "24702:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67667,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 67662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24726:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24735:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 67664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24744:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24753:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67660,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "24713:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "24713:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24713:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24702:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67672,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "24777:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67671,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "24775:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24775:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 67674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24783:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67668,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "24761:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "24761:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24761:32:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67676,
                  "nodeType": "ExpressionStatement",
                  "src": "24761:32:92"
                },
                {
                  "assignments": [67678, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67678,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "24806:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67704,
                      "src": "24801:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67677,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "24801:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 67696,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67682,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "24847:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67681,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "24845:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24845:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67685,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "24862:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67684,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "24860:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24860:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67688,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67659,
                                "src": "24890:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 67689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24895:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "302e35",
                                "id": 67690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24904:9:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 67691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24915:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 67692,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "24889:34:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67687,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "24876:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24876:48:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24932:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67679,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "24827:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "24827:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24827:115:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24800:142:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 67698,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67678,
                          "src": "24966:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 67699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24979:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24966:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f726465722073686f756c64206661696c207768656e206f7264657220707269636520697320686967686572207468616e206f66666572",
                        "id": 67701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24988:57:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5840cf37e54b73cb837cdd7357acbed67730e84a1252de04b6d0035d44174aa6",
                          "typeString": "literal_string \"Order should fail when order price is higher than offer\""
                        },
                        "value": "Order should fail when order price is higher than offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5840cf37e54b73cb837cdd7357acbed67730e84a1252de04b6d0035d44174aa6",
                          "typeString": "literal_string \"Order should fail when order price is higher than offer\""
                        }
                      ],
                      "id": 67697,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "24948:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 67702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24948:103:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67703,
                  "nodeType": "ExpressionStatement",
                  "src": "24948:103:92"
                }
              ]
            },
            "functionSelector": "2f4ebf8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_higher_price_fails",
            "nameLocation": "24654:32:92",
            "parameters": {
              "id": 67656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24686:2:92"
            },
            "returnParameters": {
              "id": 67657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24696:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67755,
            "nodeType": "FunctionDefinition",
            "src": "25060:402:92",
            "body": {
              "id": 67754,
              "nodeType": "Block",
              "src": "25109:353:92",
              "statements": [
                {
                  "assignments": [67709],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67709,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "25120:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67754,
                      "src": "25115:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67708,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25115:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67717,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 67712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25139:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25148:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 67714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25157:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25166:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67710,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "25126:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "25126:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25126:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25115:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67722,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "25190:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67721,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "25188:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25188:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25196:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67718,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "25174:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "25174:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25174:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67726,
                  "nodeType": "ExpressionStatement",
                  "src": "25174:30:92"
                },
                {
                  "assignments": [67728, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67728,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "25217:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67754,
                      "src": "25212:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67727,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25212:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 67746,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67732,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "25258:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67731,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "25256:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25256:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67735,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "25273:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67734,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "25271:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25271:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67738,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67709,
                                "src": "25301:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 67739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25306:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 67740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25315:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 67741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25324:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 67742,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25300:31:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67737,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "25287:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25287:45:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25340:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67729,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "25238:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "25238:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25238:112:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25211:139:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 67748,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67728,
                          "src": "25374:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 67749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25387:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25374:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f726465722073686f756c64206661696c207768656e206f726465722067617320697320686967686572207468616e206f66666572",
                        "id": 67751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25396:55:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c2cff5808376c6801bcec3034b0f790b2ee2373d3ed24f0a56ecce70a65c4f6",
                          "typeString": "literal_string \"Order should fail when order gas is higher than offer\""
                        },
                        "value": "Order should fail when order gas is higher than offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c2cff5808376c6801bcec3034b0f790b2ee2373d3ed24f0a56ecce70a65c4f6",
                          "typeString": "literal_string \"Order should fail when order gas is higher than offer\""
                        }
                      ],
                      "id": 67747,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "25356:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 67752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25356:101:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67753,
                  "nodeType": "ExpressionStatement",
                  "src": "25356:101:92"
                }
              ]
            },
            "functionSelector": "64a0bf40",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_higher_gas_fails",
            "nameLocation": "25069:30:92",
            "parameters": {
              "id": 67706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25099:2:92"
            },
            "returnParameters": {
              "id": 67707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25109:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67829,
            "nodeType": "FunctionDefinition",
            "src": "25466:540:92",
            "body": {
              "id": 67828,
              "nodeType": "Block",
              "src": "25503:503:92",
              "statements": [
                {
                  "assignments": [67759],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67759,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "25514:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67828,
                      "src": "25509:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67758,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25509:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67767,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 67762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25533:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25542:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 67764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25551:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25560:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67760,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "25520:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "25520:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25520:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25509:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67772,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "25584:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67771,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "25582:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25582:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 67774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25590:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67768,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "25568:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "25568:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25568:32:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67776,
                  "nodeType": "ExpressionStatement",
                  "src": "25568:32:92"
                },
                {
                  "assignments": [67778],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67778,
                      "mutability": "mutable",
                      "name": "cd",
                      "nameLocation": "25620:2:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67828,
                      "src": "25607:15:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 67777,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "25607:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67799,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 67781,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "25655:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 67782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26106,
                          "src": "25655:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 67783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "25655:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67785,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "25684:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67784,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "25682:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25682:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67788,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "25699:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67787,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "25697:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25697:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67791,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67759,
                                "src": "25727:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 67792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25732:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 67793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25741:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 67794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25750:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 67795,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25726:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67790,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "25713:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25713:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25767:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67779,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "25625:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 67780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "25625:22:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 67798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25625:152:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25607:170:92"
                },
                {
                  "assignments": [67801, 67803],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67801,
                      "mutability": "mutable",
                      "name": "noRevert",
                      "nameLocation": "25790:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67828,
                      "src": "25785:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 67800,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "25785:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67803,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "25813:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67828,
                      "src": "25800:17:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 67802,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "25800:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67812,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67810,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67778,
                        "src": "25846:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 67805,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "25823:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            ],
                            "id": 67804,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              69787, 69804, 69821, 69838, 69855
                            ],
                            "referencedDeclaration": 69787,
                            "src": "25821:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                              "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                            }
                          },
                          "id": 67806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25821:6:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 67807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "25821:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 67809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313330303030",
                          "id": 67808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25838:6:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_130000_by_1",
                            "typeString": "int_const 130000"
                          },
                          "value": "130000"
                        }
                      ],
                      "src": "25821:24:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 67811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25821:28:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25784:65:92"
                },
                {
                  "condition": {
                    "id": 67813,
                    "name": "noRevert",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67801,
                    "src": "25859:8:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 67826,
                    "nodeType": "Block",
                    "src": "25929:73:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67821,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67803,
                                  "src": "25956:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 67820,
                                "name": "getReason",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70586,
                                "src": "25946:9:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (bytes memory) pure returns (string memory)"
                                }
                              },
                              "id": 67822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25946:15:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "6d67762f6e6f74456e6f756768476173466f724d616b65725472616465",
                              "id": 67823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25963:31:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                                "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                              },
                              "value": "mgv/notEnoughGasForMakerTrade"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                                "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                              }
                            ],
                            "id": 67819,
                            "name": "revertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70182,
                            "src": "25937:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory,string memory) returns (bool)"
                            }
                          },
                          "id": 67824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25937:58:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 67825,
                        "nodeType": "ExpressionStatement",
                        "src": "25937:58:92"
                      }
                    ]
                  },
                  "id": 67827,
                  "nodeType": "IfStatement",
                  "src": "25855:147:92",
                  "trueBody": {
                    "id": 67818,
                    "nodeType": "Block",
                    "src": "25869:54:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74616b652073686f756c64206661696c2064756520746f206c6f7720676173",
                              "id": 67815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25882:33:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5f5a43ee50672e5a0d3d2cce29584a046e40f8291668e429ec8c558e3ae907b1",
                                "typeString": "literal_string \"take should fail due to low gas\""
                              },
                              "value": "take should fail due to low gas"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5f5a43ee50672e5a0d3d2cce29584a046e40f8291668e429ec8c558e3ae907b1",
                                "typeString": "literal_string \"take should fail due to low gas\""
                              }
                            ],
                            "id": 67814,
                            "name": "fail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [2718, 216],
                            "referencedDeclaration": 2718,
                            "src": "25877:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 67816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25877:39:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67817,
                        "nodeType": "ExpressionStatement",
                        "src": "25877:39:92"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7d4258d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_detect_lowgas",
            "nameLocation": "25475:18:92",
            "parameters": {
              "id": 67756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25493:2:92"
            },
            "returnParameters": {
              "id": 67757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25503:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67925,
            "nodeType": "FunctionDefinition",
            "src": "26010:807:92",
            "body": {
              "id": 67924,
              "nodeType": "Block",
              "src": "26063:754:92",
              "statements": [
                {
                  "assignments": [67833],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67833,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "26074:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67924,
                      "src": "26069:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67832,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26069:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67841,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 67836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26093:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 67837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26102:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 67838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26111:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26120:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67834,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "26080:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "26080:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26080:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26069:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67846,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "26144:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67845,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "26142:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26142:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 67848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26150:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67842,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "26128:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "26128:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26128:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67850,
                  "nodeType": "ExpressionStatement",
                  "src": "26128:30:92"
                },
                {
                  "assignments": [67852],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67852,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "26169:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67924,
                      "src": "26164:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67851,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26164:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67859,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67856,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "26197:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 67855,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69838,
                          "src": "26195:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 67857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26195:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 67853,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "26180:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "26180:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 67858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26180:23:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26164:39:92"
                },
                {
                  "assignments": [67861],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67861,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "26214:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67924,
                      "src": "26209:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67860,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26209:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67869,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67866,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "26249:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 67865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26241:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67864,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26241:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26241:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 67862,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "26225:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "26225:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 67868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26225:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26209:45:92"
                },
                {
                  "assignments": [67871, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67871,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "26267:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 67924,
                      "src": "26262:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67870,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26262:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 67889,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67875,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "26308:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67874,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "26306:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26306:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67878,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "26323:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67877,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "26321:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 67879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26321:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 67881,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67833,
                                "src": "26351:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 67882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26356:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 67883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26365:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                  "typeString": "int_const 2000000000000000000"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 67884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26374:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 67885,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "26350:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 67880,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "26337:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 67886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26337:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 67887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26391:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67872,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "26288:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "26288:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 67888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26288:113:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26261:140:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 67891,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67871,
                          "src": "26425:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 67892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26438:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "26425:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f726465722073686f756c642073756363656564207768656e206f72646572207072696365206973206c6f776572207468616e206f66666572",
                        "id": 67894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26447:59:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22abefe6bc7687346f02ef484ab6c4eb426bc67d8ad0bcd11a5864a227fe2c79",
                          "typeString": "literal_string \"Order should succeed when order price is lower than offer\""
                        },
                        "value": "Order should succeed when order price is lower than offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22abefe6bc7687346f02ef484ab6c4eb426bc67d8ad0bcd11a5864a227fe2c79",
                          "typeString": "literal_string \"Order should succeed when order price is lower than offer\""
                        }
                      ],
                      "id": 67890,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "26407:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 67895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26407:105:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67896,
                  "nodeType": "ExpressionStatement",
                  "src": "26407:105:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67901,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "26603:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 67900,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69838,
                                "src": "26601:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 67902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26601:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 67898,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68676,
                              "src": "26586:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 67899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "26586:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 67903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26586:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 67904,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67852,
                          "src": "26612:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26586:34:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26628:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74202874616b657229",
                        "id": 67907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26643:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        },
                        "value": "Incorrect delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        }
                      ],
                      "id": 67897,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "26570:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26570:115:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67909,
                  "nodeType": "ExpressionStatement",
                  "src": "26570:115:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67915,
                                  "name": "mkr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64310,
                                  "src": "26731:3:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$72397",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 67914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26723:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 67913,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26723:7:92",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26723:12:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 67911,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68679,
                              "src": "26707:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$75210",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 67912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73347,
                            "src": "26707:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 67917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26707:29:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 67918,
                          "name": "balMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67861,
                          "src": "26739:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26707:40:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26755:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 67921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26770:36:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        },
                        "value": "Incorrect delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        }
                      ],
                      "id": 67910,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "26691:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 67922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26691:121:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67923,
                  "nodeType": "ExpressionStatement",
                  "src": "26691:121:92"
                }
              ]
            },
            "functionSelector": "9737b577",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_lower_price_succeeds",
            "nameLocation": "26019:34:92",
            "parameters": {
              "id": 67830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26053:2:92"
            },
            "returnParameters": {
              "id": 67831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26063:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67959,
            "nodeType": "FunctionDefinition",
            "src": "27027:321:92",
            "body": {
              "id": 67958,
              "nodeType": "Block",
              "src": "27080:268:92",
              "statements": [
                {
                  "body": {
                    "id": 67947,
                    "nodeType": "Block",
                    "src": "27116:64:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "302e303031",
                              "id": 67941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27137:11:92",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              "value": "0.001"
                            },
                            {
                              "hexValue": "302e303031",
                              "id": 67942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27150:11:92",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              "value": "0.001"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 67943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27163:6:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 67944,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67929,
                              "src": "27171:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 67938,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64310,
                              "src": "27124:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$72397",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 67940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72052,
                            "src": "27124:12:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 67945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27124:49:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 67946,
                        "nodeType": "ExpressionStatement",
                        "src": "27124:49:92"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67932,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67929,
                      "src": "27103:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 67933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27107:2:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "27103:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67948,
                  "initializationExpression": {
                    "assignments": [67929],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67929,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "27096:1:92",
                        "nodeType": "VariableDeclaration",
                        "scope": 67948,
                        "src": "27091:6:92",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67928,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "27091:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67931,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27100:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27091:10:92"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "27111:3:92",
                      "subExpression": {
                        "id": 67935,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67929,
                        "src": "27111:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67937,
                    "nodeType": "ExpressionStatement",
                    "src": "27111:3:92"
                  },
                  "nodeType": "ForStatement",
                  "src": "27086:94:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67953,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "27201:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67952,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "27199:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27199:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 67955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27207:8:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67949,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "27185:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "27185:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27185:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67957,
                  "nodeType": "ExpressionStatement",
                  "src": "27185:31:92"
                }
              ]
            },
            "functionSelector": "ff762768",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_recursion_depth_is_acceptable",
            "nameLocation": "27036:34:92",
            "parameters": {
              "id": 67926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27070:2:92"
            },
            "returnParameters": {
              "id": 67927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27080:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68028,
            "nodeType": "FunctionDefinition",
            "src": "27352:500:92",
            "body": {
              "id": 68027,
              "nodeType": "Block",
              "src": "27388:464:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67966,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "27410:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 67965,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "27408:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 67967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27408:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 67968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27416:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 67962,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "27394:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 67964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "27394:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27394:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67970,
                  "nodeType": "ExpressionStatement",
                  "src": "27394:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 67974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27443:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 67975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27454:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27465:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 67977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27473:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 67971,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "27430:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "27430:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27430:45:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67979,
                  "nodeType": "ExpressionStatement",
                  "src": "27430:45:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 67983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27494:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 67984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27505:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 67985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27516:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "31",
                        "id": 67986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27524:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 67980,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "27481:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "27481:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 67987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27481:45:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 67988,
                  "nodeType": "ExpressionStatement",
                  "src": "27481:45:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 67992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27543:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 67989,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "27532:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 67991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "27532:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 67993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27532:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67994,
                  "nodeType": "ExpressionStatement",
                  "src": "27532:30:92"
                },
                {
                  "assignments": [67996, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67996,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "27574:8:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68027,
                      "src": "27569:13:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67995,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "27569:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 68009,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68000,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "27617:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 67999,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "27615:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27615:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68003,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "27632:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68002,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "27630:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27630:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 68005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27646:10:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 68006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27664:10:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27682:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 67997,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "27592:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 67998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "27592:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27592:100:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27568:124:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68011,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67996,
                        "src": "27707:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 68012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27717:10:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c61726564207061727469616c2066696c6c20616d6f756e74",
                        "id": 68013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27729:40:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45907c6fccd24ce57e369ae8a488c23553bea47366eb56cde7372e95795c6dfe",
                          "typeString": "literal_string \"Incorrect declared partial fill amount\""
                        },
                        "value": "Incorrect declared partial fill amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45907c6fccd24ce57e369ae8a488c23553bea47366eb56cde7372e95795c6dfe",
                          "typeString": "literal_string \"Incorrect declared partial fill amount\""
                        }
                      ],
                      "id": 68010,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "27698:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27698:72:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68015,
                  "nodeType": "ExpressionStatement",
                  "src": "27698:72:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68020,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "27802:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$68541",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 68019,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69838,
                              "src": "27800:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$3455_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 68021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27800:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 68017,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "27785:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 68018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "27785:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 68022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27785:23:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 68023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27810:10:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "696e636f7272656374207061727469616c2066696c6c",
                        "id": 68024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27822:24:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd4ce127cb84c621ce96cc7cbbe4112aefad7b7f30ef4f1cbecad8412be0de11",
                          "typeString": "literal_string \"incorrect partial fill\""
                        },
                        "value": "incorrect partial fill"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd4ce127cb84c621ce96cc7cbbe4112aefad7b7f30ef4f1cbecad8412be0de11",
                          "typeString": "literal_string \"incorrect partial fill\""
                        }
                      ],
                      "id": 68016,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "27776:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27776:71:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68026,
                  "nodeType": "ExpressionStatement",
                  "src": "27776:71:92"
                }
              ]
            },
            "functionSelector": "835f7cde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_fill",
            "nameLocation": "27361:17:92",
            "parameters": {
              "id": 67960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27378:2:92"
            },
            "returnParameters": {
              "id": 67961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27388:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68108,
            "nodeType": "FunctionDefinition",
            "src": "27899:506:92",
            "body": {
              "id": 68107,
              "nodeType": "Block",
              "src": "27956:449:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68035,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "27978:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 68034,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "27976:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 68036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27976:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27984:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 68031,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "27962:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 68033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "27962:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 68038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27962:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68039,
                  "nodeType": "ExpressionStatement",
                  "src": "27962:30:92"
                },
                {
                  "body": {
                    "id": 68065,
                    "nodeType": "Block",
                    "src": "28028:72:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 68059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 68055,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 68053,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68041,
                                      "src": "28050:1:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 68054,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "28054:1:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "28050:5:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 68056,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "28049:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "302e31",
                                    "id": 68057,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "28060:9:92",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  }
                                ],
                                "id": 68058,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "28059:11:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                }
                              },
                              "src": "28049:21:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "302e31",
                              "id": 68060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28072:9:92",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "0.1"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 68061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28083:6:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 68062,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68041,
                              "src": "28091:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 68050,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64310,
                              "src": "28036:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$72397",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 68052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72052,
                            "src": "28036:12:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 68063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28036:57:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 68064,
                        "nodeType": "ExpressionStatement",
                        "src": "28036:57:92"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68044,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68041,
                      "src": "28015:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 68045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28019:2:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "28015:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68066,
                  "initializationExpression": {
                    "assignments": [68041],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68041,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28008:1:92",
                        "nodeType": "VariableDeclaration",
                        "scope": 68066,
                        "src": "28003:6:92",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68040,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28003:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68043,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28012:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28003:10:92"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28023:3:92",
                      "subExpression": {
                        "id": 68047,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68041,
                        "src": "28023:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68049,
                    "nodeType": "ExpressionStatement",
                    "src": "28023:3:92"
                  },
                  "nodeType": "ForStatement",
                  "src": "27998:102:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 68070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28116:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 68067,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "28105:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 68069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "28105:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 68071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28105:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68072,
                  "nodeType": "ExpressionStatement",
                  "src": "28105:30:92"
                },
                {
                  "assignments": [68074],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68074,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "28189:10:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68107,
                      "src": "28184:15:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68073,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28184:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68081,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_400000000000000000_by_1",
                      "typeString": "int_const 400000000000000000"
                    },
                    "id": 68080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 68075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28202:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "id": 68078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "302e31",
                            "id": 68076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28207:9:92",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "302e31",
                            "id": 68077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28219:9:92",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "src": "28207:21:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          }
                        }
                      ],
                      "id": 68079,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "28206:23:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200000000000000000_by_1",
                        "typeString": "int_const 200000000000000000"
                      }
                    },
                    "src": "28202:27:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_400000000000000000_by_1",
                      "typeString": "int_const 400000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28184:45:92"
                },
                {
                  "assignments": [68083],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68083,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "28240:10:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68107,
                      "src": "28235:15:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68082,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28235:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68090,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_600000000000000000_by_1",
                      "typeString": "int_const 600000000000000000"
                    },
                    "id": 68089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 68084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28253:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_300000000000000000_by_1",
                            "typeString": "int_const 300000000000000000"
                          },
                          "id": 68087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "302e31",
                            "id": 68085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28258:9:92",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "302e32",
                            "id": 68086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28270:9:92",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200000000000000000_by_1",
                              "typeString": "int_const 200000000000000000"
                            },
                            "value": "0.2"
                          },
                          "src": "28258:21:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300000000000000000_by_1",
                            "typeString": "int_const 300000000000000000"
                          }
                        }
                      ],
                      "id": 68088,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "28257:23:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_300000000000000000_by_1",
                        "typeString": "int_const 300000000000000000"
                      }
                    },
                    "src": "28253:27:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_600000000000000000_by_1",
                      "typeString": "int_const 600000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28235:45:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68097,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "28325:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68096,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "28323:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28323:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68100,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "28340:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68099,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "28338:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28338:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 68102,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68074,
                        "src": "28354:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68103,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68083,
                        "src": "28372:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28390:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 68091,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68673,
                          "src": "28286:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 68093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25609,
                        "src": "28286:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 68095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3335305f303030",
                          "id": 68094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28307:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_350000_by_1",
                            "typeString": "int_const 350000"
                          },
                          "value": "350_000"
                        }
                      ],
                      "src": "28286:29:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28286:114:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 68106,
                  "nodeType": "ExpressionStatement",
                  "src": "28286:114:92"
                }
              ]
            },
            "functionSelector": "6e980fa9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_order_stops_for_high_price",
            "nameLocation": "27908:38:92",
            "parameters": {
              "id": 68029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27946:2:92"
            },
            "returnParameters": {
              "id": 68030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27956:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68179,
            "nodeType": "FunctionDefinition",
            "src": "28452:495:92",
            "body": {
              "id": 68178,
              "nodeType": "Block",
              "src": "28515:432:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68115,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "28537:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 68114,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "28535:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 68116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28535:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28543:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 68111,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "28521:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 68113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "28521:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 68118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28521:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68119,
                  "nodeType": "ExpressionStatement",
                  "src": "28521:30:92"
                },
                {
                  "body": {
                    "id": 68142,
                    "nodeType": "Block",
                    "src": "28587:66:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 68136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 68133,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68121,
                                "src": "28608:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "302e31",
                                    "id": 68134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "28613:9:92",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  }
                                ],
                                "id": 68135,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "28612:11:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                }
                              },
                              "src": "28608:15:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "302e31",
                              "id": 68137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28625:9:92",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "0.1"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 68138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28636:6:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 68139,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68121,
                              "src": "28644:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 68130,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64310,
                              "src": "28595:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$72397",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 68132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72052,
                            "src": "28595:12:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 68140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28595:51:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 68141,
                        "nodeType": "ExpressionStatement",
                        "src": "28595:51:92"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68124,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68121,
                      "src": "28574:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 68125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28578:2:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "28574:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68143,
                  "initializationExpression": {
                    "assignments": [68121],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68121,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28567:1:92",
                        "nodeType": "VariableDeclaration",
                        "scope": 68143,
                        "src": "28562:6:92",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68120,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28562:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68123,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28571:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28562:10:92"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28582:3:92",
                      "subExpression": {
                        "id": 68127,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68121,
                        "src": "28582:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68129,
                    "nodeType": "ExpressionStatement",
                    "src": "28582:3:92"
                  },
                  "nodeType": "ForStatement",
                  "src": "28557:96:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 68147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28669:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 68144,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "28658:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 68146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "28658:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 68148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28658:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68149,
                  "nodeType": "ExpressionStatement",
                  "src": "28658:30:92"
                },
                {
                  "assignments": [68151],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68151,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "28742:10:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68178,
                      "src": "28737:15:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68150,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28737:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68155,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_150000000000000000_by_1",
                      "typeString": "int_const 150000000000000000"
                    },
                    "id": 68154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 68152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28755:9:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e3035",
                      "id": 68153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28767:10:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000_by_1",
                        "typeString": "int_const 50000000000000000"
                      },
                      "value": "0.05"
                    },
                    "src": "28755:22:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_150000000000000000_by_1",
                      "typeString": "int_const 150000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28737:40:92"
                },
                {
                  "assignments": [68157],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68157,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "28788:10:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68178,
                      "src": "28783:15:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68156,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28783:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68161,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    },
                    "id": 68160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 68158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28801:9:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e31",
                      "id": 68159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28813:9:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "src": "28801:21:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28783:39:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68168,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "28867:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68167,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "28865:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28865:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68171,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "28882:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68170,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "28880:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28880:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 68173,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68151,
                        "src": "28896:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68174,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68157,
                        "src": "28914:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28932:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 68162,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68673,
                          "src": "28828:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 68164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25609,
                        "src": "28828:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 68166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3335305f303030",
                          "id": 68165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28849:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_350000_by_1",
                            "typeString": "int_const 350000"
                          },
                          "value": "350_000"
                        }
                      ],
                      "src": "28828:29:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28828:114:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 68177,
                  "nodeType": "ExpressionStatement",
                  "src": "28828:114:92"
                }
              ]
            },
            "functionSelector": "d080b629",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_order_stops_for_filled_mid_offer",
            "nameLocation": "28461:44:92",
            "parameters": {
              "id": 68109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28505:2:92"
            },
            "returnParameters": {
              "id": 68110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28515:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68250,
            "nodeType": "FunctionDefinition",
            "src": "28951:496:92",
            "body": {
              "id": 68249,
              "nodeType": "Block",
              "src": "29016:431:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68186,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "29038:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 68185,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "29036:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 68187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29036:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29044:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 68182,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "29022:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 68184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "29022:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 68189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29022:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68190,
                  "nodeType": "ExpressionStatement",
                  "src": "29022:30:92"
                },
                {
                  "body": {
                    "id": 68213,
                    "nodeType": "Block",
                    "src": "29088:66:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 68207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 68204,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68192,
                                "src": "29109:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "302e31",
                                    "id": 68205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29114:9:92",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  }
                                ],
                                "id": 68206,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "29113:11:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                }
                              },
                              "src": "29109:15:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "302e31",
                              "id": 68208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29126:9:92",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "0.1"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 68209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29137:6:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 68210,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68192,
                              "src": "29145:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 68201,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64310,
                              "src": "29096:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$72397",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 68203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72052,
                            "src": "29096:12:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 68211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29096:51:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 68212,
                        "nodeType": "ExpressionStatement",
                        "src": "29096:51:92"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68195,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68192,
                      "src": "29075:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 68196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29079:2:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "29075:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68214,
                  "initializationExpression": {
                    "assignments": [68192],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68192,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "29068:1:92",
                        "nodeType": "VariableDeclaration",
                        "scope": 68214,
                        "src": "29063:6:92",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68191,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "29063:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68194,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29072:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "29063:10:92"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "29083:3:92",
                      "subExpression": {
                        "id": 68198,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68192,
                        "src": "29083:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68200,
                    "nodeType": "ExpressionStatement",
                    "src": "29083:3:92"
                  },
                  "nodeType": "ForStatement",
                  "src": "29058:96:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 68218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29170:18:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 68215,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "29159:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 68217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71879,
                      "src": "29159:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 68219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29159:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68220,
                  "nodeType": "ExpressionStatement",
                  "src": "29159:30:92"
                },
                {
                  "assignments": [68222],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68222,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "29243:10:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68249,
                      "src": "29238:15:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68221,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29238:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68226,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    },
                    "id": 68225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 68223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29256:9:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e31",
                      "id": 68224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29268:9:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "src": "29256:21:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29238:39:92"
                },
                {
                  "assignments": [68228],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68228,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "29288:10:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68249,
                      "src": "29283:15:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68227,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29283:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68232,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_300000000000000000_by_1",
                      "typeString": "int_const 300000000000000000"
                    },
                    "id": 68231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 68229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29301:9:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e32",
                      "id": 68230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29313:9:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200000000000000000_by_1",
                        "typeString": "int_const 200000000000000000"
                      },
                      "value": "0.2"
                    },
                    "src": "29301:21:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_300000000000000000_by_1",
                      "typeString": "int_const 300000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29283:39:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68239,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "29367:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68238,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "29365:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29365:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68242,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "29382:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68241,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "29380:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29380:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 68244,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68222,
                        "src": "29396:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68245,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68228,
                        "src": "29414:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29432:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 68233,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68673,
                          "src": "29328:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 68235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25609,
                        "src": "29328:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 68237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3335305f303030",
                          "id": 68236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29349:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_350000_by_1",
                            "typeString": "int_const 350000"
                          },
                          "value": "350_000"
                        }
                      ],
                      "src": "29328:29:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29328:114:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 68248,
                  "nodeType": "ExpressionStatement",
                  "src": "29328:114:92"
                }
              ]
            },
            "functionSelector": "f4635d04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_order_stops_for_filled_after_offer",
            "nameLocation": "28960:46:92",
            "parameters": {
              "id": 68180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29006:2:92"
            },
            "returnParameters": {
              "id": 68181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29016:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68276,
            "nodeType": "FunctionDefinition",
            "src": "29451:188:92",
            "body": {
              "id": 68275,
              "nodeType": "Block",
              "src": "29523:116:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d4f726465722f74616b657257616e74732f31363062697473",
                        "id": 68256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29545:31:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        },
                        "value": "mgv/mOrder/takerWants/160bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        }
                      ],
                      "expression": {
                        "id": 68253,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "29529:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 68255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "29529:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 68257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29529:48:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68258,
                  "nodeType": "ExpressionStatement",
                  "src": "29529:48:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68263,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "29601:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68262,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "29599:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29599:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68266,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "29610:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68265,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "29608:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29608:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        "id": 68270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 68268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29618:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "313630",
                          "id": 68269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29621:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_160_by_1",
                            "typeString": "int_const 160"
                          },
                          "value": "160"
                        },
                        "src": "29618:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29626:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29629:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68259,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "29583:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 68261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "29583:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29583:51:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 68274,
                  "nodeType": "ExpressionStatement",
                  "src": "29583:51:92"
                }
              ]
            },
            "functionSelector": "a218492e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
            "nameLocation": "29460:53:92",
            "parameters": {
              "id": 68251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29513:2:92"
            },
            "returnParameters": {
              "id": 68252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29523:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68362,
            "nodeType": "FunctionDefinition",
            "src": "29643:581:92",
            "body": {
              "id": 68361,
              "nodeType": "Block",
              "src": "29698:526:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68283,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "29720:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 68282,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "29718:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 68284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29718:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29726:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 68279,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "29704:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 68281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "29704:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 68286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29704:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68287,
                  "nodeType": "ExpressionStatement",
                  "src": "29704:30:92"
                },
                {
                  "assignments": [68289],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68289,
                      "mutability": "mutable",
                      "name": "mkrBal",
                      "nameLocation": "29745:6:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68361,
                      "src": "29740:11:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68288,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29740:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68297,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68294,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64310,
                            "src": "29777:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$72397",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 68293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "29769:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 68292,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29769:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29769:12:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 68290,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68676,
                        "src": "29754:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 68291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73347,
                      "src": "29754:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 68296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29754:28:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29740:42:92"
                },
                {
                  "assignments": [68299],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68299,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "29793:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68361,
                      "src": "29788:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68298,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29788:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68307,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 68302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29812:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 68303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29823:9:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 68304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29834:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 68305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29842:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 68300,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "29799:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 68301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "29799:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 68306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29799:45:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29788:56:92"
                },
                {
                  "assignments": [68309, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68309,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "29857:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68361,
                      "src": "29852:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68308,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29852:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 68327,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68313,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "29898:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68312,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "29896:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29896:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68316,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "29913:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68315,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "29911:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29911:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 68319,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68299,
                                "src": "29941:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 68320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29946:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "31",
                                "id": 68321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29949:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 68322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29958:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 68323,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "29940:25:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 68318,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "29927:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 68324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29927:39:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29974:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68310,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "29878:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 68311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26106,
                      "src": "29878:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29878:106:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29851:133:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 68329,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68309,
                          "src": "30001:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 68330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30014:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "30001:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e6970652073686f756c642073756363656564",
                        "id": 68332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30017:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8dc00572b0a01c7308e41ed384f8520a436fd96f91a070e50f7a00ed1792a43",
                          "typeString": "literal_string \"snipe should succeed\""
                        },
                        "value": "snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8dc00572b0a01c7308e41ed384f8520a436fd96f91a070e50f7a00ed1792a43",
                          "typeString": "literal_string \"snipe should succeed\""
                        }
                      ],
                      "id": 68328,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "29990:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 68333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29990:50:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68334,
                  "nodeType": "ExpressionStatement",
                  "src": "29990:50:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68339,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68676,
                                "src": "30066:4:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 68338,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69855,
                              "src": "30064:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 68340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30064:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 68342,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68679,
                                "src": "30075:5:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$75210",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 68341,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                69787, 69804, 69821, 69838, 69855
                              ],
                              "referencedDeclaration": 69855,
                              "src": "30073:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 68343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30073:8:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 68336,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "30055:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 68337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "best",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23618,
                          "src": "30055:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 68344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30055:27:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 68345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30084:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "6f666665722073686f756c6420626520676f6e65",
                        "id": 68346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30087:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fbd36cb232f278c835c7259d0ee92266836962515b643fd30069be6692adb70",
                          "typeString": "literal_string \"offer should be gone\""
                        },
                        "value": "offer should be gone"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fbd36cb232f278c835c7259d0ee92266836962515b643fd30069be6692adb70",
                          "typeString": "literal_string \"offer should be gone\""
                        }
                      ],
                      "id": 68335,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "30046:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30046:64:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68348,
                  "nodeType": "ExpressionStatement",
                  "src": "30046:64:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68354,
                                "name": "mkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64310,
                                "src": "30155:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$72397",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 68353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "30147:7:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 68352,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "30147:7:92",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 68355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30147:12:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 68350,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "30132:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 68351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73347,
                          "src": "30132:14:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 68356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30132:28:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68357,
                        "name": "mkrBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68289,
                        "src": "30168:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6d6b722062616c616e63652073686f756c64206e6f74206368616e6765",
                        "id": 68358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30182:31:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61a78696e6408bf41eeb11bcd131b099753d090a2f0776461f732862662c90eb",
                          "typeString": "literal_string \"mkr balance should not change\""
                        },
                        "value": "mkr balance should not change"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61a78696e6408bf41eeb11bcd131b099753d090a2f0776461f732862662c90eb",
                          "typeString": "literal_string \"mkr balance should not change\""
                        }
                      ],
                      "id": 68349,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "30116:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30116:103:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68360,
                  "nodeType": "ExpressionStatement",
                  "src": "30116:103:92"
                }
              ]
            },
            "functionSelector": "a1b78bc8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_with_0_wants_ejects_offer",
            "nameLocation": "29652:36:92",
            "parameters": {
              "id": 68277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29688:2:92"
            },
            "returnParameters": {
              "id": 68278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29698:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68424,
            "nodeType": "FunctionDefinition",
            "src": "30228:380:92",
            "body": {
              "id": 68423,
              "nodeType": "Block",
              "src": "30279:329:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68369,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "30302:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68368,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30300:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30300:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68372,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "30311:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68371,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30309:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30309:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30319:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 68365,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "30285:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 68367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23370,
                      "src": "30285:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 68375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30285:36:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68376,
                  "nodeType": "ExpressionStatement",
                  "src": "30285:36:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68381,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68673,
                            "src": "30343:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 68380,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69787,
                          "src": "30341:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$22211_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 68382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30341:6:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30349:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 68377,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68679,
                        "src": "30327:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$75210",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 68379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74104,
                      "src": "30327:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 68384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30327:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68385,
                  "nodeType": "ExpressionStatement",
                  "src": "30327:30:92"
                },
                {
                  "assignments": [68387],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68387,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "30368:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68423,
                      "src": "30363:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68386,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "30363:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68395,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 68390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30387:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 68391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30396:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3132305f303030",
                        "id": 68392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30405:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_120000_by_1",
                          "typeString": "int_const 120000"
                        },
                        "value": "120_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 68393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30414:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_120000_by_1",
                          "typeString": "int_const 120000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 68388,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64310,
                        "src": "30374:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$72397",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 68389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72052,
                      "src": "30374:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 68394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30374:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30363:53:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6e6f74456e6f756768476173466f724d616b65725472616465",
                        "id": 68399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30438:31:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                          "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                        },
                        "value": "mgv/notEnoughGasForMakerTrade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                          "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                        }
                      ],
                      "expression": {
                        "id": 68396,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "30422:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5425",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 68398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5057,
                      "src": "30422:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 68400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30422:48:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68401,
                  "nodeType": "ExpressionStatement",
                  "src": "30422:48:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68408,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "30510:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68407,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30508:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30508:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68411,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "30525:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68410,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30523:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30523:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 68414,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68387,
                                "src": "30553:3:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 68415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30558:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 68416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30567:7:92",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3132305f303030",
                                "id": 68417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30576:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_120000_by_1",
                                  "typeString": "int_const 120000"
                                },
                                "value": "120_000"
                              }
                            ],
                            "id": 68418,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "30552:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 68413,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            70614, 70650, 70686, 70722, 70758
                          ],
                          "referencedDeclaration": 70758,
                          "src": "30539:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 68419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30539:46:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30593:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                            "typeString": "uint256[4] memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 68402,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68673,
                          "src": "30476:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 68404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "snipes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26106,
                        "src": "30476:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 68406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3132305f303030",
                          "id": 68405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30492:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_120000_by_1",
                            "typeString": "int_const 120000"
                          },
                          "value": "120_000"
                        }
                      ],
                      "src": "30476:24:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30476:127:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 68422,
                  "nodeType": "ExpressionStatement",
                  "src": "30476:127:92"
                }
              ]
            },
            "functionSelector": "2e7ed0dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_unsafe_gas_left_fails_order",
            "nameLocation": "30237:32:92",
            "parameters": {
              "id": 68363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30269:2:92"
            },
            "returnParameters": {
              "id": 68364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30279:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68442,
            "nodeType": "FunctionDefinition",
            "src": "30612:134:92",
            "body": {
              "id": 68441,
              "nodeType": "Block",
              "src": "30677:69:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68431,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "30701:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68430,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30699:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30699:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68434,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "30710:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68433,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30708:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30708:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30718:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 68437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30727:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30736:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68427,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "30683:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 68429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "30683:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30683:58:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 68440,
                  "nodeType": "ExpressionStatement",
                  "src": "30683:58:92"
                }
              ]
            },
            "functionSelector": "e0c77339",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_empty_book_does_not_revert",
            "nameLocation": "30621:46:92",
            "parameters": {
              "id": 68425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30667:2:92"
            },
            "returnParameters": {
              "id": 68426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30677:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68474,
            "nodeType": "FunctionDefinition",
            "src": "30750:265:92",
            "body": {
              "id": 68473,
              "nodeType": "Block",
              "src": "30822:193:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68449,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "30846:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68448,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30844:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30844:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68452,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "30855:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68451,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "30853:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30853:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30863:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 68455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30872:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30881:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68445,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "30828:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 68447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "30828:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30828:58:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 68458,
                  "nodeType": "ExpressionStatement",
                  "src": "30828:58:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "30910:30:92",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 68463,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68676,
                                  "src": "30924:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 68462,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "30922:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 68464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30922:7:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 68466,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68679,
                                  "src": "30933:5:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$75210",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 68465,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  69787, 69804, 69821, 69838, 69855
                                ],
                                "referencedDeclaration": 69855,
                                "src": "30931:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 68467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30931:8:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 68460,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68673,
                              "src": "30911:3:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 68461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28040,
                            "src": "30911:10:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 68468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30911:29:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206e6f74206265206c6f636b6564206166746572206d61726b65744f72646572206f6e20656d707479204f42",
                        "id": 68470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30948:56:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d95fa25734b7f766d0c6e9620c69c0643a22822266c9832e7726ad1c64600235",
                          "typeString": "literal_string \"mgv should not be locked after marketOrder on empty OB\""
                        },
                        "value": "mgv should not be locked after marketOrder on empty OB"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d95fa25734b7f766d0c6e9620c69c0643a22822266c9832e7726ad1c64600235",
                          "typeString": "literal_string \"mgv should not be locked after marketOrder on empty OB\""
                        }
                      ],
                      "id": 68459,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [269, 290],
                      "referencedDeclaration": 290,
                      "src": "30892:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 68471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30892:118:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68472,
                  "nodeType": "ExpressionStatement",
                  "src": "30892:118:92"
                }
              ]
            },
            "functionSelector": "bec2e7d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_empty_book_does_not_leave_lock_on",
            "nameLocation": "30759:53:92",
            "parameters": {
              "id": 68443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30812:2:92"
            },
            "returnParameters": {
              "id": 68444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30822:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68507,
            "nodeType": "FunctionDefinition",
            "src": "31019:274:92",
            "body": {
              "id": 68506,
              "nodeType": "Block",
              "src": "31070:223:92",
              "statements": [
                {
                  "assignments": [68478, 68480, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68478,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "31082:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68506,
                      "src": "31077:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68477,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31077:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68480,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "31092:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68506,
                      "src": "31087:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68479,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31087:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 68493,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68484,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "31129:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68483,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "31127:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31127:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68487,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "31144:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68486,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "31142:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31142:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 68489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31158:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 68490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31167:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31182:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68481,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "31104:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 68482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "31104:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31104:88:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31076:116:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68495,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68478,
                        "src": "31207:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 68496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31212:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b657220676f7420746f6f206d756368",
                        "id": 68497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31215:20:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        },
                        "value": "Taker got too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        }
                      ],
                      "id": 68494,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "31198:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31198:38:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68499,
                  "nodeType": "ExpressionStatement",
                  "src": "31198:38:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68501,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68480,
                        "src": "31251:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 68502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31257:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 68503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31266:21:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 68500,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "31242:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31242:46:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68505,
                  "nodeType": "ExpressionStatement",
                  "src": "31242:46:92"
                }
              ]
            },
            "functionSelector": "2c4e73cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_is_zero_succeeds",
            "nameLocation": "31028:32:92",
            "parameters": {
              "id": 68475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31060:2:92"
            },
            "returnParameters": {
              "id": 68476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31070:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68540,
            "nodeType": "FunctionDefinition",
            "src": "31297:274:92",
            "body": {
              "id": 68539,
              "nodeType": "Block",
              "src": "31348:223:92",
              "statements": [
                {
                  "assignments": [68511, 68513, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68511,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "31360:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68539,
                      "src": "31355:8:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68510,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31355:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68513,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "31370:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 68539,
                      "src": "31365:9:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68512,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31365:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 68526,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 68517,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68676,
                            "src": "31407:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68516,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "31405:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31405:7:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 68520,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68679,
                            "src": "31422:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$75210",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 68519,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            69787, 69804, 69821, 69838, 69855
                          ],
                          "referencedDeclaration": 69855,
                          "src": "31420:1:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$24224_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 68521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31420:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31436:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 68523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31451:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31460:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68514,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68673,
                        "src": "31382:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$22211",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 68515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25609,
                      "src": "31382:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 68525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31382:88:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31354:116:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68528,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68511,
                        "src": "31485:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 68529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31490:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b657220676f7420746f6f206d756368",
                        "id": 68530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31493:20:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        },
                        "value": "Taker got too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        }
                      ],
                      "id": 68527,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "31476:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31476:38:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68532,
                  "nodeType": "ExpressionStatement",
                  "src": "31476:38:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68534,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68513,
                        "src": "31529:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 68535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31535:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 68536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31544:21:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 68533,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779, 2804, 2817, 2833, 2875, 2917, 2959, 2996, 3033,
                        3070, 320, 345, 375, 400, 459, 484, 514, 539, 1639, 1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "31520:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 68537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31520:46:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68538,
                  "nodeType": "ExpressionStatement",
                  "src": "31520:46:92"
                }
              ]
            },
            "functionSelector": "0b851352",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerGives_is_zero_succeeds",
            "nameLocation": "31306:32:92",
            "parameters": {
              "id": 68508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31338:2:92"
            },
            "returnParameters": {
              "id": 68509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31348:0:92"
            },
            "scope": 68541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64306,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 69891,
              "src": "298:12:92"
            },
            "id": 64307,
            "nodeType": "InheritanceSpecifier",
            "src": "298:12:92"
          }
        ],
        "canonicalName": "TakerOperationsTest",
        "contractDependencies": [22954, 23080, 71682, 72397, 72989, 75210],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          68541, 69891, 24088, 70380, 71483, 3455, 2022, 1786
        ],
        "name": "TakerOperationsTest",
        "nameLocation": "275:19:92",
        "scope": 68542,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 92
}
